{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>Hello there!</p> <p>My name is Pavel Sobolev (he/him), also known as <code>paveloom</code> (<code>pave</code>, like <code>dave</code>, then <code>loom</code>, like <code>doom</code>). Although I\u2019m comfortable with being called Pave since it is pretty common to shorten nicknames to the first few comfortably sounding syllables in high-paced video games, and I got somewhat accustomed to that in my youth. That\u2019s just easier to pronounce, anyway.</p> <p>I am a self-taught software engineer who is currently busy developing desktop application software. I was first introduced to programming when I learned Fortran in my first year of university. While I didn\u2019t have a strong interest in it at first, the more code I wrote, the more I came to appreciate the power of programming and how one can solve problems and create new things with it. As I gained more experience, I started to explore topics beyond the curriculum (I was an astronomer student at the time) and eventually became an open sourcerer, which means that I contribute to open source projects and make my work available for others to use and build upon. I have since learned a number of other programming languages, including Julia, Rust, Zig, C, C++, in that order. These are not necessarily replacements for each other but are extensions of the overall experience, which goes far beyond the language of choice.</p> <p>I am always striving to learn new things and improve my skills. You can check out the notes I have recorded in my digital garden, Pensieve, and my work is available for others to see in the Git section. I keep a journal for logging my life and work, and I think you might find something useful in there, it\u2019s in the Journal section. Finally, I wrote a handful of blog entries back in the day, you can read those in the Blog section.</p>"},{"location":"#quick-links","title":"Quick links","text":"<ul> <li>GitHub / GitLab / Codeberg</li> <li>YouTube / LBRY</li> <li>Streams on Odysee</li> </ul>"},{"location":"#contacts","title":"Contacts","text":"<ul> <li>Email: contact@paveloom.dev</li> </ul>"},{"location":"#site-navigation","title":"Site navigation","text":"<p>Several shortcuts are available for the desktop users. There are two modes:</p> <code>global</code> <p>This mode is active when search is not focussed and when there\u2019s no other focussed element that is susceptible to keyboard input. The following keys are bound:</p> <ul> <li>F , S , / : open search dialog</li> <li>P , ,, Left : go to previous page</li> <li>N , ., Right : go to next page</li> </ul> <code>search</code> <p>This mode is active when the search is focused. It provides several key bindings to make search accessible and navigable via keyboard:</p> <ul> <li>Down , Up : select next / previous result</li> <li>Esc , Tab : close search dialog</li> <li>Enter : follow selected result</li> </ul> <p>You might also want to take a look at how to use the search.</p>"},{"location":"git/","title":"Git","text":"<p>A list of my public Git repositories.</p>"},{"location":"git/#apps","title":"Apps","text":"Desktop and Web apps. Poking the GUI apps world with a stick"},{"location":"git/#eiri","title":"Eiri","text":"<p>A prototype of Tidings using FLTK</p> <p><code>#fltk-rs</code> <code>#rust</code> <code>#unfinished</code></p>"},{"location":"git/#fltk-rs-playground","title":"<code>fltk-rs-playground</code>","text":"<p>A playground to test all things <code>fltk-rs</code></p> <p><code>#fltk-rs</code></p>"},{"location":"git/#hello-world","title":"<code>hello-world</code>","text":"<p>A hello-world Tauri app</p> <p><code>#hello-world</code> <code>#tauri</code> <code>#svelte</code> <code>#rust</code></p>"},{"location":"git/#julialang-slack-history","title":"<code>julialang-slack-history</code>","text":"<p>A read-only Slack clone for reading history from julialang.slack.com</p> <p><code>#slack-clone</code> <code>#svelte</code> <code>#julia</code> <code>#unfinished</code></p>"},{"location":"git/#kirk","title":"Kirk","text":"<code>#c</code> <code>#work-in-progress</code>"},{"location":"git/#morbo","title":"Morbo","text":"<code>#work-in-progress</code>"},{"location":"git/#shuchu","title":"Shuchu","text":"<p>An app to turn your time into self-proclaimed rewards</p> <p><code>#fltk-rs</code> <code>#rust</code> <code>#unfinished</code></p>"},{"location":"git/#tracy","title":"Tracy","text":"<p>A Flatpak manifest for the Tracy Profiler</p> <p><code>#flatpak</code></p>"},{"location":"git/#tidings","title":"Tidings","text":"<p>Finally, an RSS reader without a built-in browser</p> <p><code>#gtk-rs</code> <code>#rust</code> <code>#unfinished</code></p>"},{"location":"git/#complex","title":"Complex","text":"Complex solutions. Research and confusing projects are here"},{"location":"git/#c1","title":"C1","text":"<p>A Fortran module for computing a correlogram and a periodogram of one-dimensional non-uniform time series</p> <p><code>#time-series</code> <code>#astronomy</code> <code>#fortran</code></p>"},{"location":"git/#c2","title":"C2","text":"<p>A comparison of covariance functions used to inference stellar rotation periods of stars</p> <p>Followed by GPKernels</p> <p><code>#astrophysics</code> <code>#gaussian-processes</code> <code>#stellar-rotation</code> <code>#jupyter</code> <code>#python</code> <code>#unfinished</code></p>"},{"location":"git/#c3","title":"C3","text":"<p>A Fortran module for performing spectral correlation analysis of time series</p> <p><code>#time-series-analysis</code> <code>#fortran</code></p>"},{"location":"git/#c31","title":"C3.1","text":"<p>SCATS interface with a backend written in C++ and a frontend written in Python</p> <p>Followed by <code>Scats.jl</code></p> <p><code>#time-series-analysis</code> <code>#python</code> <code>#c++</code> <code>#unfinished</code></p>"},{"location":"git/#gpkernels","title":"GPKernels","text":"<p>Study of the influence of selection of kernels for Gaussian processes on the modeling of light curves</p> <p><code>#astronomy</code> <code>#gaussian-processes</code> <code>#julia</code> <code>#unfinished</code></p>"},{"location":"git/#pmg","title":"PMG","text":"<p>Spatial-kinematic modelling of a flat subsystem of the Milky Way by the method of maximum likelihood</p> <p><code>#astronomy</code> <code>#julia</code> <code>#rust</code></p>"},{"location":"git/#paveloom-cgithubio","title":"<code>paveloom-c.github.io</code>","text":"A root repository for GitHub Pages"},{"location":"git/#docker","title":"Docker","text":"Docker/OCI images. Ready-made sandboxes for lazy people"},{"location":"git/#binder-base","title":"<code>binder-base</code>","text":"<p>Yet another base image for Binder</p> <p><code>#binder</code> <code>#binder-ready</code> <code>#jupyter</code></p>"},{"location":"git/#binder-julia","title":"<code>binder-julia</code>","text":"<p>Basically, <code>paveloom/binder-base</code> + Julia</p> <p><code>#binder</code> <code>#binder-ready</code> <code>#jupyter</code> <code>#julia</code></p>"},{"location":"git/#binder-julia-plots","title":"<code>binder-julia-plots</code>","text":"<p>If <code>paveloom/binder-julia</code> and <code>paveloom/binder-tex</code> had a baby</p> <p><code>#binder</code> <code>#binder-ready</code> <code>#jupyter</code> <code>#tex</code> <code>#julia</code></p>"},{"location":"git/#binder-tex","title":"<code>binder-tex</code>","text":"<p>Basically, <code>paveloom/binder-base</code> + TeX dependencies</p> <p><code>#binder</code> <code>#binder-ready</code> <code>#jupyter</code> <code>#tex</code></p>"},{"location":"git/#dev","title":"<code>dev</code>","text":"<p>An OCI compliant image containing my personal development environment</p> <p><code>#image</code> <code>#oci</code> <code>#development-environment</code> <code>#docker</code></p>"},{"location":"git/#paveloom-os","title":"<code>paveloom-os</code>","text":"<p>An OSTree native container for personal use</p> <p><code>#image</code> <code>#podman</code> <code>#oci</code> <code>#ostree</code></p>"},{"location":"git/#forks","title":"Forks","text":"Small little patches here and there"},{"location":"git/#codestats-box-python","title":"<code>codestats-box-python</code>","text":"<p>Update a pinned gist to contain your Code::Stats</p> <p><code>#codestats</code></p>"},{"location":"git/#ffmpeg-static","title":"<code>ffmpeg-static</code>","text":"<p>A script to make a static build of FFmpeg</p> <p><code>#ffmpeg</code> <code>#bash</code></p>"},{"location":"git/#lbry-android","title":"<code>lbry-android</code>","text":"<p>The LBRY Android app (now without a blacklist)</p> <p><code>#lbry</code> <code>#lbry-android</code> <code>#ci-cd</code></p>"},{"location":"git/#lbry-desktop","title":"<code>lbry-desktop</code>","text":"<p>A browser and wallet for LBRY, the decentralized, user-controlled content marketplace (now without a blacklist)</p> <p><code>#lbry</code> <code>#lbry-desktop</code> <code>#ci-cd</code></p>"},{"location":"git/#scm-music-player","title":"<code>scm-music-player</code>","text":"<p>Seamless music for your website. HTML5 music player with continuous playback cross pages</p> <p><code>#music</code> <code>#player</code> <code>#html5</code></p>"},{"location":"git/#waka-box","title":"<code>waka-box</code>","text":"<p>Update a pinned gist to contain your weekly WakaTime stats</p> <p><code>#wakatime</code></p>"},{"location":"git/#zig-tracy-bindings","title":"<code>zig-tracy-bindings</code>","text":"<p>Zig language bindings for the Tracy Profiler</p> <p><code>#zig</code></p>"},{"location":"git/#julia","title":"Julia","text":"Julia packages. There is even a custom registry for some reason"},{"location":"git/#exceptionsjl","title":"<code>Exceptions.jl</code>","text":"<p>Easy exception creation</p> <p><code>#exceptions</code> <code>#exception-handling</code> <code>#julia</code></p>"},{"location":"git/#hillregionsjl","title":"<code>HillRegions.jl</code>","text":"<p>A recipe to plot Hill regions</p> <p><code>#hill-regions</code> <code>#julia</code></p>"},{"location":"git/#paveloom-jgithubio","title":"<code>paveloom-j.github.io</code>","text":"A root repository for GitHub Pages"},{"location":"git/#paveloomregistry","title":"PaveloomRegistry","text":"<p>A personal Julia packages registry</p> <p><code>#julia-registry</code> <code>#julia</code></p>"},{"location":"git/#pdfhighlightsjl","title":"<code>PDFHighlights.jl</code>","text":"<p>Export highlights from PDF files to a CSV file with one call</p> <p><code>#pdf</code> <code>#csv</code> <code>#poppler</code> <code>#julia</code> <code>#c</code></p>"},{"location":"git/#scatsjl","title":"<code>Scats.jl</code>","text":"<p>Spectral correlation analysis of time series (not supposed to be used)</p> <p><code>#time-series</code> <code>#periodogram</code> <code>#time-series-analysis</code> <code>#correlogram</code> <code>#julia</code> <code>#unfinished</code></p>"},{"location":"git/#minor","title":"Minor","text":"Minor repositories. Small, but sometimes quite useful"},{"location":"git/#makefiles","title":"Makefiles","text":"<p>Makefile templates for compiling programs and publishing code on GitHub</p> <p><code>#git</code> <code>#makefile</code></p>"},{"location":"git/#qtsettingsdemo","title":"QtSettingsDemo","text":"<p>Settings file generator: demonstration of the graphical interface created using Qt in the Qt Creator environment</p> <p><code>#qtcreator</code> <code>#qt5-gui</code></p>"},{"location":"git/#other","title":"Other","text":"Other stuff"},{"location":"git/#orgavatars","title":"OrgAvatars","text":"Organizations\u2019 avatars"},{"location":"git/#ids","title":"IDs","text":"<p>IDs for identification (psychological process)</p> <p><code>#unfinished</code></p>"},{"location":"git/#a-latex-pgf-tikz-animation","title":"A LaTeX-PGF-TikZ Animation","text":"<p>Instructions for how to convert a PGF/TikZ picture with variable data in an animation</p> <p><code>#ffmpeg</code> <code>#tex</code> <code>#bash</code></p>"},{"location":"git/#personal","title":"Personal","text":"Projects that are very specific to me"},{"location":"git/#dotfiles","title":"<code>dotfiles</code>","text":"Personal system configuration"},{"location":"git/#dsa","title":"DSA","text":"<p>Data Structures &amp; Algorithms</p> <p><code>#data-structures-and-algorithms</code> <code>#c++</code></p>"},{"location":"git/#exercism","title":"Exercism","text":"<p>Exercism exercises completed by me</p> <p><code>#rust</code> <code>#unfinished</code></p>"},{"location":"git/#mini-database-server-in-zig","title":"<code>mini-database-server-in-zig</code>","text":"<p>Mini database server in Zig</p> <p><code>#zig</code> <code>#database</code></p>"},{"location":"git/#nixpkgs","title":"<code>nixpkgs</code>","text":"Personal Nix Packages collection"},{"location":"git/#old_wiki","title":"<code>old_wiki</code>","text":"<p>An old version of Pensieve, powered by Franklin</p> <p><code>#franklin</code> <code>#julia</code></p>"},{"location":"git/#opensearchdescriptionfiles","title":"OpenSearchDescriptionFiles","text":"<p>Custom OpenSearch description files</p> <p><code>#search-engine</code> <code>#opensearch</code></p>"},{"location":"git/#paveloom","title":"Paveloom","text":"<p>A special repository to manage my GitHub profile\u2019s landing page</p> <p><code>#github-readme</code></p>"},{"location":"git/#site","title":"Site","text":"Personal website"},{"location":"git/#rust","title":"Rust","text":"Rust projects"},{"location":"git/#simulated_annealing","title":"<code>simulated_annealing</code>","text":"<p>An interface for global function optimization using simulated annealing</p> <p><code>#rust</code> <code>#optimization</code> <code>#simulated-annealing</code></p>"},{"location":"git/#typescript","title":"TypeScript","text":"TypeScript projects"},{"location":"git/#gnome-shell-memento-mori","title":"<code>gnome-shell-memento-mori</code>","text":"<p>Make every second of your life count. Literally!</p> <p><code>#gnome-shell-extension</code> <code>#typescript</code></p>"},{"location":"git/#university","title":"University","text":"Projects developed during my time studying at Saint Petersburg State University"},{"location":"git/#astrometric-workshop-summer-2019","title":"Astrometric Workshop Summer 2019","text":"<p>Scripts and programs from the astrometric workshop</p> <p><code>#observations</code> <code>#astronomy</code> <code>#astrometry</code></p>"},{"location":"git/#astrophysical-workshop-summer-2021","title":"Astrophysical Workshop Summer 2021","text":"<p>Materials developed during the laboratory work at the astrophysical workshop</p> <p><code>#astronomy</code> <code>#astrophysics</code> <code>#tectonic</code> <code>#xetex</code> <code>#julia</code></p>"},{"location":"git/#1st-semester-2017-3rd-semester-2018","title":"1st Semester (2017) \u2014 3rd Semester (2018)","text":""},{"location":"git/#programming-exercises-s01-2017-to-s03-2018","title":"Programming Exercises S01-2017-to-S03-2018","text":"<p>An archive of the first programming exercises</p> <p><code>#fortran</code> <code>#exercises</code></p>"},{"location":"git/#4th-semester-2019","title":"4th Semester (2019)","text":""},{"location":"git/#optics-laboratory-workshop-s04-2019","title":"Optics Laboratory Workshop S04-2019","text":"<p>Computational scripts for reports for the optics laboratory workshop</p> <p><code>#laboratory-exercises</code> <code>#r</code></p>"},{"location":"git/#programming-course-s04-2019","title":"Programming Course S04-2019","text":"<p>Using Fortran interface to the GNU Scientific Library, parallelizing code with OpenMP and MPI</p> <p><code>#openmp</code> <code>#mpi</code> <code>#fortran</code></p>"},{"location":"git/#computational-workshop-s04-2019","title":"Computational Workshop S04-2019","text":"<p>Matrices multiplication, Newton\u2019s / Lagrange\u2019s interpolation, Gauss\u2019s / Seidel\u2019s methods for solving a system of linear differential equations, numerical differentiation, spline interpolation, Fourier transform</p> <p><code>#exercises</code> <code>#numerical-methods-implementation</code> <code>#fortran</code></p>"},{"location":"git/#5th-semester-2019","title":"5th Semester (2019)","text":""},{"location":"git/#computational-workshop-s05-2019","title":"Computational Workshop S05-2019","text":"<p>Gauss\u2019s quadrature formula, computing integrals from functions with singularities, computing multiple integrals by the Monte Carlo method, solving ODE numerically, least-squares method, QR algorithm, Jacobi eigenvalue algorithm, solving boundary value problems</p> <p><code>#exercises</code> <code>#numerical-methods-implementation</code> <code>#fortran</code></p>"},{"location":"git/#python-programming-course-s05-2019","title":"Python Programming Course S05-2019","text":"<p>Scripts from the Python programming course</p> <p><code>#game-of-life</code> <code>#python</code></p>"},{"location":"git/#6th-semester-2020","title":"6th Semester (2020)","text":""},{"location":"git/#celestial-mechanics-s06-2020","title":"Celestial Mechanics S06-2020","text":"<p>Calculating the ephemeris, determining the preliminary orbit</p> <p><code>#astronomy</code> <code>#fortran</code></p>"},{"location":"git/#astronomical-software-course-s06-2020","title":"Astronomical Software Course S06-2020","text":"<p>Procedures and programs from the Astronomical Software course</p> <p><code>#astronomy</code> <code>#midas</code></p>"},{"location":"git/#7th-semester-2020","title":"7th Semester (2020)","text":""},{"location":"git/#astronomical-observation-workshop-s07-2020","title":"Astronomical Observation Workshop S07-2020","text":"Materials developed during the laboratory work at the astronomical observation workshop"},{"location":"git/#8th-semester-2021","title":"8th Semester (2021)","text":""},{"location":"git/#computational-workshop-s08-2021","title":"Computational Workshop S08-2021","text":"<p>Solving Cauchy problems and stiff systems of differential equations, finding eigenvalues in symmetric matrices</p> <p><code>#exercises</code> <code>#numerical-methods-implementation</code> <code>#julia</code></p>"},{"location":"git/#9th-semester-2021","title":"9th Semester (2021)","text":""},{"location":"git/#celestial-mechanics-laboratory-workshop-s09-2021","title":"Celestial Mechanics Laboratory Workshop S09-2021","text":"<p>Finding a figure-8 solution to a three-body problem with arbitrary precision</p> <p><code>#celestial-mechanics</code> <code>#integration</code> <code>#julia</code></p>"},{"location":"git/#computational-workshop-s09-2021","title":"Computational Workshop S09-2021","text":"<p>Solving integral equations of the first kind, parabolic and elliptical partial differential equations</p> <p><code>#numerical-methods</code> <code>#integration</code> <code>#julia</code></p>"},{"location":"git/#computer-methods-of-celestial-mechanics-s09-2021","title":"Computer Methods of Celestial Mechanics S09-2021","text":"<p>Presentations on some of the computer methods considered in the course</p> <p><code>#celestial-mechanics</code> <code>#numerical-methods</code> <code>#ode-solver</code> <code>#julia</code></p>"},{"location":"git/#stellar-astronomy-laboratory-workshop-s09-2021","title":"Stellar Astronomy Laboratory Workshop S09-2021","text":"<p>Calculation of orbits of globular clusters in several models of the Galaxy potential</p> <p><code>#astronomy</code> <code>#integration</code> <code>#rust</code> <code>#julia</code></p>"},{"location":"git/#stellar-astronomy-special-workshop-s09-2021","title":"Stellar Astronomy Special Workshop S09-2021","text":"<p>Decomposition of a bimodal distribution function into two normal components by the maximum likelihood estimation method</p> <p><code>#astronomy</code> <code>#stellar</code> <code>#tectonic</code> <code>#xetex</code> <code>#julia</code></p>"},{"location":"git/#10th-semester-2022","title":"10th Semester (2022)","text":""},{"location":"git/#computer-simulation-s10-2022","title":"Computer Simulation S10-2022","text":"<p>Building computer models of physical processes</p> <p><code>#astronomy</code> <code>#computer-simulation</code> <code>#rust</code> <code>#julia</code></p>"},{"location":"git/#graphics-in-scientific-publications-s10-2022","title":"Graphics in Scientific Publications S10-2022","text":"<p>Preparation of articles for scientific journals, plotting</p> <p><code>#xetex</code> <code>#julia</code></p>"},{"location":"git/#stellar-astronomy-laboratory-workshop-s10-2022","title":"Stellar Astronomy Laboratory Workshop S10-2022","text":"<p>Generating disk galaxies</p> <p><code>#astronomy</code> <code>#julia</code></p>"},{"location":"git/#stellar-astronomy-special-workshop-s10-2022","title":"Stellar Astronomy Special Workshop S10-2022","text":"<p>Performing a Pearson\u2019s chi-squared test</p> <p><code>#astronomy</code> <code>#julia</code></p>"},{"location":"git/#computational-gas-dynamics-s11-2022","title":"Computational Gas Dynamics S11-2022","text":"<p>Modelling convection with the large-particle method</p> <p><code>#astronomy</code> <code>#zig</code></p>"},{"location":"git/#stellar-astronomy-laboratory-workshop-s11-2022","title":"Stellar Astronomy Laboratory Workshop S11-2022","text":"<p>Generating and inferring galaxy rotation curves</p> <p><code>#astronomy</code> <code>#julia</code></p>"},{"location":"git/#stellar-astronomy-special-workshop-s11-2022","title":"Stellar Astronomy Special Workshop S11-2022","text":"<p>Performing weighted orthogonal regression</p> <p><code>#regression</code> <code>#julia</code></p>"},{"location":"git/#resonances-in-celestial-mechanics-s11-2022","title":"Resonances in Celestial Mechanics S11-2022","text":"<p>Modelling dynamics of main-belt asteroids</p> <p><code>#astronomy</code> <code>#celestial-mechanics</code> <code>#resonances</code> <code>#julia</code></p>"},{"location":"git/#zig","title":"Zig","text":"Zig projects"},{"location":"git/#zig-gir-ffi","title":"<code>zig-gir-ffi</code>","text":"<p>Generate FFI bindings for Zig using GObject Introspection</p> <p><code>#gobject-introspection</code> <code>#ffi</code> <code>#zig</code></p>"},{"location":"git/#zig-girepository","title":"<code>zig-girepository</code>","text":"<p>Zig bindings for the <code>girepository</code> library</p> <p><code>#girepository</code> <code>#zig</code></p>"},{"location":"git/#zig-gtk4","title":"<code>zig-gtk4</code>","text":"<p>Zig bindings for the <code>gtk4</code> library</p> <p><code>#gtk4</code> <code>#zig</code></p>"},{"location":"git/#zig-libuv","title":"<code>zig-libuv</code>","text":"<p>Zig bindings for the <code>libuv</code> library</p> <p><code>#libuv</code> <code>#zig</code></p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/ffmpeg-notes/","title":"FFmpeg notes","text":"<p>These are short notes on how to do some tasks using FFmpeg.</p>"},{"location":"blog/ffmpeg-notes/#adding-subtitles-cutting-two-streams-normalizing-the-loudness","title":"Adding subtitles, cutting two streams, normalizing the loudness","text":"<p>Do the first pass with the <code>loudnorm</code> filter to measure the input parameters:</p> <pre><code>ffmpeg \\\n  -ss 00:00:10 -i input.mkv -t 00:00:20 \\\n  -vn -af loudnorm=I=-12:TP=0.0:LRA=13.5:print_format=summary -f null -\n</code></pre> <p>This should give you something like this:</p> <pre><code>Input Integrated:    -29.3 LUFS\nInput True Peak:     -15.1 dBTP\nInput LRA:            13.5 LU\nInput Threshold:     -39.9 LUFS\n\nOutput Integrated:   -10.1 LUFS\nOutput True Peak:     +0.0 dBTP\nOutput LRA:            5.2 LU\nOutput Threshold:    -20.3 LUFS\n\nNormalization Type:   Dynamic\nTarget Offset:        -1.9 LU\n</code></pre> <p>Supply the measured values in the second pass:</p> <pre><code>ffmpeg \\\n  -ss 00:00:10 -i input.mkv -t 00:00:20 \\\n  -ss 00:00:10 -i input.srt -ss 00:00:00 -t 00:00:20 \\\n  -map_metadata -1 -metadata:s:s:0 language=eng \\\n  -af loudnorm=I=-12:TP=0.0:LRA=13.5:measured_I=-29.3:measured_TP=-15.1:measured_LRA=13.5:measured_thresh=-39.9 \\\n  -ar 48k -c:a libfdk_aac \\\n  -c:s mov_text \\\n  -c:v libx264 -crf 17 -preset slower -pix_fmt yuv420p \\\n  -movflags +faststart \\\n  output.mp4\n</code></pre> <p>Notes:</p> <ul> <li>the usage of combined seeking for the subtitles stream;</li> <li>downsampling the audio to 48 kHz since the <code>loudnorm</code> filter upsamples it to 192 kHz.</li> <li><code>ffmpeg-normalize</code> provides a simpler interface for loudness normalization</li> </ul>"},{"location":"blog/ffmpeg-notes/#adding-a-delay-to-one-of-the-audio-tracks","title":"Adding a delay to one of the audio tracks","text":"<p>Add a 1.6 seconds delay to the 10th audio stream (which has 6 channels), remove the original one, and add this new one as the last one (12th):</p> <pre><code>ffmpeg \\\n  -i input.mkv \\\n  -filter_complex \"[0:a:9]adelay=1600|1600|1600|1600|1600|1600[out]\" \\\n  -map 0 -map -0:a:9 -map [out] \\\n  -c copy -c:a:11 ac3 \\\n  -metadata title= -metadata:s:a:11 language=eng \\\n  output.mkv\n</code></pre>"},{"location":"blog/ffmpeg-notes/#cutting-an-m2ts-video-starting-with-an-i-frame","title":"Cutting an M2TS video, starting with an I-frame","text":"<p>Get a list of I-frames:</p> <pre><code>ffprobe \\\n  -v error -hide_banner \\\n  -skip_frame nokey \\\n  -show_entries frame=pkt_dts_time:timecode=value \\\n  -select_streams v:0 \\\n  -print_format default=nw=1:nk=1 \\\n  input.m2ts\n</code></pre> <p>Cut 40s of the video without re-encoding, starting from one of the I-frames:</p> <pre><code>ffmpeg \\\n  -v error -hide_banner -y \\\n  -i input.m2ts \\\n  -ss 1007.562244 \\\n  -t 40 \\\n  -map_chapters -1 \\\n  -c copy -copyts \\\n  cut.mkv\n</code></pre> <p>Note that we don\u2019t copy subtitles and data (e.g., chapters) here. Those can make the duration longer.</p> <p>See FFprobe documentation and FFprobeTips for more info.</p>"},{"location":"blog/how-to-access-a-local-server-running-inside-wsl-2/","title":"How to access a local server running inside WSL 2?","text":"<p>Usually, this is straightforward: you visit <code>127.0.0.1:$PORT</code> on your host system, done. Well, except when it doesn\u2019t work.</p> <p>You can, however, use internal WSL IP, which is always available. Type <code>ifconfig</code> in your terminal and grab the first IP in the <code>inet</code> row in the <code>eth0</code> section. Use this IP instead of the local one above.</p> <p>It may also occur that you need to explicitly tell the server to use this IP instead of the local interface. For example, for Zola, this is done by specifying the <code>-i</code> flag.</p>"},{"location":"blog/how-to-create-a-custom-locale-on-fedora/","title":"How to create a custom locale on Fedora?","text":"<p>First, let\u2019s get a template.</p> <p>Install the <code>glibc-locale-source</code> package since it provides files with default source definitions:</p> <pre><code>sudo dnf install glibc-locale-source\n</code></pre> <p>Copy any existing locale of your choice from <code>/usr/share/i18n/locales</code> and give it a new name. For example, let\u2019s create a custom <code>en_US</code> locale:</p> <pre><code>cd /usr/share/i18n/locales\nsudo cp en_US en_US_custom\n</code></pre> <p>Now, let\u2019s edit the new file. A common thing to do with a new locale is to change the first day of the week and the first working day of the week from Sunday to Monday (or vice versa). We can accomplish that by adding/changing the following two lines in the <code>LC_TIME</code> section of the locale file:</p> <pre><code>% &lt;...&gt;\nLC_TIME\n% &lt;...&gt;\nfirst_weekday 2\nfirst_workday 2\n% &lt;...&gt;\nEND LC_TIME\n% &lt;...&gt;\n</code></pre> <p>When that\u2019s done, we should compile the locale by executing</p> <pre><code>sudo localedef -i en_US_custom -f UTF-8 en_US_custom.UTF-8\n</code></pre> <p>That\u2019s it. All we have left to do now is tell our applications / shell / desktop environment to use the new locale. That\u2019s, however, can be tricky since not every piece of software respects the other. Start by setting the system locale:</p> <pre><code>localectl set-locale en_US_custom.UTF-8\n</code></pre> <p>Log in / log out (or reload the desktop environment if that\u2019s possible) and check the locale settings by issuing <code>locale</code> in the terminal. If you don\u2019t see the new locale there, that\u2019s because something else overrides it. A classic example on Fedora installations would be <code>gnome-session</code>, if you use Gnome. This session manager uses GSettings, so you can change the locale by changing a specific key:</p> <pre><code>gsettings set org.gnome.system.locale region en_US_custom.UTF-8\n</code></pre> <p>If that\u2019s still not it, you should check your shell initialization scripts (like <code>~/.bashrc</code>, depending on your shell) to see if you change the locale there (especially if you set <code>LC_ALL</code> anywhere).</p> <p>After that, that should be it.</p>"},{"location":"blog/how-to-create-a-high-quality-spray-for-source-games/","title":"How to create a high quality spray for Source games?","text":"<p>First, prepare an image: you\u2019ll need to make it square. Optionally, you can also resize it to the sides of power of 2, with the 512 pixels maximum.</p> <p>Now, open VTFEdit. Import the image (File &gt; Import).</p> <p>Make sure that the following options are checked out in <code>General</code>:</p> <ul> <li>Normal Format: DXT1</li> <li>Alpha Format: DXT5</li> <li>Texture Type: Animated Texture</li> </ul> <p>Enable <code>Resize</code> and <code>Clamp</code>. Set maximum width and height to 512. Don\u2019t generate <code>Mipmaps</code> and <code>Normal Maps</code>. Leave everything else as-is.</p> <p>After importing, check the following flags in the bottom-left pane:</p> <ul> <li>Clamp S</li> <li>Clamp T</li> <li>Anisotropic</li> <li>No Mipmap</li> <li>No Level Of Detail</li> <li>Eight Bit Alpha</li> </ul> <p>Leave every other flag unchecked.</p> <p>If you\u2019re wondering why transparent regions of your image are black, check View &gt; Mask.</p> <p>That\u2019s it. Save the spray as a <code>.vtf</code> file (File &gt; Save As\u2026) and generate the <code>.vmt</code> file (Tools &gt; Create VMT File). Drop these two files in the <code>.../materials/vgui/logos</code> directory in your game folder.</p> <p>Make sure your spray doesn\u2019t surpass the 512 Kb limit. Otherwise, it will be invisible in the game.</p> <p>Choose the <code>.vtf</code> file as a new spray in the game.</p>"},{"location":"blog/how-to-create-a-samba-share/","title":"How to create a Samba share?","text":"<p>Make sure you have Samba installed.</p> <p>Allow read/write access to the filesystem:</p> <pre><code>sudo setsebool -P samba_export_all_rw on\n</code></pre> <p>Add Samba as a permanent service to the Firewall:</p> <pre><code>sudo firewall-cmd --add-service=samba --permanent\nsudo firewall-cmd --reload\n</code></pre> <p>You should have a default config file after the installation at <code>/etc/samba/smb.conf</code>. Here we will be using the default <code>homes</code> section:</p> <pre><code>[homes]\n    comment = Home Directories\n    valid users = %S, %D%w%S\n    browseable = No\n    read only = No\n    inherit acls = Yes\n</code></pre> <p>Alternatively, you can specify additional sections like so:</p> <pre><code>[downloads]\n    comment = Downloads\n    path = /home/user/Downloads\n    read only = yes\n    guest ok = yes\n</code></pre> <p>You can check the manual for the configuration file here.</p> <p>Set the password for the user:</p> <pre><code>sudo smbpasswd -a $USER\n</code></pre> <p>Finally, enable and start the service:</p> <pre><code>sudo systemctl enable smb\nsudo systemctl start smb\n</code></pre> <p>You should now be able to connect to your Samba share by providing the path <code>smb://&lt;hostname&gt;/&lt;sharename&gt;</code> where necessary and using your username and the newly created password. <code>&lt;hostname&gt;</code> is either a hostname (e.g., <code>yourmachinename.local</code>) or an IP address (e.g., the IP address of your current wireless interface) of the Samba server. The latter can be obtained by issuing <code>ifconfig</code> in a terminal. <code>&lt;sharename&gt;</code> is the name of a shared directory you\u2019d like to browse.</p>"},{"location":"blog/how-to-fix-fonts-in-counter-strike-source-on-linux/","title":"How to fix fonts in Counter-Strike: Source on Linux?","text":"<p>Note: all paths are relative to the root of the game (usually, <code>/path-to-the-steam-library/steamapps/common/Counter-Strike Source</code>).</p> <ol> <li> <p>Install the <code>corefonts</code> package (standard Windows fonts).</p> </li> <li> <p>Prepare a new font for the chat.</p> <p>We will mimic under the WenQuanYi Zen Hei font (don\u2019t install the <code>wqy-zenhei</code> package!). This font is hard coded to be used as the last fallback font, so explicitly switching to it allows us to bypass all the other fall back fonts which may not contain required characters.</p> <p>You can use FontForge to merge fonts. The specific fonts to merge will depend on your preferences, but I\u2019d suggest starting with DejaVu fonts. DejaVu Sans will make the \u201cLenny Face\u201d emoticon appear properly. If you\u2019d like to add Japanese symbols to the font, merge DejaVu Sans with, for example, Noto Sans JP. This should make the second \u201cShrug\u201d emoticon appear properly.</p> <p>Here\u2019s the algorithm:</p> <ol> <li>Open FontForge.</li> <li>Open the DejaVu Sans font.</li> <li>Click <code>Element &gt; Merge Fonts...</code> in the menu bar, open the Noto Sans JP font.</li> <li>When asked about whether to retain kerning information, select \u201cNo\u201d.</li> <li>Click <code>Element &gt; Font Info...</code> in the menu bar, change the \u201cFamily Name\u201d in the \u201cPS Names\u201d section to \u201cWenQuanYi Zen Hei\u201d. Optionally, change other information about the font (for example, changing strings in the \u201cTTF Names\u201d section will affect the output of the <code>fc-match</code> command). When done, click OK.</li> <li>Click <code>File &gt; Generate Fonts...</code> in the menu bar. Click on the clog icon, and check the \u201cShow Hidden Files\u201d option. Select the <code>~/.local/share/fonts</code> directory as the output directory (create it if it doesn\u2019t exist yet). Select \u201cTrueType\u201d as the font type. Click \u201cGenerate\u201d. If any errors occur, click \u201cGenerate\u201d again.</li> <li>Update the Fontconfig cache with <code>fc-cache -f -v</code>, check if the font appears after running <code>fc-match \"WenQuanYi Zen Hei\"</code> and <code>fc-list | grep -i \"WenQuanYi Zen Hei\"</code>.</li> </ol> <p>Note: you can use the GNOME Character Map application to search for characters in the installed fonts (including the custom ones). It can help you with debugging whether your fonts actually have the required characters. The <code>View &gt; Show only glyphs from this font</code> option has to be enabled.</p> </li> <li> <p>Override the chat font and make it bigger.</p> <ol> <li>Prepare a directory for overrides in the <code>cstrike/custom</code> directory (e.g., <code>cstrike/custom/linux_fixes</code>).</li> <li>Copy the <code>hl2/resource/chatscheme.res</code> file to the <code>cstrike/custom/linux_fixes/resource</code> directory.</li> <li> <p>Override the <code>name</code> and <code>tall</code> properties in each preset (from \u201c1\u201d to \u201c5\u201d) in the <code>ChatFont</code> section in the <code>cstrike/custom/linux_fixes/resource/chatscheme.res</code> file by adding/changing a similar line with the <code>[$LINUX]</code> part added to the end above the line being changed. Start by adding 3 to each value of <code>tall</code>, then test in the game.</p> <p>Here\u2019s an example:</p> <pre><code>\"ChatFont\"\n{\n    \"1\"\n    {\n        \"name\"          \"WenQuanYi Zen Hei\" [$LINUX]\n        \"name\"          \"Verdana\"\n        \"tall\"          \"15\" [$LINUX]\n        \"tall\"          \"12\"\n        \"weight\"        \"700\"\n        \"yres\"          \"480 599\"\n        \"dropshadow\"    \"1\"\n    }\n// &lt;...&gt;\n}\n</code></pre> </li> </ol> </li> <li> <p>Make the console font bigger.</p> <p>Override the <code>tall</code> property in the preset in the <code>ConsoleText</code> section in the <code>platform/resource/sourceschemebase.res</code> file by adding/changing a similar line with the <code>[$LINUX]</code> part added to the end above the line being changed.</p> <p>Here\u2019s an example:</p> <pre><code>\"ConsoleText\"\n{\n    \"1\"\n    {\n        \"name\"      \"Lucida Console\" [$WINDOWS]\n        \"name\"      \"Lucida Console\" [$X360]\n        \"name\"      \"Verdana\" [$POSIX]\n        \"tall\"      \"11\" [$OSX]\n        \"tall\"      \"16\" [$LINUX]\n        \"tall\"      \"10\"\n        \"weight\"    \"500\"\n    }\n}\n</code></pre> </li> <li> <p>Make the output of the <code>cl_showpos</code> and <code>net_graph</code> commands bigger.</p> <p>Override the <code>tall</code> property in the preset in the <code>DefaultFixedOutline</code> section in the <code>platform/resource/sourceschemebase.res</code> file by adding/changing a similar line with the <code>[$LINUX]</code> part added to the end above the line being changed.</p> <p>Here\u2019s an example:</p> <pre><code>\"DefaultFixedOutline\"\n{\n    \"1\"\n    {\n        \"name\"          \"Lucida Console\" [$WINDOWS]\n        \"name\"          \"Lucida Console\" [$X360]\n        \"name\"          \"Verdana\" [$POSIX]\n        \"tall\"          \"16\" [$LINUX]\n        \"tall\"          \"11\" [$OSX]\n        \"tall\"          \"10\"\n        \"tall_lodef\"    \"15\"\n        \"tall_hidef\"    \"20\"\n        \"weight\"        \"0\"\n        \"outline\"       \"1\"\n    }\n}\n</code></pre> </li> </ol>"},{"location":"blog/how-to-host-a-vpn-using-wireguard/","title":"How to host a VPN using WireGuard?","text":"<p>First of all, you need a private server. Depending on your needs, you can host a VPN (Virtual Private Network) either locally or by renting a VPS (Virtual Private Server), either at home or abroad. The latter case is often used to avoid censoring at home. In case you go this route, you should also make sure you\u2019re choosing a private VPS provider. I can personally recommend 1984.</p> <p>It is important to clarify that WireGuard is a point-to-point VPN. That is, by default, you only get an encrypted tunnel. To actually work as a private network, you need to forward all of the clients\u2019 traffic through the local network interface of your server. Thankfully, that\u2019s already automated in the <code>wireguard-install</code> script, which I highly recommend using.</p> <p>On your server, run this script. Running if for the first time will walk you through the installation process. Using the default inputs is usually fine, but do note that the script puts in the IP addresses of the AdGuard DNS (Domain Name System) servers by default. You may also consider using other options, or you can use the IP addresses of the DNS servers that your server\u2019s ISP (Internet Service Provider) provides. You can get those by either running</p> <pre><code>grep \"nameserver\" /etc/resolv.conf\n</code></pre> <p>in a terminal (if you rent a server), checking your router settings (if you\u2019re hosting at home), or using other means.</p> <p>During the installation, the script will ask you to create a client. You will be able to add or revoke clients later by rerunning the script. Give the client a name, then choose their IPs in the interface (defaults are fine). You will now have a QR code printed in the terminal and a configuration file created in the current working directory. Share these with a client so they can connect to the server. Here are instructions for a client:</p> <p>First, install WireGuard. Then,</p> <ul> <li>Linux: copy (as root) the configuration file to <code>/etc/wireguard/wg0.conf</code>, restart the service using <code>sudo systemctl restart wg-quick@wg0</code>;</li> <li>Windows, macOS: import the configuration file;</li> <li>Android, iOS: scan the QR code or input the values from the configuration file manually.</li> </ul> <p>That\u2019s it. You should now have everything up and working.</p> <p>Troubleshooting:</p> <ul> <li>If your home network doesn\u2019t support IPv6, stop the local service, remove the IPv6 addresses from the configuration file, and restart the connection.</li> </ul> <p>See also:</p> <ul> <li>How to set up a firewall for services behind WireGuard?</li> </ul>"},{"location":"blog/how-to-install-spotify-without-ads-on-linux/","title":"How to install Spotify without ads on Linux?","text":"<p>I recommend using the official Flatpak package. Install it from Flathub, launch it and login into your account. This will create session files which we will need later. After that, close the application.</p> <p>Install <code>spicetify-cli</code>.</p> <p>Add permissions to change the Spotify\u2019s files:</p> <pre><code>SPOTIFY_PATH=/var/lib/flatpak/app/com.spotify.Client\nsudo chmod a+wr ${SPOTIFY_PATH}/current/active/files/extra/share/spotify\nsudo chmod a+wr ${SPOTIFY_PATH}/current/active/files/extra/share/spotify/Apps -R\n</code></pre> <p>Here\u2018s a theme we can use, thanks to @Daksh777. Clone the repository to the <code>Themes</code> directory and copy the AdBlock extension to the <code>Extensions</code> directory:</p> <pre><code>CONFIG_PATH=$(dirname \"$(spicetify -c)\")\ncd \"${CONFIG_PATH}/Themes\"\ngit clone https://github.com/Daksh777/SpotifyNoPremium\ncp \"${CONFIG_PATH}/Themes/SpotifyNoPremium/adblock.js\" \"${CONFIG_PATH}/Extensions\"\n</code></pre> <p>Now, set the Spotify client\u2019s location in the Spicetify\u2019s config. Go to <code>~/.config/spicetify/config-xpui.ini</code> and edit the following lines:</p> <pre><code># &lt;...&gt;\nspotify_path = ${SPOTIFY_PATH}/current/active/files/extra/share/spotify/\n# &lt;...&gt;\nprefs_path = ${HOME}/.var/app/com.spotify.Client/config/spotify/prefs\n# &lt;...&gt;\n</code></pre> <p>Note that you will need to expand the <code>${HOME}</code> and <code>${SPOTIFY_PATH}</code> variables manually in this file.</p> <p>Configure Spicetify to use the theme and the extension:</p> <pre><code>spicetify config current_theme SpotifyNoPremium\nspicetify config extensions adblock.js\n</code></pre> <p>Now backup the installation and apply the theme:</p> <pre><code>spicetify backup apply\n</code></pre> <p>In case there is an update of the app, you will need to re-add permissions and re-apply the theme.</p> <p>That\u2019s it, enjoy!</p>"},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/","title":"How to manage websites or services under a Handshake domain?","text":"<p>This note is a rewrite of a series of articles on a similar theme by Rithvik Vibhu. I mirror those for redundancy (this knowledge is too niche to have only one decent source, so let there be a copy!), but also I show how to achieve the same results with Caddy and expand on how to deal with subdomains. So, alternative title: HNS + PowerDNS + Caddy + DANE.</p>"},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#requirements","title":"Requirements","text":"<ul> <li>A Handshake name: get one of those from Namebase or with a non-custodial wallet like Bob Wallet;</li> <li>A server: rent one or host locally (this guide expects Ubuntu as an OS);</li> <li>A site or a service: prepare something to share with others;</li> <li>A DANE-enabled HNS resolver (e.g., Fingertip): a way to access your site.</li> </ul>"},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#components","title":"Components","text":"<p>In this tutorial, you\u2019re expected to host</p> <ul> <li>A DNS server, which has records that point to a web server;</li> <li>A web server that hosts websites/services.</li> </ul> <p>The Handshake domain you own will point to the DNS server.</p>"},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#1-dns","title":"1. DNS","text":""},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#disable-stub-resolver","title":"Disable Stub Resolver","text":"<p>As root, run <code>lsof -i :53</code> to see if the DNS port is already bound by <code>systemd-resolved</code>. If it is, open <code>/etc/systemd/resolved.conf</code> and set <code>DNS</code> and <code>FallbackDNS</code> to your server\u2019s DNS\u2019s, and set <code>DNSStubListener</code> to <code>no</code>.</p> <p>Replace <code>/etc/resolv.conf</code> with a symbolic link to the <code>systemd</code>\u2018s version:</p> <pre><code>ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf\n</code></pre> <p>Reboot and check that the output of <code>lsof -i :53</code> doesn\u2019t mention <code>systemd-resolved</code>.</p>"},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#install-powerdns","title":"Install PowerDNS","text":"<p>Follow the official instructions. We will use the <code>sqlite3</code> backend, so run</p> <pre><code>apt install sqlite3 pdns-server pdns-backend-sqlite3\n</code></pre> <p>Check that the server is running by issuing <code>systemctl status pdns</code>.</p>"},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#configure-powerdns","title":"Configure PowerDNS","text":"<p>Edit <code>/etc/powerdns/pdns.conf</code> to have</p> <pre><code>launch=gsqlite3\ngsqlite3-database=/var/lib/powerdns/pdns.sqlite3\ngsqlite3-dnssec=yes\n</code></pre> <p>Then,</p> <pre><code># Initialize the SQLite database with a schema\nsqlite3 /var/lib/powerdns/pdns.sqlite3 &lt; /usr/share/doc/pdns-backend-sqlite3/schema.sqlite3.sql\n\n# Change ownership of the directory to the `pdns` user and group\nchown -R pdns:pdns /var/lib/powerdns\n\n# Allow for the `pdns` use to read the PowerDNS confing\nchmod o+r /etc/powerdns/pdns.conf\n\n# Restart PowerDNS\nsystemctl restart pdns\n</code></pre> <p>Check that there are no errors by issuing <code>systemctl status pdns</code>.</p>"},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#create-a-zone","title":"Create a zone","text":"<p>In the following snippets replace <code>domain</code> with your TLD. Run</p> <pre><code># Create an empty zone\nsudo -u pdns pdnsutil create-zone domain ns1.domain\n\n# Enable DNSSEC for the zone\nsudo -u pdns pdnsutil secure-zone domain\n\n# Add a TXT record for testing\n# Name: @ (root of domain)\n# Type: TXT\n# Value: \"first-record!\"\nsudo -u pdns pdnsutil add-record domain. @ TXT '\"first-record!\"'\n</code></pre> <p>Test the server by running <code>dig @127.0.0.1 domain TXT +dnssec</code>: this should give you the same record. You can try using your public IP, too.</p>"},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#store-the-address-and-the-hash-of-the-dns-on-blockchain","title":"Store the address and the hash of the DNS on blockchain","text":"<p>Run <code>pdnsutil show-zone domain</code> and take a value of one of the DS records.</p> <p>For example, from</p> <pre><code>DS = domain. IN DS 18355 13 1 76ba9064576ebd736e3bf95f04375c344c3394c2 ; ( SHA1 digest )\nDS = domain. IN DS 18355 13 2 e309604f736274326ae701ad900004aa7a0fad5d5c6406272fdb0065ecdeb1d8 ; ( SHA256 digest )\nDS = domain. IN DS 18355 13 4 902a5459b422008fd7126a67eed3591085b731e632b2cf836c696b33ddef9c9752af63264b870affc838145bea550b8a ; ( SHA-384 digest )\n</code></pre> <p>you can take</p> <pre><code>18355 13 2 e309604f736274326ae701ad900004aa7a0fad5d5c6406272fdb0065ecdeb1d8\n</code></pre> <p>Put this hash and the IP address of your server on blockchain:</p> <pre><code>Namebase &gt; Blockhain DNS records:\nType    Name    Value/Data\nNS      ns1     &lt;IP&gt;\nDS              &lt;Hash&gt;\n</code></pre> <p>or</p> <pre><code>Bob Wallet &gt; Records:\nType    Value\nNS      ns1.domain.\nGLUE4   ns1.domain. &lt;IP&gt;\nDS      &lt;Hash&gt;\n</code></pre>"},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#wait","title":"Wait","text":"<p>The updates to blockchain DNS happen every 6 hours. Updates to your name server\u2019s records are much faster, around 5 minutes to take effect.</p>"},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#2-dane","title":"2. DANE","text":""},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#generate-a-certificate","title":"Generate a certificate","text":"<p>In the following snippets replace <code>domain</code> with your TLD. Run</p> <pre><code>openssl req -x509 -newkey rsa:4096 -sha256 -days 365 -nodes \\\n  -keyout cert.key -out cert.crt -extensions ext  -config \\\n  &lt;(echo \"[req]\";\n    echo distinguished_name=req;\n    echo \"[ext]\";\n    echo \"keyUsage=critical,digitalSignature,keyEncipherment\";\n    echo \"extendedKeyUsage=serverAuth\";\n    echo \"basicConstraints=critical,CA:FALSE\";\n    echo \"subjectAltName=DNS:domain,DNS:*.domain\";\n    ) -subj \"/CN=*.domain\"\n</code></pre> <p>Compute the value of a TLSA record:</p> <pre><code>echo -n \"3 1 1 \" &amp;&amp; openssl x509 -in cert.crt -pubkey -noout | openssl pkey -pubin -outform der | openssl dgst -sha256 -binary | xxd  -p -u -c 32\n</code></pre> <p>Move the certificate and the private key:</p> <pre><code>mv cert.key /etc/ssl/domain.key\nmv cert.crt /etc/ssl/domain.crt\n  ```\n\n##### Create a TLSA record\n\nRun the following, replacing `&lt;value&gt;` with the value computed above:\n\n```bash\nsudo -u pdns pdnsutil add-record domain. _443._tcp TLSA '&lt;value&gt;'\nsudo -u pdns pdnsutil rectify-zone domain\n</code></pre> <p>In case you want to add a subdomain <code>sub</code>, run</p> <pre><code>sudo -u pdns pdnsutil add-record domain. _443._tcp.sub TLSA '&lt;value&gt;'\n</code></pre>"},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#3-web-server","title":"3. Web Server","text":""},{"location":"blog/how-to-manage-websites-or-services-under-a-handshake-domain/#install-caddy","title":"Install Caddy","text":"<p>Follow the official instructions. Specifically, on Ubuntu, run</p> <pre><code>apt install -y debian-keyring debian-archive-keyring apt-transport-https\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo tee /etc/apt/trusted.gpg.d/caddy-stable.asc\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\napt update\napt install caddy\n</code></pre> <p>Edit your Caddyfile (<code>/var/lib/caddy/Caddyfile</code>):</p> <pre><code># Site\ndomain {\n    tls /etc/ssl/domain.crt /etc/ssl/domain.key\n    root * /path/to/site\n    file_server\n}\n\n# Service\nsub.domain {\n    reverse_proxy localhost:7001\n}\n</code></pre> <p>Restart the service with <code>systemctl restart caddy</code>.</p> <p>Finally, add <code>A</code> records to the DNS server, replacing <code>&lt;IP&gt;</code> with the public IP of your server:</p> <pre><code>sudo -u pdns pdnsutil add-record domain. @ A &lt;IP&gt;\nsudo -u pdns pdnsutil add-record domain. sub A &lt;IP&gt;\n</code></pre> <p>And\u2026 that\u2019s it! Your site should now be available at <code>https://domain</code> and the service \u2014 at <code>https://sub.domain</code>.</p> <p>Troubleshooting:</p> <ul> <li>Use HTools SiteCheck to analyze your setup. Allow for a cache delay, though.</li> </ul>"},{"location":"blog/how-to-set-up-a-firewall-for-services-behind-wireguard/","title":"How to set up a firewall for services behind WireGuard?","text":"<p>This guide expects that you\u2019ve already set up WireGuard as a VPN. That is, you forward the traffic through the network interface of your server (e.g., the <code>wireguard-install</code> script adds <code>PostUp</code> and <code>PostDown</code> rules for that automatically).</p> <p>This guide also expects that you run your services in Podman containers.</p> <p>One of the easiest ways to set up a firewall is using <code>ferm</code>. Install it on your server and change the contents of the <code>/etc/ferm/ferm.conf</code> file to the following:</p> <pre><code>table filter {\n    chain INPUT {\n        # Drop every incoming connection by default\n        policy DROP;\n\n        # Allow only known and related connections\n        mod state state INVALID DROP;\n        mod state state (ESTABLISHED RELATED) ACCEPT;\n\n        # Allow local connections\n        interface lo ACCEPT;\n\n        # Respond to ping\n        proto icmp icmp-type echo-request ACCEPT;\n\n        # Accept SSH connections\n        proto tcp dport ssh ACCEPT;\n\n        # Accept Wireguard clients' connections\n        proto udp dport &lt;WIREGUARD LISTENING PORT&gt; ACCEPT;\n\n        # Allow connections from the server\n        saddr &lt;SERVER SUBNET&gt; ACCEPT;\n\n        # Allow connections to the server, but only for Wireguard clients\n        interface wg0 { daddr &lt;SERVER SUBNET&gt; ACCEPT; }\n    }\n\n    # Accept all outgoing connections\n    chain OUTPUT policy ACCEPT;\n\n    chain FORWARD {\n        # Drop every forward by default\n        policy DROP;\n\n        # Allow only known and related connections\n        mod state state INVALID DROP;\n        mod state state (ESTABLISHED RELATED) ACCEPT;\n\n        # Forward Wireguard clients\n        interface wg0 ACCEPT;\n\n        # Forward Podman subnet connections\n        saddr &lt;PODMAN SUBNET&gt; ACCEPT;\n    }\n}\n</code></pre> <p>Change the angle bracketed pieces to the correct values for your server. You can find the WireGuard\u2019s listening port by issuing <code>wg</code> in the terminal when the service is active or by checking the configuration file (usually, <code>/etc/wireguard/wg0.conf</code>) otherwise. You can find the Podman\u2019s subnet by issuing <code>podman network inspect podman</code> in the terminal.</p> <p>Then, restart the <code>ferm</code> service.</p>"},{"location":"blog/how-to-ssh-into-wsl-2/","title":"How to SSH into WSL 2?","text":"<p>This guide is explicitly for the second version of WSL. All the following actions should be performed inside a WSL environment until told otherwise.</p> <p>First, make sure you have the <code>ssh</code> package installed.</p> <p>Then visit the configuration file of your SSH server:</p> <pre><code>sudo nano /etc/ssh/sshd_config\n</code></pre> <p>There are two things you\u2019ll need to change here. First, the port the SSH server will use. That\u2019s because the default port used is <code>22</code>, which is the same the host system uses for its SSH. You can change it for something else, <code>2222</code>, for example. Create or alter the line with the following content:</p> <pre><code>Port 2222\n</code></pre> <p>Second, you\u2019ll need to enable authentication. For that, you may use passwords or keys. Enable the preferred way (or both) by creating or altering the lines with the following contents:</p> <pre><code>PasswordAuthentication yes\nPubkeyAuthentication yes\n</code></pre> <p>Save the file and restart the SSH server:</p> <pre><code>sudo service ssh --full-restart\n</code></pre> <p>Now you should be able to SSH into your WSL environment from the host system. Note, though, that you\u2019ll need to use your local IP for that, and not <code>localhost</code> or <code>127.0.0.1</code>. To get it, you should run <code>ifconfig</code> inside a WSL environment you want to connect to and copy the IP address from the <code>inet</code> line in the <code>eth0</code> section. After that, running the following on the host system:</p> <pre><code>ssh user@ip -p 2222\n</code></pre> <p>should give a prompt to your shell. Note that this IP will change after restarting the WSL environment.</p>"},{"location":"blog/how-to-transcode-a-video-for-lbry-before-uploading/","title":"How to transcode a video for LBRY before uploading?","text":"<p>The built-in video transcoding functionality in the LBRY desktop application starts an FFmpeg utility process with the following parameters:</p> <pre><code>ffmpeg \\\n  -i \"/path/to/input/file.ext\" -y -c:s copy -c:d copy \\\n  -c:v libx264 -crf 24 -preset faster -pix_fmt yuv420p \\\n  -vf \"scale=if(gte(iw\\,ih)\\,min(1920\\,iw)\\,-2):if(lt(iw\\,ih)\\,min(1920\\,ih)\\,-2)\" \\\n  -maxrate 5500K -bufsize 5000K -movflags +faststart \\\n  -c:a aac -b:a 160k \"/path/to/output/file.mp4\"\n</code></pre> <p>The meanings of the passed parameters:</p> <ul> <li><code>-c:s copy</code> and <code>-c:d copy</code> tell FFmpeg to copy subtitles and data,   respectively;</li> <li><code>-c:v libx264 -crf 24 -preset faster -pix_fmt yuv420p</code> tells FFmpeg to   transcode the video using the <code>H.264</code> codec with constant rate factor equal to 24, with   the <code>faster</code> preset and using the YUV color space with the <code>4:2:0</code> scheme for chroma   subsampling;</li> <li><code>-vf \"...\"</code> specifies that the height and width of the video cannot be greater than   1920 pixels, and both values must be a multiple of two;</li> <li><code>-maxrate 5500K -bufsize 5000K</code> specifies the maximum bitrate to be 5500 Kb/s   with a buffer equal to 5000 Kb/s;</li> <li><code>-movflags +faststart</code> tells FFmpeg to move the \u00abmoov atom\u00bb (the metadata)   from the end of the file to its beginning to improve playback in browsers;</li> <li><code>-c:a aac -b:a 160k</code> tells FFmpeg to transcode the audio using the native <code>AAC</code> codec with   constant bitrate equal to 160 kb/s.</li> </ul> <p>An alternative option for transcoding a horizontal video with increased bitrate, better quality and compression:</p> <pre><code>ffmpeg \\\n  -i \"/path/to/input/file.ext\" -y -c:s copy -c:d copy \\\n  -c:v libx264 -crf 17 -preset slower -pix_fmt yuv420p \\\n  -maxrate 8M -bufsize 8M -movflags +faststart \\\n  -c:a libfdk_aac \"/path/to/output/file.mp4\"\n</code></pre> <p>One may select optimal CRF values by performing tests on a small sample of the target file. The average bitrate of the transcoded test file should be close to the target bitrate. The CRF value of 17 is generally sufficient to produce a video with indistinguishable quality. Note that with a fixed CRF value, the target bitrate may not always be reached, and the encoder will use more bits if necessary.</p> <p>A sample can be cut from the source file like this:</p> <pre><code>ffmpeg -ss 00:01:00 -i input.ext -t 00:00:10 -c copy sample.ext\n</code></pre> <p>References:</p> <ul> <li>Guide for encoding video using FFmpeg</li> <li>Guide for encoding audio using FFmpeg</li> <li>Guide for scaling using FFmpeg</li> <li>Guide for limiting bitrate using FFmpeg</li> <li>Options for MP4 containers</li> <li>Article about rate control modes</li> <li>Article about CRF</li> </ul>"},{"location":"journal/","title":"Journal","text":"<p>This journal is a log of small tidbits of my life.</p> <p>Majorly inspired by Meghan\u2019s Log.</p>"},{"location":"journal/2023/april/","title":"April 2023","text":""},{"location":"journal/2023/april/#30","title":"Sunday, 30","text":""},{"location":"journal/2023/april/#30#pmg","title":"PMG","text":"<p>Implemented an algorithm for blacklisting objects that don\u2019t have a smooth vicinity near the reduced parallaxes. Tried combining it with the frozen profiles blacklisting mechanism, but it still doesn\u2019t quite work as expected.</p>"},{"location":"journal/2023/april/#29","title":"Saturday, 29","text":""},{"location":"journal/2023/april/#29#pmg","title":"PMG","text":"<p>Tried to tune the optimization process more today, but failed. Plotted the parallax vicinities, and those most often are not smooth parabolas. Yikes.</p>"},{"location":"journal/2023/april/#28","title":"Friday, 28","text":""},{"location":"journal/2023/april/#28#pmg","title":"PMG","text":"<p>I solved it. Well, almost. The sawtoothed profiles were happening because of the inner optimization suddenly converging to a different reduced parallax, thus increasing the outer sum (via discrepancies) and creating sort of a step on the frozen profile. I\u2019ve found two ways to bypass this:</p> <ol> <li>Simply increase the precision of the inner optimization method</li> <li>Mark objects with high discrepancies as blacklisted</li> </ol> <p>I\u2019ve developed an algorithm for the latter point: we find the objects with high discrepancies by traversing the vicinity of the minimum (via frozen profiles). It seems to mostly work now.</p>"},{"location":"journal/2023/april/#27","title":"Thursday, 27","text":""},{"location":"journal/2023/april/#27#pmg","title":"PMG","text":"<p>Okay, so the issue with the sawtoothed profiles is because of the inner optimization. It looks like occasionally the sum there gets an extra constant term. I was able to tune the parameters, so the profiles are (mostly) smooth for the first-order model, but they\u2019re still choppy for the 5th- (and higher) order models. No idea where this extra term comes from, considering the reduced parallaxes are supposed to be in the local minimum vicinity.</p>"},{"location":"journal/2023/april/#26","title":"Wednesday, 26","text":""},{"location":"journal/2023/april/#26#pmg","title":"PMG","text":"<p>Added support for plotting frozen profiles. Applied small fixes here and there.</p> <p>Still struggling with the profiles being wonky.</p>"},{"location":"journal/2023/april/#25","title":"Tuesday, 25","text":""},{"location":"journal/2023/april/#25#pmg","title":"PMG","text":"<p>The model is now being fitted for the degrees of the polynomial of the rotation curve from 1 to 10.</p> <p>The profiles are sawtoothed, will be investigating this next.</p>"},{"location":"journal/2023/april/#24","title":"Monday, 24","text":""},{"location":"journal/2023/april/#flatpak","title":"Flatpak","text":"<p>Switched to Flatpak apps where possible on my NixOS machine.</p>"},{"location":"journal/2023/april/#24#pmg","title":"PMG","text":"<p>Started implementing support for varying the degree of the polynomial of the rotation curve (and then choosing the best fit via minimal cost). Gotta slice and dice these pesky vectors.</p>"},{"location":"journal/2023/april/#22","title":"Saturday, 22","text":""},{"location":"journal/2023/april/#firejail","title":"Firejail","text":"<p>I was able to create a custom desktop file for Firefox via <code>home-manager</code>\u2018s <code>xdg.desktopEntries</code> option, wrapping the binary with Firejail. I discovered that Firejail doesn\u2019t really hide Nix store (which contains everything runnable on the system), and there are other holes all around. I was using Flatpak for sandboxing applications before I switched to NixOS, and now it seems like it is still the only reasonable solution.</p>"},{"location":"journal/2023/april/#22#pmg","title":"PMG","text":"<p>Added an option to compute profiles. It\u2019s enabled for the near solar circle sample, and those profiles are\u2026 definitely not parabolas. Will have to investigate this, but so far it doesn\u2019t seem like there is a local minimum for the most parameters\u2026</p>"},{"location":"journal/2023/april/#21","title":"Friday, 21","text":""},{"location":"journal/2023/april/#21#pmg","title":"PMG","text":"<p>Finished with the errands, wrote code for computing the profiles. Hopefully, this will help find those pesky local minimums.</p>"},{"location":"journal/2023/april/#20","title":"Thursday, 20","text":""},{"location":"journal/2023/april/#keepassxc","title":"KeePassXC","text":"<p>Switched from Secrets back to KeePassXC, mostly for the hidden attributes feature.</p>"},{"location":"journal/2023/april/#mullvad-browser","title":"Mullvad Browser","text":"<p>Tried Mullvad Browser today. While tweaking it for my liking, decided to stick with Librewolf, since it\u2019s more up to date and somehow more private. I\u2019m ignoring some recommendations to avoid fingerprinting anyway (e.g., letterboxing), so I guess it checks out.</p>"},{"location":"journal/2023/april/#20#pmg","title":"PMG","text":"<p>Did a couple of small errands today, stopped at moving all results in one directory (fixing Julia scripts so that they don\u2019t assume the output directory anymore). Also, finally using <code>direnv</code> for its main purpose \u2013 setting up environment variables.</p>"},{"location":"journal/2023/april/#19","title":"Wednesday, 19","text":""},{"location":"journal/2023/april/#19#pmg","title":"PMG","text":"<p>Added a log for the confidence intervals. Changed the Armijo condition\u2019s parameter to <code>1-e4</code> and the Backtracking line search\u2018s parameter to <code>0.5</code>, as recommended in this article. This changed the results again (as I said before, the routine is really finicky), but made the confidence intervals slightly more reasonable.</p> <p>I also thought about adding options alongside the <code>Goal</code> enum, so a user can opt in to some time-consuming computations (like computing confidence intervals and profiles). Will work on the profiles tomorrow.</p>"},{"location":"journal/2023/april/#18","title":"Tuesday, 18","text":""},{"location":"journal/2023/april/#18#pmg","title":"PMG","text":"<p>Reintroduced the computation of confidence intervals. Although, the convergence is weird, and debugging it is annoying.</p>"},{"location":"journal/2023/april/#17","title":"Monday, 17","text":""},{"location":"journal/2023/april/#17#pmg","title":"PMG","text":"<p>Implemented a couple of requests. Fitting is seemingly correct now, but the procedure is somewhat unstable. Had to fiddle with the cost function tolerances to make it work for the current samples.</p> <p>Almost done with reintroducing computation of the confidence intervals: the bracketing requirement of the Brent method is giving me a hard time.</p>"},{"location":"journal/2023/april/#16","title":"Sunday, 16","text":""},{"location":"journal/2023/april/#16#pmg","title":"PMG","text":"<p>Switched to local methods for both optimizations. This took quite a bit of trial and error, but now I\u2019m using L-BFGS with the More-Thuente line search for the outer optimization and Golden-section search for the inner optimization.</p> <p>Also, found out that floating-point arithmetic operations are not associative. Since I\u2019m using parallel fold and reduce operations in the outer optimization, this actually affects the result, compared to a sequential fold. Will try to fix this tomorrow.</p>"},{"location":"journal/2023/april/#15","title":"Saturday, 15","text":""},{"location":"journal/2023/april/#15#codon","title":"Codon","text":"<p>I\u2019ve created a PR to update Codon in Nixpkgs yesterday. A user reported that Codon\u2019s dependencies have a different hash on Darwin systems. So, to test that, I\u2019ve installed macOS Catalina in a virtual machine (QEMU, accelerated by KVM).</p> <p>I first tried the scripts in the <code>kholia/OSX-KVM</code> repository. Tip: replace <code>-device virtio-net-pci</code> with <code>-device e1000-82545em</code> in the <code>OpenCore-Boot.sh</code> script if you have <code>virt-manager</code> installed and its network interface (<code>virbr0</code>) is started. In my case, though, the virtual machine just failed to start the installation process after downloading the installation files (which took a while!).</p> <p>I then tried the scripts from the <code>foxlet/macOS-Simple-KVM</code> repository, and after a bit of tweaking they worked fine (the scripts are similar, really). The installation worked as expected, and I got a working Apple system. There is no guest support, though, so no clipboard integration (I used Pastebin instead), and I had to tweak the resolution by modifying a file in the EFI partition.</p> <p>Anyhow, it works, and I compiled a fork of LLVM (which is required for Codon) on a Darwin system.</p>"},{"location":"journal/2023/april/#15#pmg","title":"PMG","text":"<p>Added a stab at computing the confidence intervals of the fitted parameters. However, it\u2019s broken right now, because I had to lower the number of iterations for the simulated annealing.</p> <p>Turns out the outer optimization problem is also a local one, so I will be switching to local optimization methods. This should simplify the whole procedure. However, it also means that I will have to deal with making generics and <code>argmin</code> work nicely (again!).</p>"},{"location":"journal/2023/april/#15#recurse-center","title":"Recurse Center","text":"<p>Had a pair programming interview yesterday, got a rejection today. Oh well!</p>"},{"location":"journal/2023/april/#13","title":"Thursday, 13","text":""},{"location":"journal/2023/april/#13#simulated-annealing","title":"<code>simulated_annealing</code>","text":"<p>A small update to the library I\u2019ve written as part of a university course: you can now use closures for all the custom functions.</p>"},{"location":"journal/2023/april/#11","title":"Tuesday, 11","text":""},{"location":"journal/2023/april/#11#pmg","title":"PMG","text":"<p>Almost done with implementing an algorithm for computing the confidence intervals for the fitted parameters. It\u2019s gonna be painful to test, I can already tell: it\u2019s an iterative root-finding Brent method (hopefully it will work) for each of the 9 parameters, where each iteration is a global optimization problem.</p> <p>Also, found out that I need to capture outside world in the closures passed to my implementation of the simulated annealing algorithm, so I went and patched that (the commit is almost done).</p>"},{"location":"journal/2023/april/#10","title":"Monday, 10","text":""},{"location":"journal/2023/april/#10#pmg","title":"PMG","text":"<p><code>argmin</code>\u2018s L-BFGS solver with the More-Thuente line search failed consistently on later iterations with <code>Search direction must be a descent direction</code>. I guess that\u2019s because the gradient of the inner target function is getting too small. Kept my implementation of simulated annealing, but reduced the number of iterations. Seems like it\u2019s not that important to have exact values of the reduced parallaxes since both optimizations use different streams of the pseudo-random number generator. Meaning, if a set of parameters is found to be optimal at some iteration, it will be found to be optimal again at the same iteration if reduced parallaxes differ only in mantissa.</p>"},{"location":"journal/2023/april/#9","title":"Sunday, 9","text":""},{"location":"journal/2023/april/#9#pmg","title":"PMG","text":"<p>Okay, here\u2019s an example of what I\u2019m trying to deal with here:</p> <pre><code>fn compute_l_1&lt;F&gt;(\n    objects: &amp;mut Objects&lt;F&gt;,\n    fit_params: &amp;Params&lt;F&gt;,\n    par_pairs: &amp;mut Vec&lt;(F, F, F)&gt;,\n) -&gt; Result&lt;F&gt;\nwhere\n    F: Debug\n        + Default\n        + Display\n        + SampleUniform\n        + Sync\n        + Send\n        + ArgminFloat\n        + argmin_math::ArgminMul&lt;std::vec::Vec&lt;F&gt;, std::vec::Vec&lt;F&gt;&gt;\n        + argmin_math::ArgminZeroLike,\n    StandardNormal: Distribution&lt;F&gt;,\n    std::vec::Vec&lt;F&gt;: argmin_math::ArgminL2Norm&lt;F&gt;,\n    std::vec::Vec&lt;F&gt;: argmin_math::ArgminSub&lt;std::vec::Vec&lt;F&gt;, std::vec::Vec&lt;F&gt;&gt;,\n    std::vec::Vec&lt;F&gt;: argmin_math::ArgminAdd&lt;std::vec::Vec&lt;F&gt;, std::vec::Vec&lt;F&gt;&gt;,\n    std::vec::Vec&lt;F&gt;: argmin_math::ArgminSub&lt;F, std::vec::Vec&lt;F&gt;&gt;,\n    std::vec::Vec&lt;F&gt;: argmin_math::ArgminAdd&lt;F, std::vec::Vec&lt;F&gt;&gt;,\n    std::vec::Vec&lt;F&gt;: argmin_math::ArgminMul&lt;F, std::vec::Vec&lt;F&gt;&gt;,\n    std::vec::Vec&lt;F&gt;: argmin_math::ArgminDot&lt;std::vec::Vec&lt;F&gt;, F&gt;,\n    std::vec::Vec&lt;F&gt;: argmin_math::ArgminMul&lt;std::vec::Vec&lt;F&gt;, std::vec::Vec&lt;F&gt;&gt;,\n    std::vec::Vec&lt;F&gt;: argmin_math::ArgminL1Norm&lt;F&gt;,\n    std::vec::Vec&lt;F&gt;: argmin_math::ArgminSignum,\n    std::vec::Vec&lt;F&gt;: argmin_math::ArgminMinMax,\n{\n    // &lt;...&gt;\n}\n</code></pre> <p>I mean, are trait bounds really worth it?! And that\u2019s just me using <code>argmin</code>\u2018s <code>Vec</code> backend. It\u2019s a complete nightmare if I switch to the <code>ndarray</code> or the <code>nalgebra</code> backend.</p> <p>On a positive side, it takes about 4-5 iterations to find the minimum of the reduced parallax function with L-BFGS. Instead of exactly 100000 with simulated annealing. I checked the function, too: it seems to always have a local minimum near the observed parallax.</p>"},{"location":"journal/2023/april/#9#recurse-center","title":"Recurse Center","text":"<p>Implemented the database server task in Zig for the Recurse Center interview.</p> <p>Had the conversational interview yesterday. First time speaking to a native English speaker, by the way! Using voice, that is.</p>"},{"location":"journal/2023/april/#8","title":"Saturday, 8","text":""},{"location":"journal/2023/april/#8#pmg","title":"PMG","text":"<p>The discrete rotation curve on the fitted rotation curve plot is now computed against the optimized parameters.</p> <p>Started changing the algorithm for the inner optimization from simulated annealing to L-BFGS. This should hopefully speed things up. Right now I\u2019m doing exactly 100000 iterations for the search of the reduced parallax, which is definitely excessive. There is no guarantee that this a local optimization problem instead of the global one, though.</p>"},{"location":"journal/2023/april/#7","title":"Friday, 7","text":""},{"location":"journal/2023/april/#7#pmg","title":"PMG","text":"<p>Fixed the fitting procedure today in accordance with the new description. Found some mistakes in the previous implementation.</p> <p>Was trying to figure out why the uncertainties in the azimuthal velocity inherited from the uncertainties in the catalog velocities are different from the previous versions of the program. Yep, still a mystery, but seems like the new ones are the correct ones.</p>"},{"location":"journal/2023/april/#6","title":"Thursday, 6","text":""},{"location":"journal/2023/april/#6#recurse-center","title":"Recurse Center","text":"<p>Applied to the Recurse Center today. Fingers crossed!</p>"},{"location":"journal/2023/april/#5","title":"Wednesday, 5","text":""},{"location":"journal/2023/april/#5#pmg","title":"PMG","text":"<p>Done more requests. Stopped at fixing the fitting procedure: turns out I was optimizing the wrong parameters all along, but since they didn\u2019t conflict with the correct ones in the subroutine, the results are still technically correct. There are changes to the formulae, though, so I will have to account to that, too.</p>"},{"location":"journal/2023/april/#4","title":"Tuesday, 4","text":""},{"location":"journal/2023/april/#4#pmg","title":"PMG","text":"<p><code>Params</code> are now a serializable object, and I\u2019m almost done with making the same for the <code>Object</code> type, too. I would like to make <code>serde</code> serialize <code>Option&lt;T&gt;</code> as <code>T</code> when it\u2019s a <code>Some&lt;T&gt;</code> variant and skip it if it\u2019s a <code>None</code> variant. Right now it writes the tag before the value, which is somewhat annoying to parse.</p>"},{"location":"journal/2023/april/#3","title":"Monday, 3","text":""},{"location":"journal/2023/april/#3#pmg","title":"PMG","text":"<p>There is now a rotation curve computed based on the fitted parameters (the model is still linear, though). Somehow implementing it took more time than I have expected. Made some design decisions: going to flatten out the data objects, so they represent the output records as close as possible (getting rid of those pesky <code>Measurement</code>s). Had a weird thing happening in a Julia script, turned out to be a data race bug (yikes!).</p>"},{"location":"journal/2023/april/#2","title":"Sunday, 2","text":""},{"location":"journal/2023/april/#flatpak-github-actions","title":"<code>flatpak-github-actions</code>","text":"<p>Sometimes you just wonder, does it make sense to resurrect a 5-months old issue which lost all relevance\u2026</p>"},{"location":"journal/2023/april/#2#pmg","title":"PMG","text":"<p>Finished some requests. One of them required me to drop the functionality of configuring the bounds for the parameters via CLI. I distinctly remember investing some time into bringing it in a while back, and now it\u2019s gone (it\u2019s not a hard feature, though). I like to think about things like this as \u201cdesign evolution\u201d, even though it\u2019s mostly just going back and forth and testing what sticks.</p>"},{"location":"journal/2023/april/#1","title":"Saturday, 1","text":""},{"location":"journal/2023/april/#1#codon","title":"Codon","text":"<p>Created a pull request to add Codon to Nixpkgs.</p> <p>This took two days. The worst part was to bypass issues with CMake and CPM. Also, I ended up compiling a fork of LLVM, which wasn\u2019t as bad as I thought. It doesn\u2019t take much RAM and disk space if you compile it with Clang in the Release mode and link it with <code>ldd</code>. Takes about half an hour on my laptop.</p>"},{"location":"journal/2023/april/#gut","title":"Gut","text":"<p>Created a pull request to add Gut to Nixpkgs.</p> <p>It takes a couple of minutes to package a pure Go module.</p>"},{"location":"journal/2023/august/","title":"August 2023","text":""},{"location":"journal/2023/august/#31","title":"Thursday, 31","text":""},{"location":"journal/2023/august/#31#gnome-shell-memento-mori","title":"<code>gnome-shell-memento-mori</code>","text":"<p>Finished the rewrite. Found out that <code>Gio.Settings.get_string()</code> can be used to get the <code>nick</code> of the currently active state of an <code>enum</code>. It is mentioned in the documentation of the <code>Gio.Settings.set_enum()</code> method.</p> <p>Also, found out about the rules for XML internationalization. Modified the <code>GSchema</code>\u2018s ITS file so that <code>xgettext</code> doesn\u2019t pick up <code>summary</code> and <code>description</code> strings. Made the same workflow for managing translations work with a simple Bash script.</p> <p>I found the Learn X in Y minutes\u2018s resources for JavaScript (including the mentioned MDN\u2019s language overview) and TypeScript to be a great way to refresh my knowledge of these languages.</p> <p>Also, I was able to make the emitted JavaScript code look pretty much the same as the TypeScript code via a separate ESLint config and a couple of <code>sed</code> calls.</p>"},{"location":"journal/2023/august/#30","title":"Wednesday, 30","text":""},{"location":"journal/2023/august/#30#gnome-shell-memento-mori","title":"<code>gnome-shell-memento-mori</code>","text":"<p>Almost done with the rewrite. I dropped the <code>date-fns</code> library in favor of computing total number of average months and years, just so that I don\u2019t have to bundle dependencies.</p>"},{"location":"journal/2023/august/#28","title":"Monday, 28","text":""},{"location":"journal/2023/august/#28#gnome-shell-memento-mori","title":"<code>gnome-shell-memento-mori</code>","text":"<p>I learned that <code>typescript-language-server</code> can provide limited type checking in pure JavaScript via JSDoc annotations. Naturally, I tried it, and then quickly decided to switch back to TypeScript. I still drop Rollup, though. Since GNOME Shell has transitioned to ESM, calling <code>tsc</code> works quite well (I will have to implement a workaround for preserving blank lines, though).</p> <p>Spent most of the day figuring out how to make <code>ts-for-gir</code> work. It eventually did!</p>"},{"location":"journal/2023/august/#27","title":"Sunday, 27","text":""},{"location":"journal/2023/august/#27#gnome-shell-memento-mori","title":"<code>gnome-shell-memento-mori</code>","text":"<p>I\u2019ve started preparing my GNOME Shell extension for GNOME 45. I decided I will rewrite everything in pure Javascript, nuking Typescript, Rollup and use of a pseudo-build system (<code>package.json</code> scripts). There is really no need of all this bloat in this case.</p> <p>Also, I\u2019ve changed my mind on <code>flake-utils</code>. Rewriting parts of it myself quickly became a hurdle and increased the amount of noise in the code, so I would rather stick with this extra dependency.</p>"},{"location":"journal/2023/august/#26","title":"Saturday, 26","text":""},{"location":"journal/2023/august/#26#maintenance","title":"Maintenance","text":"<p>I\u2019ve solved a couple of issues with the Codon Nix package in the currently open pull request. Specifically, making the compiling to executable feature work out of the box took me the whole day to figure out. Had to write a tiny bit of C++ code (yikes!), so that I can override the runtime search paths from Nix and make sure the Zlib library is visible to the C++ compiler (Codon calls it under the hood).</p>"},{"location":"journal/2023/august/#25","title":"Friday, 25","text":""},{"location":"journal/2023/august/#25#japanese","title":"Japanese","text":"<p>Damn, found out I missed pre-lesson exercises in other places of the textbook and workbook (4 places to look in total, plus 2 in the Answer Key). That, and I found even more online resources today. Plus, I will be using Anki for expanding vocabulary, eventually.</p> <p>Also, I found a tier list of the Hololive members ranked by how easy it is to comprehend what they\u2019re saying. I do have Okayu\u2019s Minecraft stream open in a tab now\u2026</p>"},{"location":"journal/2023/august/#25#maintenance","title":"Maintenance","text":"<p>I removed <code>flake-utils</code> from my <code>dotfiles</code> Nix flake today (a bad practice). Also, I don\u2019t pass <code>pkgs</code> to the <code>nixosSystem</code> anymore (also a bad practice). Now I provide as an output the <code>nixosConfigurations</code> attribute set instead of the <code>packages.${system}.nixosConfigurations</code> attribute set.</p>"},{"location":"journal/2023/august/#24","title":"Thursday, 24","text":""},{"location":"journal/2023/august/#24#japanese","title":"Japanese","text":"<p>Well, now I can thank for the food.</p> <p>\u3088\u308d\u3057\u304f\u304a\u306d\u304c\u3044\u3057\u307e\u3059\uff01</p>"},{"location":"journal/2023/august/#23","title":"Wednesday, 23","text":""},{"location":"journal/2023/august/#23#japanese","title":"Japanese","text":"<p>Memorized Katakana, too. Although, admittedly, it\u2019s much easier to read the syllables than to write them by hand (for both syllabaries). There\u2019s still some effort required for deciphering, too. Especially when diacritics and digraphs are involved. Some reading is necessary.</p>"},{"location":"journal/2023/august/#23#maintenance","title":"Maintenance","text":"<p>Updated my site to use the new built-in plugin. Created a pull request to update Quod Libet in Nixpkgs.</p>"},{"location":"journal/2023/august/#22","title":"Tuesday, 22","text":""},{"location":"journal/2023/august/#22#japanese","title":"Japanese","text":"<p>Aight, I memorized Hiragana (basic syllables + syllables with diacritical marks + the contracted sounds). Will need a bit more practice, of course. Speaking of which, I found the Real Kana website to be immensely useful for learning and practicing the syllables.</p>"},{"location":"journal/2023/august/#21","title":"Monday, 21","text":""},{"location":"journal/2023/august/#21#japanese","title":"Japanese","text":"<p>Started learning Japanese today. Kind of because of Hololive, but also because of a vastly different culture. I have Nyarons in my music collection and can\u2019t understand their songs, but they sound so cool! Anyway, I\u2019ve started with GEIKI as a complete beginner. This is my second attempt to approach the language, though.</p> <p>Learned a bunch about IMFs and IMEs. They are pretty easy to set up on NixOS: I chose to use the Mozc IME. I\u2019ve set it up to use the US layout in the Direct Input mode. This allows me to have English and Japanese in one layout! I\u2019ve also installed the 10ten Japanese Reader extension in Librewolf, so that I can get explanations for how words are constructed by hovering over them.</p>"},{"location":"journal/2023/august/#19","title":"Saturday, 19","text":""},{"location":"journal/2023/august/#19#holocure","title":"HoloCure","text":"<p>Aight, the IRyS strat works, although I was able to get maximum 250K HoloCoins on S1 (Hard). Didn\u2019t have everything upgraded yet, though. YAGOOs kill me rather quickly after the 30 minute mark.</p>"},{"location":"journal/2023/august/#18","title":"Friday, 18","text":""},{"location":"journal/2023/august/#18#holocure","title":"HoloCure","text":"<p>Today I played HoloCure and found out about Hololive. The game is cool, but I\u2019m not sure about the Hololive\u2019s content yet.</p>"},{"location":"journal/2023/august/#17","title":"Thursday, 17","text":""},{"location":"journal/2023/august/#17#kirk","title":"Kirk","text":"<p>Read a bit more on TCP. Found out that I could just use the <code>libsoup</code> library to make HTTP conversations. I would also like to switch to HTTP/2 over TLS if Qobuz supports it. I don\u2019t even know how to quickly test it, since it seems to work completely differently compared to HTTP/1.1 (tried with Netcat). Gotta learn a lot of networking stuff!</p> <p>Also, I think I found a bug in GIO: the <code>GTask</code> in the <code>g_tcp_connection_close_async</code> function (which is allocated when graceful disconnects are enabled) is never freed if there are no errors. Usually, one would put a <code>g_object_unref(task)</code> after any of the <code>g_task_return_*</code> functions.</p>"},{"location":"journal/2023/august/#16","title":"Wednesday, 16","text":""},{"location":"journal/2023/august/#16#kirk","title":"Kirk","text":"<p>Used Wireshark to find out that my login conversation was closing abruptly (the connection termination phase was just skipped each time). Turns out that one has to explicitly enable it when using GIO: via the <code>g_tcp_connection_set_graceful_disconnect</code> function.</p>"},{"location":"journal/2023/august/#16#time-tracking","title":"Time tracking","text":"<p>I will stop tracking my time. Putting the stats at the end of the day became mechanical and doesn\u2019t seem like something that affects me in any way anymore. If I have something scheduled, I will do it anyway, if possible. It also doesn\u2019t represent some of my commitments that I find somewhat valuable. For example, today I\u2019ve reorganized my NixOS config, which took quite a while. Then I created a couple of pull requests to update KeePassXC and Picard in Nixpkgs. I would call this type of activity maintenance, and I usually don\u2019t log maintenance tasks, because it always feels like it won\u2019t take that much time (and then it does).</p>"},{"location":"journal/2023/august/#15","title":"Tuesday, 15","text":""},{"location":"journal/2023/august/#wireshark","title":"Wireshark","text":"<p>Finally, finished learning Wireshark.</p>"},{"location":"journal/2023/august/#15#time-tracking","title":"Time tracking","text":"<ul> <li>Today [03:29:26]<ul> <li>Consuming [03:29:26]<ul> <li>Research [01:58:07]<ul> <li>Learning Wireshark [01:58:07]</li> </ul> </li> <li>Reading [01:31:19]<ul> <li>[1991] Objectivism: The Philosophy of Ayn Rand [01:31:19]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/august/#13","title":"Sunday, 13","text":""},{"location":"journal/2023/august/#wi-fi-power-management","title":"Wi-Fi power management","text":"<p>I think I found the reason my network speed was getting lower on idle: presumably, it\u2019s a Linux module that enables Wi-Fi power management (dynamic power-saving). Here\u2019s a quick fix via NetworkManager on NixOS:</p> <pre><code>networking.networkmanager.wifi.powersave = false;\n</code></pre>"},{"location":"journal/2023/august/#13#time-tracking","title":"Time tracking","text":"<ul> <li>Today [03:04:43]<ul> <li>Consuming [03:04:43]<ul> <li>Research [02:44:02]<ul> <li>Learning Wireshark [02:44:02]</li> </ul> </li> <li>Reading [00:20:41]<ul> <li>[1991] Objectivism: The Philosophy of Ayn Rand [00:20:41]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/august/#12","title":"Saturday, 12","text":""},{"location":"journal/2023/august/#12#time-tracking","title":"Time tracking","text":"<ul> <li>Today [02:10:09]<ul> <li>Consuming [02:10:09]<ul> <li>Research [02:10:09]<ul> <li>Learning Wireshark [02:10:09]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/august/#11","title":"Friday, 11","text":""},{"location":"journal/2023/august/#11#time-tracking","title":"Time tracking","text":"<ul> <li>Today [04:28:43]<ul> <li>Consuming [04:28:43]<ul> <li>Research [02:27:49]<ul> <li>Learning Wireshark [02:27:49]</li> </ul> </li> <li>Reading [01:18:59]<ul> <li>[1991] Objectivism: The Philosophy of Ayn Rand [01:18:59]</li> </ul> </li> <li>Watching [00:41:55]<ul> <li>[2019] The Rubin Report: Objectivism on Happiness [00:41:55]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/august/#10","title":"Thursday, 10","text":""},{"location":"journal/2023/august/#10#time-tracking","title":"Time tracking","text":"<ul> <li>Today [03:28:15]<ul> <li>Producing [00:39:48]<ul> <li>Software engineering [00:39:48]<ul> <li>Updating the Zigmod Nix package [00:39:48]</li> </ul> </li> </ul> </li> <li>Consuming [02:48:27]<ul> <li>Research [02:32:06]<ul> <li>Learning Wireshark [02:32:06]</li> </ul> </li> <li>Watching [00:16:21]<ul> <li>[2019] The Rubin Report: Objectivism on Happiness [00:16:21]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/august/#7","title":"Monday, 7","text":""},{"location":"journal/2023/august/#7#kirk","title":"Kirk","text":"<p>I scrapped the idea of reducing the closure size of the output of the Nix package. My overlays affected not only my package\u2019s and its derivation\u2019s closures, but also the <code>devShell</code>\u2018s closures, which I completely didn\u2019t think about. At some point I started compiling WebKit from scratch (because it has Cairo as a requisite, which I had an overlay for). As you can imagine, this isn\u2019t good (too long to compile). This made me realize that the idea of a generic runtime is much better for distributing an application (which is what Flatpak is known for). Nix flakes allow me to lock Nixpkgs to a specific version, and then consumers can override it to their version if they\u2019d like. Using the locked version would mean getting a guaranteed build at the price of downloading and storing (highly likely) duplicated dependencies. Overriding the input would mean using Nixpkgs as a runtime, with shared libraries updated at your will (which can potentially break the application). I can still support both of these choices, but by favoring the latter option (which would mean not overlaying anything) I don\u2019t have to compile the world every time I update the lock file.</p> <p>Also, Nix makes it easy to fiddle with the derivation if necessary (which is what Flatpak can\u2019t provide), and there are no annoyances because of sandboxing.</p>"},{"location":"journal/2023/august/#7#time-tracking","title":"Time tracking","text":"<ul> <li>Today [03:17:36]<ul> <li>Producing [02:42:22]<ul> <li>Software engineering [02:42:22]<ul> <li>Kirk [02:42:22]</li> </ul> </li> </ul> </li> <li>Consuming [00:35:14]<ul> <li>Research [00:35:14]<ul> <li>The Monthly method and their resources [00:35:14]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/august/#6","title":"Sunday, 6","text":""},{"location":"journal/2023/august/#6#kirk","title":"Kirk","text":"<p>I was able to reduce the closure size of the output of the Nix package from 875 MiB to approximately 200 MiB by just removing the GStreamer media backend. I mean, that\u2019s just a single flag! Ironically, as I edit the derivations of more and more packages, the closure size of the Kirk\u2019s derivation gets bigger (e.g., <code>librsvg</code> requires Rust, so it\u2019s part of the closure now).</p> <p>Found another neat tool: <code>nix-output-monitor</code>. It shows you an active part of the graph of the derivation\u2019s closure while building.</p>"},{"location":"journal/2023/august/#6#time-tracking","title":"Time tracking","text":"<ul> <li>Today [02:00:51]<ul> <li>Producing [02:00:51]<ul> <li>Software engineering [02:00:51]<ul> <li>Kirk [02:00:51]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/august/#5","title":"Saturday, 5","text":""},{"location":"journal/2023/august/#5#kirk","title":"Kirk","text":"<p>Was working on reducing the size of the closure of the Nix package. Turned out to be quite an involved process! Found out the <code>nix-tree</code> tool to be very useful to quickly navigate the tree of requisites (it supports derivations, too!). Also, related to this, found out that the latest version of <code>nix-direnv</code> supports manual reload of the Nix environment.</p>"},{"location":"journal/2023/august/#5#time-tracking","title":"Time tracking","text":"<ul> <li>Today [03:07:09]<ul> <li>Producing [03:07:09]<ul> <li>Software engineering [03:07:09]<ul> <li>Kirk [02:29:20]</li> <li>Updating Picard in Nixpkgs [00:37:49]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/august/#4","title":"Friday, 4","text":""},{"location":"journal/2023/august/#4#kirk","title":"Kirk","text":"<p>Committed the code that makes the authorization button work. Switched to using <code>Adw.Toast</code>s for notifying the user about the results. Also, made it so that the request can be cancelled using the same button.</p>"},{"location":"journal/2023/august/#4#time-tracking","title":"Time tracking","text":"<ul> <li>Today [06:23:10]<ul> <li>Producing [03:57:02]<ul> <li>Software engineering [03:57:02]<ul> <li>Kirk [03:57:02]</li> </ul> </li> </ul> </li> <li>Consuming [02:26:08]<ul> <li>Reading [01:24:05]<ul> <li>[1991] Objectivism: The Philosophy of Ayn Rand [01:24:05]</li> </ul> </li> <li>Research [01:02:03]<ul> <li>The Monthly method and their resources [01:02:03]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/august/#3","title":"Thursday, 3","text":""},{"location":"journal/2023/august/#3#kirk","title":"Kirk","text":"<p>Found out what was causing the issue: I had to switch from the <code>g_input_stream_read_all_async</code> function to the <code>g_input_stream_read_async</code> function. Seems like it was trying to read it all and failing for some reason until the timeout.</p> <p>Got the authentication working! Added a simple light bulb that changes color to indicate the success of the verification.</p>"},{"location":"journal/2023/august/#3#time-tracking","title":"Time tracking","text":"<ul> <li>Today [06:55:15]<ul> <li>Producing [04:23:48]<ul> <li>Software engineering [04:23:48]<ul> <li>Kirk [04:23:48]</li> </ul> </li> </ul> </li> <li>Consuming [02:31:27]<ul> <li>Reading [01:44:43]<ul> <li>[1991] Objectivism: The Philosophy of Ayn Rand [01:44:43]</li> </ul> </li> <li>Research [00:46:44]<ul> <li>The Monthly method and their resources [00:46:44]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/august/#2","title":"Wednesday, 2","text":""},{"location":"journal/2023/august/#2#kirk","title":"Kirk","text":"<p>Figured out how to wrap a chain of asynchronous operations into a new asynchronous operation and pass data in between using <code>GTask</code>. Wrote a lot of asynchronous functions for logging in Qobuz. By the end of the day I was able to get a response! Albeit, sometimes I get it, and sometimes I don\u2019t. I think this might be related to a socket not being closed, I once had a similar issue with <code>mini-database-server-in-zig</code>, but never found out why Linux be like that.</p>"},{"location":"journal/2023/august/#2#time-tracking","title":"Time tracking","text":"<ul> <li>Today [06:06:43]<ul> <li>Producing [05:01:39]<ul> <li>Software engineering [05:01:39]<ul> <li>Kirk [05:01:39]</li> </ul> </li> </ul> </li> <li>Consuming [01:05:04]<ul> <li>Research [01:05:04]<ul> <li>Quantifying time investment [01:05:04]<ul> <li>[2021] My year in data</li> <li>[2017] Time Well Spent</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/august/#1","title":"Tuesday, 1","text":""},{"location":"journal/2023/august/#1#kirk","title":"Kirk","text":"<p>Was working on making the \u201cVerify credentials\u201d button work. Really struggling with figuring out how to do a proper composition of asynchronous tasks. I don\u2019t quite understand the examples in the <code>GTask</code>\u2018s documentation.</p>"},{"location":"journal/2023/august/#1#time-tracking","title":"Time tracking","text":"<ul> <li>Today [07:31:58]<ul> <li>Producing [05:05:27]<ul> <li>Software engineering [05:05:27]<ul> <li>Kirk [05:05:27]</li> </ul> </li> </ul> </li> <li>Consuming [02:26:31]<ul> <li>Reading [01:05:30]<ul> <li>[1991] Objectivism: The Philosophy of Ayn Rand [01:05:30]</li> </ul> </li> <li>Research [01:21:01]<ul> <li>Debugging Nix closure sizes [01:21:01]<ul> <li>[2022] NixCon 2022: Debugging Closure Sizes Graphically with nix-closure-graph</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/december/","title":"December 2023","text":""},{"location":"journal/2023/december/#2","title":"Saturday, 2","text":""},{"location":"journal/2023/december/#2#maintenance","title":"Maintenance","text":"<p>Created a pull request to add RMG to Nixpkgs.</p>"},{"location":"journal/2023/february/","title":"February 2023","text":""},{"location":"journal/2023/february/#28","title":"Tuesday, 28","text":""},{"location":"journal/2023/february/#listenbrainz","title":"ListenBrainz","text":"<p>I\u2019m back on ListenBrainz. Gotta put some trust in this open-source / open data solution for music tracking and personalized recommendations.</p>"},{"location":"journal/2023/february/#26#zig-gir-ffi","title":"<code>zig-gir-ffi</code>","text":"<p>Added support for emitting global constants. Refactored the code for handling types.</p> <p>Storing what would normally be local variables inside the output structs bothers me, though.</p>"},{"location":"journal/2023/february/#28#zigmod","title":"Zigmod","text":"<p>I\u2019ve started working on a more generic builder for Zigmod packages in Nixpkgs, but the Gist dependency (which already was a red flag in itself) of Zigmod has been deleted recently. Seems like taken down by GitHub staff.</p> <p>don\u2019t put all your eggs in one basket</p>"},{"location":"journal/2023/february/#27","title":"Monday, 27","text":""},{"location":"journal/2023/february/#counter-strike-source","title":"Counter-Strike: Source","text":"<p>Played my favorite game (the Zombie Escape mode) for the first time in a long time. Learned about <code>gamemode</code>. Fonts are scuffed on the Linux version, though. And my network stability has been atrocious.</p>"},{"location":"journal/2023/february/#every-noise-at-once","title":"Every Noise at Once","text":"<p>Every Noise at Once is amazing. It\u2019s a rabbit hole of the music world.</p> <p>Besides the map, they also have other subsites. Here\u2019s a few I would recommend checking out:</p> <ul> <li>2022 Around the World</li> <li>Research</li> <li>The Canonical Path</li> </ul> <p>Definitely click that Scan button and give it a shot!</p>"},{"location":"journal/2023/february/#26","title":"Sunday, 26","text":""},{"location":"journal/2023/february/#26#zig-gir-ffi","title":"<code>zig-gir-ffi</code>","text":"<p>Done more refactoring. Reduced the number of repeated parameters by generalizing <code>EmitRequest</code> into <code>Repository</code>.</p> <p>Implemented casting (there are still some edge cases left, e.g., arrays of interfaces).</p> <p>Stopped at implementing support for global constants. Gotta deal with these pesky bare unions.</p>"},{"location":"journal/2023/february/#25","title":"Saturday, 25","text":""},{"location":"journal/2023/february/#25#zig-gir-ffi","title":"<code>zig-gir-ffi</code>","text":"<p>Done lots of refactoring today.</p> <p>Most of the changes I did can be described by the following reflection:</p> <p>It should probably be refactored if you have to write a comment that isn\u2019t a docstring. Every new line of comments increases this probability.</p> <p>Reflections on 10,000 Hours of Programming</p> <p>More on this in the Linux kernel coding style:</p> <ul> <li>Functions</li> <li>Commenting</li> </ul>"},{"location":"journal/2023/february/#24","title":"Friday, 24","text":""},{"location":"journal/2023/february/#noita","title":"Noita","text":"<p>Learned how to use Lutris today, played Noita using it. Enjoyed the game very much.</p>"},{"location":"journal/2023/february/#23","title":"Thursday, 23","text":""},{"location":"journal/2023/february/#dwarf-fortress","title":"Dwarf Fortress","text":"<p>Wanted to buy the Steam version of Dwarf Fortress today (and to try it with the Proton-GE runtime on NixOS). That\u2019s somewhat tricky to do in Russia. I tried to do it via Qiwi\u2018s Steam Kazakhstan option, but apparently the Steam store is down right now because of the new Sons Of The Forest game. What a coincidence. And I haven\u2019t been playing games in a long while.</p>"},{"location":"journal/2023/february/#22","title":"Wednesday, 22","text":""},{"location":"journal/2023/february/#22#git","title":"Git","text":"<p>Apparently, you can fetch a single commit from a repo (source):</p> <pre><code>git init\ngit remote add origin $URL\ngit fetch --depth 1 origin $SHA1\ngit checkout FETCH_HEAD\n</code></pre>"},{"location":"journal/2023/february/#22#zigmod","title":"Zigmod","text":"<p>Added a script for generating the list of dependencies.</p> <p>Thinking that it\u2019s better to do it like that than packaging the whole dependency tree in Nixpkgs.</p>"},{"location":"journal/2023/february/#21","title":"Tuesday, 21","text":""},{"location":"journal/2023/february/#21#zig-gir-ffi","title":"<code>zig-gir-ffi</code>","text":"<p>Added a Nix flake. This required me to somehow address the fact that there is no <code>/usr/share</code> on Nix based systems. I decided to traverse <code>XDG_DATA_DIRS</code> paths as a solution.</p>"},{"location":"journal/2023/february/#20","title":"Monday, 20","text":""},{"location":"journal/2023/february/#20#objectivism","title":"Objectivism","text":"<p>Poking around some topics in an interest to know how objectivism would apply to them.</p> <p>Issues like</p> <ul> <li>Poverty, medical care, etc.</li> <li>Altruism vs. charity</li> <li>Communism vs. social betterment</li> </ul> <p>There are a lot of interpretations (and misinterpretations) around these and many other topics applied to this philosophy. It seems to me, though, that the answers are mostly common sense.</p>"},{"location":"journal/2023/february/#19","title":"Sunday, 19","text":""},{"location":"journal/2023/february/#19#direnv","title":"<code>direnv</code>","text":"<p>Okay, I guess I will just have tooling available globally instead of specifying it in flakes. This solves an issue with forks (like <code>nixpkgs</code>) where it\u2019s often inconvenient to add extra files that are not covered by a <code>.gitignore</code>.</p>"},{"location":"journal/2023/february/#19#zigmod","title":"Zigmod","text":"<p>Created a PR for adding Zigmod to <code>nixpkgs</code>.</p> <p>It\u2019s a package manager for Zig that I use. The official one is in the works, though!</p> <p>Shout-out to Meghan, by the way. She created Zigmod and also inspired this very journal!</p>"},{"location":"journal/2023/february/#18","title":"Saturday, 18","text":""},{"location":"journal/2023/february/#18#direnv","title":"<code>direnv</code>","text":"<p>Set up <code>direnv</code> and <code>nix-direnv</code> today for the first time.</p> <p>I have a couple of use cases in mind for them:</p> <ul> <li>Setting up specific versions of tools easily (Zig stable vs. nightly, for example)</li> <li>Setting up native dependencies easily</li> <li>Making builds more reproducible</li> </ul> <p>I\u2019ve created a flake for this very site. I\u2019ve also set up CI/CD using Nix (which turned out to be somewhat more complicated than I thought).</p>"},{"location":"journal/2023/february/#wezterm","title":"Wezterm","text":"<p>Solved the mystery with the disappearing cursor that bugged me since I installed NixOS for the first time. Just gotta set the <code>XCURSOR_THEME</code> variable to your theme (<code>Adwaita</code> in my case).</p>"},{"location":"journal/2023/february/#17","title":"Friday, 17","text":""},{"location":"journal/2023/february/#17#nixpkgs","title":"Nixpkgs","text":"<p>My first ever pull request to Nixpkgs got merged this night. I am officially one of the maintainers and a member of the organization now!</p>"},{"location":"journal/2023/february/#17#objectivism","title":"Objectivism","text":"<p>Watched the \u201cIntroduction to Objectivism, by Leonard Peikoff\u201d lecture. It\u2019s amazing. I correlate many of the ideas of objectivism with my own beliefs, so I am eager to dive into the works of Ayn Rand as soon as possible.</p>"},{"location":"journal/2023/february/#16","title":"Thursday, 16","text":""},{"location":"journal/2023/february/#nix-pills","title":"Nix Pills","text":"<p>Finished Nix Pills today. Those are good for understanding the core concepts behind basic functions used in Nixpkgs.</p>"},{"location":"journal/2023/february/#16#star-wars","title":"Star Wars","text":"<p>I\u2019ve replaced the \u201cHello there!\u201d and \u201cUnlimited power!\u201d clips on Odysee with SDR versions (different release). That way, you can watch it on mobile devices, too.</p>"},{"location":"journal/2023/february/#15","title":"Wednesday, 15","text":""},{"location":"journal/2023/february/#core-js","title":"<code>core-js</code>","text":"<p>The story of the <code>core-js</code>\u2018s maintainer is horrifying.</p> <p>As an open source developer myself, I will most likely have similar problems in terms of monetary income. The current plan is to seek a job in the field which would allow me to work on open source on a side. I strongly believe in Trade Free\u2018s take on this:</p> <p>The ones who offer, should not ask anything in return. The ones who receive, should not have to give anything in return.</p> <p>Some of the LiberaManifesto\u2018s takes are relatable, too:</p> <p>We owe you nothing. You owe us nothing.</p> <p>This is why I would probably hesitate from any kind of donations on my projects. But to make that work, a traditional job seems to be the only viable choice. I\u2019m not yet sure startups are worth the risk, even though they give much more freedom.</p>"},{"location":"journal/2023/february/#maniac","title":"Maniac","text":"<p>In other news, the Maniac series are pretty good. Silly at times, but it\u2019s good silly. Why aren\u2019t they more popular, though?</p> <p>And I still don\u2019t understand why are they called Maniac (besides being based on other series of the same name).</p>"},{"location":"journal/2023/february/#15#star-wars","title":"Star Wars","text":"<p>Preparing the \u201cHello there!\u201d and \u201cUnlimited power!\u201d clips today, so I can link to them on my about page.</p> <p>One of the features that I miss from \u00b5Torrent while using qBittorrent is media streaming. It allows one to seek a video file while it is being sequentially downloaded, and by doing so changing what part of the file is being downloaded. This is very useful for extracting small clips out of big releases that are otherwise too big to download in the whole.</p> <p>Today I used WebTorrent for the first time. It\u2019s pretty bad, but it has support for media streaming (it is its prime feature). Using it, I was able to</p> <ul> <li>Find the timestamps of the scenes in a smaller release by seeking it while it is being downloaded</li> <li>Find the same scenes in a 4K release while it is also being downloaded</li> </ul> <p>Then, I was able to extract the scenes from a partially downloaded file via FFmpeg:</p> <pre><code>ffmpeg -y -ss 01:14:40 -i input.mkv -t 40 -c copy -map 0 \"cut.mkv\"\n</code></pre> <p>After that, I did a more precise cut, splitting on I-frames, as I described here. Turns out chapters and subtitles can make the duration of the resulting file longer, so I have added a note about that.</p> <p>Also, apparently LBRY\u2019s player converts HDR to SDR just fine (Odysee\u2019s grays it out, though).</p>"},{"location":"journal/2023/february/#14","title":"Tuesday, 14","text":""},{"location":"journal/2023/february/#lbry","title":"LBRY","text":"<p>You have to transcode audio from Dolby AC-3 to AAC before uploading to LBRY, otherwise there will be no sound.</p> <p>I would recommend the FDK AAC codec.</p>"},{"location":"journal/2023/february/#lbry-desktop","title":"<code>lbry-desktop</code>","text":"<p>Updated my no blacklist fork to version <code>0.53.9</code>.</p>"},{"location":"journal/2023/february/#14#leave-no-trace","title":"Leave No Trace","text":"<p>Transcoding \u201cLeave No Trace\u201d extras today.</p> <p>Uploaded them on YouTube and LBRY.</p>"},{"location":"journal/2023/february/#14#nixpkgs","title":"Nixpkgs","text":"<p>If you want to <code>nix develop</code> a package and your <code>unpackPhase</code> fails with something like</p> <pre><code>&lt;...&gt;\ncp: cannot create regular file 'source/&lt;hash&gt;-source/&lt;file&gt;': Permission denied\n&lt;...&gt;\ndo not know how to unpack source archive /nix/store/&lt;hash&gt;-source\n</code></pre> <p>that\u2019s probably because the unpacker wanted to unpack the source directory, but the <code>source</code> directory wasn\u2019t empty. It creates a directory inside, but if there are other directories, it won\u2019t be sure what to unpack.</p> <p>You can fix this by adding</p> <pre><code>preUnpack = ''\n  rm -rf source\n'';\n</code></pre> <p>to your Nix expression.</p>"},{"location":"journal/2023/february/#transmission","title":"Transmission","text":"<p>I am somewhat impressed that Transmission developers have created native clients for all major platforms. That\u2019s something I thought was really cool but also pretty hard to do in general.</p> <p>I still prefer qBittorrent, though.</p>"},{"location":"journal/2023/february/#13","title":"Monday, 13","text":""},{"location":"journal/2023/february/#anytype","title":"Anytype","text":"<p>Got an invite to Anytype\u2018s Alpha Program today. You know\u2026 after two years of signing up for it, or something like that.</p> <p>And yeah, it\u2019s basically Notion. And also an Electron app. I don\u2019t really have any use for it right now.</p>"},{"location":"journal/2023/february/#home-manager","title":"Home Manager","text":"<p>I found out that Home Manager doesn\u2019t trigger package rebuilds on changing overlay attributes. Just as a user package does, it also binds packages to the garbage collector root that is attached to the currently running session (check with <code>nix-store --query --roots</code>). However, since a rebuild didn\u2019t happen, it reuses the built version in the store. Hence, you cannot apply changes until you reboot and garbage collect (via <code>sudo nix-collect-garbage</code>) again.</p> <p>This might be a case against putting packages in <code>home.packages</code> instead of <code>users.users.&lt;name&gt;.packages</code>.</p>"},{"location":"journal/2023/february/#13#nixos","title":"NixOS","text":"<p>Moved to NixOS completely. Silverblue is gone.</p>"},{"location":"journal/2023/february/#13#nixpkgs","title":"Nixpkgs","text":"<p>More missing packages:</p> <ul> <li>Identity</li> <li>Login Manager Settings</li> <li>Upscaler</li> </ul> <p>Also, a package for Tracy is missing a desktop file.</p>"},{"location":"journal/2023/february/#13#subtitle-edit","title":"Subtitle Edit","text":"<p>Added a desktop file to the package. Learned how to use <code>icoutils</code> for extracting icons from Windows executables. <code>nixpkgs</code> also provide the <code>makeDesktopItem</code> function which makes creating desktop files easier.</p>"},{"location":"journal/2023/february/#12","title":"Sunday, 12","text":""},{"location":"journal/2023/february/#12#nixos","title":"NixOS","text":"<p>Adding more packages to my configuration today, preparing to nuke Silverblue\u2018s partitions.</p> <p>Stumbled on a couple of issues with the packages:</p> <ul> <li><code>pipiwire-rs</code> is broken (affects Authenticator and Fractal Next for me)</li> <li><code>radicle-cli</code> is broken</li> <li>No package for NormCap</li> </ul>"},{"location":"journal/2023/february/#12#subtitle-edit","title":"Subtitle Edit","text":"<p>I\u2019ve created a PR this night to <code>nixpkgs</code>.</p>"},{"location":"journal/2023/february/#11","title":"Saturday, 11","text":""},{"location":"journal/2023/february/#11#git","title":"Git","text":"<p>Rant time: there is no way to update a repo from a shallow clone.</p> <p>Welp, gotta <code>git fetch --unshallow upstream master</code> the <code>nixpkgs</code> repo for a few hours now\u2026</p>"},{"location":"journal/2023/february/#11#subtitle-edit","title":"Subtitle Edit","text":"<p>Seems like Subtitle Edit requires .NET Framework 4.8. This is problematic since Nixpkgs switched to .NET 6.0 as the default (LTS) version, which is incompatible with the Framework one. <code>buildDotfileModule</code> wouldn\u2019t work, and I\u2019m unsure how to fetch proper NuGet dependencies for <code>buildDotfilePackage</code>. There is no <code>passthru.fetch-deps</code> in the latter one.</p> <p>I switched to the backup plan of wrapping with Mono.</p>"},{"location":"journal/2023/february/#dllimport","title":"<code>DllImport</code>","text":"<p>Some gotcha I found out: you probably should not add <code>lib</code> in front of a library when using <code>DllImport</code>. An example of that in the Subtitle Edit\u2019s code:</p> <pre><code>[DllImport(\"libhunspell\")]\n[DllImport(\"mpv\", CallingConvention = CallingConvention.Cdecl)]\n</code></pre> <p>The application would find <code>libmpv</code> in the <code>LD_LIBRARY_PATH</code>, but would ignore <code>libhunspell</code>. A workaround for that is to add a symbolic link to the library\u2019s shared object to the directory from which the application is loaded:</p> <pre><code>ln -s ${hunspell.out}/lib/libhunspell*.so $out/bin/libhunspell.so\n</code></pre> <p>That\u2019s described here and here.</p>"},{"location":"journal/2023/february/#10","title":"Friday, 10","text":""},{"location":"journal/2023/february/#10#git","title":"Git","text":"<p>To quickly fetch a branch of the upstream repo in a fork, run</p> <pre><code>git remote add upstream $UPSTREAM_REPO\ngit fetch --depth $DEPTH upstream $REMOTE_BRANCH:$LOCAL_BRANCH\ngit checkout $LOCAL_BRANCH\n</code></pre>"},{"location":"journal/2023/february/#10#subtitle-edit","title":"Subtitle Edit","text":"<p>Trying to package Subtitle Edit today. Downloading from the cache is painfully slow\u2026 I\u2019m not sure whether building it using the <code>buildDotfileModule</code> function will work, but I\u2019d like to try that first instead of wrapping the executable from the portable version with Mono.</p> <p>I need this program to run OCR on picture-based subtitles (<code>dvdsub</code>, specifically).</p>"},{"location":"journal/2023/february/#9","title":"Thursday, 9","text":""},{"location":"journal/2023/february/#9#nixpkgs","title":"Nixpkgs","text":"<p>Reading the Nixpkgs manual today.</p>"},{"location":"journal/2023/february/#8","title":"Wednesday, 8","text":""},{"location":"journal/2023/february/#fish","title":"Fish","text":"<p>You can immediately incorporate history changes from other sessions of the Fish shell via <code>history merge</code>. That\u2019s something I wanted for a long time but thought was not available. Here is a thread with examples on automating the synchronization if necessary.</p>"},{"location":"journal/2023/february/#nix","title":"Nix","text":"<p>Reading the Nix manual today.</p>"},{"location":"journal/2023/february/#7","title":"Tuesday, 7","text":""},{"location":"journal/2023/february/#7#leave-no-trace","title":"Leave No Trace","text":"<p>Even though the movie is mostly about struggles with PTSD, I really like its seemingly (intentional?) anti-societal message. Or, rather, that it propagates a more non-conformal and down-to-earth approach to human relationships rather than the one cultivated by contemporary culture.</p>"},{"location":"journal/2023/february/#so-you-want-to-be-a-wizard","title":"So You Want to Be a Wizard","text":"<p>Julia Evans\u2019s \u201cSo you want to be a wizard\u201d talk is pretty inspiring. She has a blog and she publishes computer zines at Wizard Zines. There\u2019s an accompanying zine to that talk, and the \u201cThe Pocket Guide to Debugging\u201d one is a good overview of practical approaches for debugging.</p>"},{"location":"journal/2023/february/#6","title":"Monday, 6","text":""},{"location":"journal/2023/february/#mpv","title":"<code>mpv</code>","text":"<p>Okay, if you don\u2019t want your movie evening ruined like it is now for me, change the <code>mpv</code>\u2018s <code>hwdec</code> setting to <code>auto</code> instead of <code>auto-safe</code>. For some reason, in the latter variant, the player doesn\u2019t pick up the <code>dav1d</code> (AV1) decoder automatically.</p>"},{"location":"journal/2023/february/#reflections-on-a-decade-of-coding","title":"Reflections on a decade of coding","text":"<p>Reading Jamie Brandon\u2018s \u201cReflections on a decade of coding\u201d today.</p> <p>While I\u2019m going through that, I would like to point out two very general pieces of advice I try to use everywhere in my life, especially in software development:</p> <ol> <li>Be pragmatic</li> <li>Be curious</li> </ol>"},{"location":"journal/2023/february/#5","title":"Sunday, 5","text":""},{"location":"journal/2023/february/#arrs","title":"*Arrs","text":"<p>Last night, while trying to fall asleep, I found out that I missed the beginning of the new season of The Owl House\u2026 which started 4 months ago. So, today I set up Sonarr and Prowlarr to make missing shows a thing of the past. I would recommend the wiki and TRaSH Guides if you\u2019d like to have an automated way to get the newest episodes of the shows. Make sure to check out variants for other media types, too!</p> <p>Make sure you got the permissions right, though, I spent some time dealing with that. There is also a nuance with the public indexers lying about the number of seeds, so that\u2019s something you might need to address, too.</p>"},{"location":"journal/2023/february/#4","title":"Saturday, 4","text":""},{"location":"journal/2023/february/#4#nixos","title":"NixOS","text":"<p>A bit more configuration done.</p>"},{"location":"journal/2023/february/#3","title":"Friday, 3","text":""},{"location":"journal/2023/february/#3#nixos","title":"NixOS","text":"<p>Okay, added lots of packages. Definitely struggled with overlays for a while, but I figured it out.</p> <p>Here\u2018s a good example of a simple config.</p> <p>This entry is committed from the new OS!</p>"},{"location":"journal/2023/february/#2","title":"Thursday, 2","text":""},{"location":"journal/2023/february/#2#nixos","title":"NixOS","text":"<p>I added support for secrets in my configuration via <code>sops-nix</code>, <code>ssh-to-age</code>, <code>sops</code>, and <code>age</code>.</p> <p>Create an Ed25519 SSH key if you don\u2019t have one yet:</p> <pre><code>ssh-keygen -t ed25519 -C \"&lt;email&gt;\"\n</code></pre> <p>Derive an <code>age</code> key from the SSH key:</p> <pre><code>mkdir -p ~/.config/sops/age\nread -s SSH_TO_AGE_PASSPHRASE; export SSH_TO_AGE_PASSPHRASE\ngo run github.com/Mic92/ssh-to-age/cmd/ssh-to-age@latest -i ~/.ssh/id_ed25519.pub\ngo run github.com/Mic92/ssh-to-age/cmd/ssh-to-age@latest -private-key -i ~/.ssh/id_ed25519 -o ~/.config/sops/age/keys.txt\n</code></pre> <p>Test the <code>age</code> key:</p> <pre><code>echo \"Hello there!\" &gt; test\nage -e -r \"&lt;public key&gt;\" test &gt; test.age\nage -d -i ~/.config/sops/age/keys.txt test.age\n</code></pre> <p><code>.sops.yaml</code>:</p> <pre><code>keys:\n  - &amp;age-key &lt;public key&gt;\ncreation_rules:\n  - path_regex: ^secrets.yaml$\n    key_groups:\n      - age:\n          - *age-key\n</code></pre> <p>Create / edit secrets via <code>sops secrets.yaml</code>.</p>"},{"location":"journal/2023/february/#1","title":"Wednesday, 1","text":""},{"location":"journal/2023/february/#1#nixos","title":"NixOS","text":"<p>Aight, there is much configuration to do. I\u2019ve installed NixOS on the disk since I couldn\u2019t build QuiteRSS from source in a virtual machine. Ironically, I couldn\u2019t do that on a real machine either. Gonna look out for a replacement (NewsFlash, most likely).</p> <p>On a related note, I have an unfinished project for my own RSS reader called Tidings.</p>"},{"location":"journal/2023/february/#plex","title":"Plex","text":"<p>You can start a Plex server in a container with</p> <pre><code>sudo podman run \\\n  -d \\\n  --name plex \\\n  --network=host \\\n  -e TZ=\"&lt;timezone&gt;\" \\\n  -v /path/to/database:/config:Z \\\n  -v /path/to/transcode:/transcode:Z \\\n  -v /path/to/data:/data:Z \\\n  docker.io/plexinc/pms-docker\n</code></pre> <p>The Web interface is at <code>http://localhost:32400/web</code>. Make sure the directories have sufficient privileges. See more info about the image here.</p>"},{"location":"journal/2023/january/","title":"January 2023","text":""},{"location":"journal/2023/january/#31","title":"Tuesday, 31","text":""},{"location":"journal/2023/january/#helix","title":"Helix","text":"<p>The softwrap / virtual text PR got merged today in the Helix project. Waiting on the persistent undo PR, then might give Helix a shot again (currently using Neovim).</p>"},{"location":"journal/2023/january/#31#nix","title":"Nix","text":"<p>There are built-in functions in Nix and a standard library in Nixpkgs which make writing Nix code slightly easier.</p>"},{"location":"journal/2023/january/#31#nixos","title":"NixOS","text":"<p>Aight, done with the NixOS manual (phew!). This and the NixOS Wiki have been the best resources so far. Home Manager is next.</p>"},{"location":"journal/2023/january/#30","title":"Monday, 30","text":""},{"location":"journal/2023/january/#30#neovim","title":"Neovim","text":"<p>Here\u2019s an example of setting up a Nix LSP server:</p> <pre><code>-- &lt;...&gt;\nrequire(\"lspconfig\").nil_ls.setup({\n  capabilities = capabilities,\n  on_attach = on_attach,\n  settings = {\n    [\"nil\"] = {\n      formatting = {\n        command = { \"alejandra\" },\n      },\n    },\n  },\n})\n-- &lt;...&gt;\n</code></pre>"},{"location":"journal/2023/january/#30#nix","title":"Nix","text":"<p>You can install Nil (an LSP server) and Alejandra (a formatter) from source:</p> <pre><code>cargo install --git https://github.com/oxalica/nil nil\ncargo install --git https://github.com/kamadorueda/alejandra\n</code></pre>"},{"location":"journal/2023/january/#30#nixos","title":"NixOS","text":"<p>To enable SPICE integration for Linux QEMU guest system, add</p> <pre><code>services.spice-vdagentd.enable = true;\n</code></pre> <p>to your <code>configuration.nix</code>. This will install the <code>spice-vdagent</code> package as a dependency.</p> <p>To get a list of installed packages, run</p> <pre><code>nix-store -qR /run/current-system\n</code></pre>"},{"location":"journal/2023/january/#29","title":"Sunday, 29","text":""},{"location":"journal/2023/january/#libxev","title":"<code>libxev</code>","text":"<p><code>libxev</code> is a cross-platform event loop written in Zig. An example on how to make a Zig library open to the C world.</p> <p>The author would like to create a generalized event loop comparable to <code>libuv</code>. Ironically, I created the Zig bindings for the <code>libuv</code> library recently.</p>"},{"location":"journal/2023/january/#29#nixos","title":"NixOS","text":"<p>Looking into NixOS today (again). This might take a while\u2026</p> <p>I guess I will carry on with the NixOS manual (which propagates Nix channels), but I can already see Nix Flakes being recommended instead.</p>"},{"location":"journal/2023/january/#29#zig-gir-ffi","title":"<code>zig-gir-ffi</code>","text":"<p>The announced changes are live. Except for casting, that will be in a separate commit.</p>"},{"location":"journal/2023/january/#28","title":"Saturday, 28","text":""},{"location":"journal/2023/january/#ffmpeg","title":"FFmpeg","text":"<p>Read \u201cFFmpeg - The Ultimate Guide\u201d today. It turned out to be pretty superficial material. They link to the wiki and the documentation, though, which I find as much better resources, so I guess the article is fine as a sort of introduction.</p>"},{"location":"journal/2023/january/#27#zig-gir-ffi","title":"<code>ffmpeg-static</code>","text":"<p>Build <code>ffplay</code>, too.</p> <p>Just an FYI: I have lots of examples for building libraries statically in this repository.</p>"},{"location":"journal/2023/january/#github-actions","title":"GitHub Actions","text":"<p>Here\u2019s an example of checking for the event name:</p> <pre><code>if: github.event_name == 'workflow_dispatch'\n</code></pre>"},{"location":"journal/2023/january/#mkdocs-section-index","title":"<code>mkdocs-section-index</code>","text":"<p>Ironically, got site builds breaking with the new version of <code>mkdocs-material</code>. Filed an issue.</p>"},{"location":"journal/2023/january/#podman","title":"Podman","text":"<p>If you get any kind of \u201cNo space left on device\u201d error while operating on a volume inside a container, try to delete the dangling volumes:</p> <pre><code>podman volume rm $(podman volume ls -f \"dangling=true\" -q)\n</code></pre> <p>Similarly, you can clean up dangling images:</p> <pre><code>podman rmi -f $(podman images -f \"dangling=true\" -q)\n</code></pre>"},{"location":"journal/2023/january/#tenacity","title":"Tenacity","text":"<p>Just wanted to check out the progress on Tenacity. Ended up in their Flatpak repo again, and I\u2019m surprised I\u2019ve never noticed that they build an OCI image to distribute the bundle, and they imitate a Flatpak repo using GitHub Pages. Pretty neat stuff, I might borrow the idea in the future.</p>"},{"location":"journal/2023/january/#28#zig-gir-ffi","title":"<code>zig-gir-ffi</code>","text":"<p>Documentation strings are done for methods and functions. Handling the array type seems to be a problem.</p> <p>I still have the \u201cDon\u2019t Write Comments\u201d video on my mind. I didn\u2019t agree with it first, but for this project I\u2019m leaning more towards restraining the amount of comments and documentation strings. The \u201cWhy, not what\u201d advice is a good one, too.</p>"},{"location":"journal/2023/january/#27","title":"Friday, 27","text":""},{"location":"journal/2023/january/#27#python-markdown","title":"Python-Markdown","text":"<p>The SmartyPants extension converts ASCII dashes, quotes and ellipses to their HTML entity equivalents. Very handy.</p>"},{"location":"journal/2023/january/#slav-art","title":"Slav Art","text":"<p>Just an FYI: you can download lossless music from Qobuz, Deezer, and Tidal for free using the Slav Art\u2019s bot. Here\u2019s an invite to their Revolt server called Divolt. Here\u2019s an invite to their Discord server, which is used as a backup. You can also download music from Spotify, SoundCloud, YouTube Music, and JioSaavn, but in a lossy format.</p>"},{"location":"journal/2023/january/#soulseek","title":"Soulseek","text":"<p>You can check out my music collection by searching for <code>paveloom</code> in a Soulseek client. I would recommend the Nicotine+ client.</p>"},{"location":"journal/2023/january/#stoicism","title":"Stoicism","text":"<p>Pretty good quote from today\u2019s Daily Stoic email:</p> <p>Believe me, it is the sign of a great man, and one who is above human error, not to allow his time to be frittered away.</p> <p>\u2014 Seneca the Younger, \u201cOn the Shortness of Life\u201d, 49 AD</p>"},{"location":"journal/2023/january/#27#zig","title":"Zig","text":"<p>Makes sense to use <code>std.mem.allocSentinel</code> if you need a sentinel-terminated slice from an array allocation.</p>"},{"location":"journal/2023/january/#27#zig-gir-ffi","title":"<code>zig-gir-ffi</code>","text":"<p>Just a reminder: if you\u2019re dealing with parsing XML using XPath, make sure you register the namespaces first. Here\u2019s an example from the Perl bindings for <code>libxml2</code>. They also have pretty good examples for the XPath expressions.</p> <p>Aight, the generation of callables is almost ready. Left to do:</p> <ul> <li>Documentation strings;</li> <li>Some types are not handled yet;</li> <li>A dependency on the object of the same name;</li> <li>Casting;</li> <li>Perhaps, something else.</li> </ul> <p>Also, I can see the design shaping: <code>from</code> and <code>toString</code> methods for all types. Gotta make it like that for the object generation source file, too.</p>"},{"location":"journal/2023/january/#26","title":"Thursday, 26","text":"<p>So it begins\u2026</p>"},{"location":"journal/2023/january/#26#neovim","title":"Neovim","text":"<p>If you don\u2019t want your windows resized after closing one, set</p> <pre><code>vim.opt.equalalways = false\n</code></pre> <p>in your config. I just did it because closing Neo-tree would resize everything.</p>"},{"location":"journal/2023/january/#26#python-markdown","title":"Python-Markdown","text":"<p>You can create or change an anchor by adding <code>{#my-anchor}</code> after a section or a link. Same as when using Zola, if I remember correctly. I use custom anchors for the sections on this page.</p>"},{"location":"journal/2023/january/#26#zig","title":"Zig","text":"<p>Might want to consider using <code>std.mem.sliceTo</code> in the future instead of <code>std.mem.span</code> where applicable.</p> <p>Also, it\u2019s okay to not have a null terminator on a slice if you know the length anyway.</p>"},{"location":"journal/2023/january/#26#zig-gir-ffi","title":"<code>zig-gir-ffi</code>","text":"<p>Created a simple CLI. Had an almost ready commit from yesterday. Lazy to do more today.</p> <p><code>g_irepository_get_default()</code> causes \u201cstill reachable\u201d memory leaks even though the program has exited after showing the help. That\u2019s weird.</p> <p>Next thing is object methods. Gonna move fields to a different function first, though. Also, probably should delete some cases from the main switch statement.</p>"},{"location":"journal/2023/july/","title":"July 2023","text":""},{"location":"journal/2023/july/#31","title":"Monday, 31","text":""},{"location":"journal/2023/july/#31#kirk","title":"Kirk","text":"<p>Finished reading the GNOME Developer Documentation.</p> <p>Added support for editing Qobuz credentials in the app. Made use of the Secret Service (via <code>libsecret</code>) to store them. I store the token as a secret and use the user ID as an attribute (which is required to differentiate secrets from each other). Now that I\u2019ve done it, I wonder if it\u2019s fine to just store the ID in the settings and use the service name as an attribute.</p>"},{"location":"journal/2023/july/#31#time-tracking","title":"Time tracking","text":"<ul> <li>Today [07:47:01]<ul> <li>Producing [05:42:54]<ul> <li>Software engineering [05:42:54]<ul> <li>Kirk [05:42:54]</li> </ul> </li> </ul> </li> <li>Consuming [02:04:07]<ul> <li>Reading [02:04:07]<ul> <li>[1991] Objectivism: The Philosophy of Ayn Rand [02:04:07]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/july/#30","title":"Sunday, 30","text":""},{"location":"journal/2023/july/#30#kirk","title":"Kirk","text":"<p>Added the Add Release Window with a (not yet functional) search entry. It is just an <code>Adw.EntryRow</code> and not a <code>Gtk.SearchEntry</code>, so there is no configurable delay between the input events. It should be fine for starters, but I might hit some API rate limits eventually. Which also brings up the question of having a cache for search results.</p> <p>Today I found out that <code>gtk_widget_class_add_binding_action</code> is a thing: it allows one to have class specific key bindings. I used it to fix the issue where the Preferences Window and the Add Release Window would open one on top of the other when repeatedly pressing the shortcuts.</p> <p>Also, turns out there is an issue with using <code>mold</code> with LTO enabled. It requires a plugin which is (ironically) not present in the latest version from Nixpkgs and also seems to be specific to the <code>gold</code> linker. Switched back to LLD in the Nix package declaration.</p>"},{"location":"journal/2023/july/#30#time-tracking","title":"Time tracking","text":"<ul> <li>Today [06:41:09]<ul> <li>Producing [04:10:47]<ul> <li>Software engineering [04:10:47]<ul> <li>Kirk [04:10:47]</li> </ul> </li> </ul> </li> <li>Consuming [02:30:22]<ul> <li>Reading [01:37:45]<ul> <li>[1991] Objectivism: The Philosophy of Ayn Rand [01:14:40]</li> <li>[2021] The Consuming vs. Producing Ratio [00:23:05]</li> </ul> </li> <li>Watching [00:52:37]<ul> <li>[2017] Productive Achievement: Man\u2019s \u201cNoblest Activity\u201d [00:52:37]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/july/#29","title":"Saturday, 29","text":""},{"location":"journal/2023/july/#29#kirk","title":"Kirk","text":"<p>Commited the code adding the destination folder path. I nuked input validation (checking if the chosen folder exists) in favor of trying to create the full path when necessary. This simplifies the approach a lot: I wanted at first to create an idle callback that would check if the folder path is valid. If not, it would notify about it both in the application window (via the menu button) and in the preferences window (via the <code>dialog-error-symbolic</code> image).</p> <p>Switched to using the <code>mold</code> linker.</p>"},{"location":"journal/2023/july/#29#time-tracking","title":"Time tracking","text":"<p>Okay, here\u2019s my categorization so far: time can be used to</p> <ol> <li>Produce something: this is man\u2019s noblest activity</li> <li>Consume something that is potentially pragmatically useful</li> <li>Consume something that is definitely not pragmatically useful</li> </ol> <p>I would like to be proud of focusing on the first option, making use of the second option when necessary, and limiting the third option. I will exclude from reports time periods that are related to the last option (I consider those wasteful, although sometimes necessary).</p> <ul> <li>Today [04:21:07]<ul> <li>Producing [03:30:37]<ul> <li>Software engineering [03:30:37]<ul> <li>Kirk [03:30:37]</li> </ul> </li> </ul> </li> <li>Consuming [00:50:30]<ul> <li>Reading [00:50:30]<ul> <li>[1991] Objectivism: The Philosophy of Ayn Rand [00:50:30]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"journal/2023/july/#28","title":"Friday, 28","text":""},{"location":"journal/2023/july/#28#kirk","title":"Kirk","text":"<p>Worked on making the program save the destination folder path and validate it.</p>"},{"location":"journal/2023/july/#28#time-tracking","title":"Time tracking","text":"<p>Today I encountered (again) this simple yet annoying idea:</p> <p>You can\u2019t improve what you don\u2019t measure.</p> <p>So, I decided I will investigate what self-tracking options are there. I found Furtherance to be what I needed: it allows me to easily log a period of time and put a label on it. It\u2019s manual, so it makes me responsible to stay focused to the task described in the label. I will be publishing the logs publicly, so that I stay accountable and consistent. Finally, it allows me to elaborate on my work-life balance. I also find it valuable to think of the latter in terms of the consumption-creation balance.</p> <ul> <li>Today [09:13:00]<ul> <li>Software engineering [03:58:21]<ul> <li>Kirk [03:04:25]</li> <li>Investigating a GTK leak [00:28:36]</li> <li>Inspecting an SQLite database [00:25:20]</li> </ul> </li> <li>Games [02:18:58]<ul> <li>LEGO\u00ae The Lord of the Rings\u2122 [02:18:58]</li> </ul> </li> <li>Life [01:14:09]<ul> <li>Eating [00:57:49]</li> <li>Dishes [00:16:20]</li> </ul> </li> <li>Research [00:56:46]<ul> <li>Time tracking [00:56:46]</li> </ul> </li> <li>Entertainment [00:44:46]<ul> <li>Good Omens - S02E01 [00:44:46]</li> </ul> </li> </ul> </li> </ul> <p>Yeah, I definitely have to automate this.</p>"},{"location":"journal/2023/july/#27","title":"Thursday, 27","text":""},{"location":"journal/2023/july/#27#kirk","title":"Kirk","text":"<p>Was working on adding the file chooser dialog for the destination directory, but got stuck with tracking down memory leaks. Turns out AddressSanitizer doesn\u2019t catch many leaks (e.g., a missing <code>g_autoptr</code>). Also, using GTK\u2019s and GLib\u2019s suppression files is essential (they do have a more generic version for LSan, too). Switched back to Valgrind.</p>"},{"location":"journal/2023/july/#27#objectivism","title":"Objectivism","text":"<p>Read more of Objectivism: The Philosophy of Ayn Rand.</p> <p>The refute of Determinism still seems to be lacking for me: they make the volition a self-evidential axiom (a corollary to consciousness) and then refute determinism by accusing it in denying this axiom (which is not necessarily what determinism proposes). That\u2019s a fallacy. I find the subject of deterministic volition amusing because it\u2019s hard to resolve objectively (which is what Objectivism claims to have done), and yet the results of this resolution are utterly worthless pragmatically (what does it really change if your choices are predetermined?).</p> <p>Still, I share the Objectivism\u2019s conclusions here. And I like this segue to the next chapter:</p> <p>Man\u2019s senses are valid. His mind is free. Now how should he use his mind?</p>"},{"location":"journal/2023/july/#26","title":"Wednesday, 26","text":""},{"location":"journal/2023/july/#26#kirk","title":"Kirk","text":"<p>Renamed the application from Groovy to Kirk (mostly because <code>groovy</code> turned out to be already taken, but also because I deem this captain to be better).</p> <p>Read a bit more of the GNOME Developer Documentation.</p> <p>Added saving of the window state. Started working on adding the destination folder entry. This latter simple addition already requires input validation and providing sensible defaults.</p>"},{"location":"journal/2023/july/#25","title":"Tuesday, 25","text":""},{"location":"journal/2023/july/#25#kirk","title":"Kirk","text":"<p>Read a bit more of the GNOME Developer Documentation.</p>"},{"location":"journal/2023/july/#24","title":"Monday, 24","text":""},{"location":"journal/2023/july/#24#deltarune","title":"Deltarune","text":"<p>Finished playing the Snowgrave route. It was surprisingly short.</p>"},{"location":"journal/2023/july/#24#kirk","title":"Kirk","text":"<p>Was reading the GNOME Developer Documentation today.</p>"},{"location":"journal/2023/july/#23","title":"Sunday, 23","text":""},{"location":"journal/2023/july/#23#deltarune","title":"Deltarune","text":"<p>Finished Deltarune today, but turns out it also has an alternate route (as Undertale did). Okay!</p>"},{"location":"journal/2023/july/#23#life","title":"Life","text":"<p>Spent the significant part of the day picking cherries from the tree and picking sprouts from potatoes. Ironically, was thinking about what it means to provide value while doing it.</p>"},{"location":"journal/2023/july/#22","title":"Saturday, 22","text":""},{"location":"journal/2023/july/#22#kirk","title":"Kirk","text":"<p>So, I\u2019ve added a sample preferences page, and then went to report the issue I described yesterday. Also, I wanted to report GTK\u2019s transitive dialogs shifting on subsequent calls, but turns out I actually already reported it a year ago! Completely forgot that was a thing. Also, surprising that this last one is still not confirmed.</p>"},{"location":"journal/2023/july/#22#nixpkgs","title":"Nixpkgs","text":"<p>I decided I will jump in where possible to maintain some of the Nixpkgs packages I use frequently. Such as Lazygit (yesterday\u2019s PR) and Blueprint (today\u2019s PR). This is just so that I don\u2019t have to wait for others to do updates and so that I can make use of my fork of Nixpkgs if necessary (read about the <code>system</code> branch below).</p>"},{"location":"journal/2023/july/#21","title":"Friday, 21","text":""},{"location":"journal/2023/july/#21#kirk","title":"Kirk","text":"<p>I\u2019ve solved the problem with the <code>GSettings</code> schema by making the program look into a directory next to the executable (in debug mode only). Turns out, on Linux, you can get data about the current process from the <code>/proc/self/</code> path, as described here. For instance, I\u2019ve got the directory where the executable is located at runtime by reading the contents of <code>/proc/self/cwd</code>.</p> <p>Encountered another weird issue, though: there are memory leaks when using <code>AdwPreferencesWindow</code>. Specifically, when using the search functionality or when switching the <code>AdwPreferencesPage</code>s. I was struggling to get the backtrace for the <code>AddressSanitizer</code>, and I remembered also wondering why Valgrind was so slow in comparison. Turns out, one have to put <code>fast_unwind_on_malloc=0</code> in the <code>ASAN_OPTIONS</code> environment variable, and then you get the same slow performance of Valgrind, but with the full backtrace. Anyhow, it only shows that the memory came from the template initialization, which is rather expected. No clue why wasn\u2019t it freed, though. I will probably have to report this (or investigate it myself).</p>"},{"location":"journal/2023/july/#21#nixpkgs","title":"Nixpkgs","text":"<p>A small addition to the yesterday\u2019s entry: I will be using <code>cherry-pick</code> instead of <code>merge</code>. This way, I don\u2019t have to deal with potential conflicts between the <code>master</code> and <code>nixos-unstable</code> branches.</p>"},{"location":"journal/2023/july/#20","title":"Thursday, 20","text":""},{"location":"journal/2023/july/#20#deltarune","title":"Deltarune","text":"<p>Played Deltarune today, and it\u2019s great! I did play the first episode when it came out, but I barely remembered anything from it. Brings back good memories from Undertale, too!</p>"},{"location":"journal/2023/july/#20#nixpkgs","title":"Nixpkgs","text":"<p>Since I maintain some of the packages in Nixpkgs, I sometimes want to make use of them before the associated pull requests are reviewed and merged. For that, I\u2019ve made the <code>nixpkgs</code> input in my NixOS flake point to the new <code>system</code> branch of my copy of Nixpkgs. This branch is basically the same as the upstream\u2019s <code>nixos-unstable</code>, but I merge some of my local branches into it.</p> <p>Here\u2019s how I\u2019ve created it:</p> <pre><code>git checkout nixos-unstable\ngit pull --rebase upstream nixos-unstable\ngit checkout -b system\ngit merge zigmod\ngit push -u origin system\n</code></pre> <p>Here\u2019s how I can update it:</p> <pre><code>git checkout nixos-unstable\ngit pull --rebase upstream nixos-unstable\ngit checkout -b system\ngit rebase -r nixos-unstable\ngit push -f origin system\n</code></pre>"},{"location":"journal/2023/july/#19","title":"Wednesday, 19","text":""},{"location":"journal/2023/july/#19#kirk","title":"Kirk","text":"<p>Was working on adding a preferences window, but got stuck at making the local settings schema visible to the program. Needed to create a custom target in the Meson build file just to get the <code>gschemas.compiled</code> file (the built-in function assumes the location of the schema itself). I can just set <code>GSETTINGS_SCHEMA_DIR</code> to the path where this file is located, but I\u2019d like to make it work out of the box (e.g., by setting the variable to a relative path in the Nix flake\u2019s <code>devshell</code>).</p>"},{"location":"journal/2023/july/#18","title":"Tuesday, 18","text":""},{"location":"journal/2023/july/#noita","title":"Noita","text":"<p>I finally beat Noita today! My strat is a wand with the Pollen spell with low cast and recharge times, with the Projectile Repulsion Field perk. Spamming Pollen allows you to create a shield that consumes all projectiles and also moves automatically to the enemies, dealing damage to them. The Projectile Repulsion Field will push the projectiles from yourself, including Pollen. This way, if you\u2019re careful, pretty much nothing can hurt you. Add to this some modifiers to deal more damage (e.g., I had Burning Trail), some protection perks (e.g., I had Fire Immunity), and voil\u00e0. The final boss didn\u2019t deal any damage.</p>"},{"location":"journal/2023/july/#18#objectivism","title":"Objectivism","text":"<p>Read more of Objectivism: The Philosophy of Ayn Rand. Couple of things are bothering me:</p> <ol> <li> <p>There is a lot of accent on \u201can entity acts in accordance to its nature\u201d, but then how come most of an entity\u2019s actions are dependent on the context? For instance, using an example from the book, \u201cunder ordinary circumstances, if a child releases a balloon filled with helium, only one outcome is possible: the balloon will rise\u201d. Now, this might be true, but what if one releases the same balloon in space? Will it also \u201cact in accordance to its nature\u201d and rise up? Not really, it will just pop. Did the identity of the balloon change on a trip from Earth to outer space? When and how did that happen? Or is this example extraordinary and therefore doesn\u2019t count? The author mentions this nuance: \u201cthe same entity, under the same circumstances, will perform the same action\u201d, and yet continues to put emphasis on the entity itself, rather than the circumstances that really define the outcome.</p> </li> <li> <p>When there is talk of causality, it is very probable to see an opinion on determinism. I can see (sort of a spoiler for myself, I guess) that Objectivism rejects the latter, but I am now unsure what the justification might be. \u201cThe concept of \u00abcause\u00bb is inapplicable to the universe\u201d, they say, but what about physical cosmology then?</p> </li> </ol>"},{"location":"journal/2023/july/#18#whisparr","title":"Whisparr","text":"<p>Opened a pull request to add the Whisparr NixOS module. Turns out it\u2019s not that hard to write a NixOS module (especially if it\u2019s a service). There are nuances, of course, but overall it\u2019s rather straightforward, having lots of examples in Nixpkgs.</p>"},{"location":"journal/2023/july/#17","title":"Monday, 17","text":""},{"location":"journal/2023/july/#17#whisparr","title":"Whisparr","text":"<p>I\u2019ve been working on creating a NixOS module for the Whisparr service.</p>"},{"location":"journal/2023/july/#16","title":"Sunday, 16","text":""},{"location":"journal/2023/july/#16#kirk","title":"Kirk","text":"<p>Finished reading the GLib reference. Also, read the Libadwaita reference. Ported the current code to Libadwaita.</p>"},{"location":"journal/2023/july/#16#objectivism","title":"Objectivism","text":"<p>Read more of Objectivism: The Philosophy of Ayn Rand. It seems to be very approachable and promises to be pragmatic (which is what I\u2019d like to see by choosing non-fiction books first).</p>"},{"location":"journal/2023/july/#15","title":"Saturday, 15","text":""},{"location":"journal/2023/july/#15#kirk","title":"Kirk","text":"<p>Read more of the GLib reference. By the way, the reference is better structured if you use Devhelp to access it.</p>"},{"location":"journal/2023/july/#15#objectivism","title":"Objectivism","text":"<p>Started reading Objectivism: The Philosophy of Ayn Rand.</p>"},{"location":"journal/2023/july/#14","title":"Friday, 14","text":""},{"location":"journal/2023/july/#14#life","title":"Life","text":"<p>Registered an application to the military commissariat today, so that they proceed with me according to the law. This is hopefully the last interaction with them this month, so I\u2019ve finally finished with all these worries and now have some time for myself.</p>"},{"location":"journal/2023/july/#13","title":"Thursday, 13","text":""},{"location":"journal/2023/july/#13#life","title":"Life","text":"<p>Somewhat upset after the visit to the military commissariat today. The draft board there is seemingly unenthusiastic about me going against the system, although some draft department workers are genuinely trying to help. I might encounter unpleasant surprises in the fall.</p>"},{"location":"journal/2023/july/#12","title":"Wednesday, 12","text":""},{"location":"journal/2023/july/#12#life","title":"Life","text":"<p>Visited my local military commissariat today, taught some ol\u2019 fellas about alternative civilian service. Will be visiting them again tomorrow. Did some related paper work.</p> <p>Changed the router at home to the one I was using in the dormitory while studying at the university. Turns out one antenna gives better coverage and more stable signal than three antennas (same dBm and dBi). Not sure why, though.</p>"},{"location":"journal/2023/july/#11","title":"Tuesday, 11","text":""},{"location":"journal/2023/july/#11#nixpkgs","title":"Nixpkgs","text":"<p>Answered to the reviews of the pull requests for Zigmod and GR Framework.</p> <p>Also, created a PR to update <code>libremidi</code>. First time using <code>nipkgs-review</code> in a while!</p>"},{"location":"journal/2023/july/#site","title":"Site","text":"<p>Made it so that the <code>repo_url</code> configuration option is set based on the hosting.</p>"},{"location":"journal/2023/july/#8","title":"Saturday, 8","text":""},{"location":"journal/2023/july/#8#kirk","title":"Kirk","text":"<p>We had a pretty rough thunderstorm today, had no electricity for quite some time and still don\u2019t have internet (this update will be pushed much later than committed). I was able to finish watching the Creating a GObject in C video by Christian Hergert before lights went out. Did some small stylistic changes in the code after that. Then, I read some of the GLib documentation.</p> <p>I will be on a short business trip for the next couple of days.</p>"},{"location":"journal/2023/july/#7","title":"Friday, 7","text":""},{"location":"journal/2023/july/#7#kirk","title":"Kirk","text":"<p>Finished with the GObject documentation. Tested this new knowledge by rewriting the current code using subclassing.</p>"},{"location":"journal/2023/july/#6","title":"Thursday, 6","text":""},{"location":"journal/2023/july/#6#kirk","title":"Kirk","text":"<p>Read more of the GObject documentation.</p>"},{"location":"journal/2023/july/#5","title":"Wednesday, 5","text":""},{"location":"journal/2023/july/#5#map","title":"MAP","text":"<p>Read some more MAP related materials.</p>"},{"location":"journal/2023/july/#4","title":"Tuesday, 4","text":""},{"location":"journal/2023/july/#4#map","title":"MAP","text":"<p>Did some more study on MAP related topics.</p>"},{"location":"journal/2023/july/#3","title":"Monday, 3","text":""},{"location":"journal/2023/july/#3#map","title":"MAP","text":"<p>Was reading about minor-related chronophilias the whole day. This is apparently actually tabooed knowledge (it\u2019s even censored on Wikipedia, and bigoted by almost everyone on any platform).</p>"},{"location":"journal/2023/july/#2","title":"Sunday, 2","text":""},{"location":"journal/2023/july/#2#kirk","title":"Kirk","text":"<p>Have been reading the GObject documentation, and the library is actually pretty neat. But also somewhat convoluted. Insert the obligatory \u201cwe have OOP at home\u201d meme here.</p>"},{"location":"journal/2023/july/#1","title":"Saturday, 1","text":""},{"location":"journal/2023/july/#1#kirk","title":"Kirk","text":"<p>Finished reading the additional documentation in the GTK documentation. GObject documentation is next, since having a grasp of the type system is essential.</p>"},{"location":"journal/2023/june/","title":"June 2023","text":""},{"location":"journal/2023/june/#30","title":"Friday, 30","text":""},{"location":"journal/2023/june/#30#kirk","title":"Kirk","text":"<p>Have been reading the GTK documentation today.</p>"},{"location":"journal/2023/june/#29","title":"Thursday, 29","text":""},{"location":"journal/2023/june/#29#kirk","title":"Kirk","text":"<p>Fixed build dependencies for the blueprints, set up the package in the Nix flake.</p>"},{"location":"journal/2023/june/#28","title":"Wednesday, 28","text":""},{"location":"journal/2023/june/#28#dotfiles","title":"<code>dotfiles</code>","text":"<p>Changed my Neovim config, making it so that LSP clients (managed both via <code>nvim-lspconfig</code> and <code>null-ls</code>) are attached after a Direnv environment is exported. This is something that bothered me for a long time, and I finally fixed it (took me the whole day!).</p> <p>Also, nuked the default <code>S</code> and <code>s</code> keybindings, those were rather annoying.</p>"},{"location":"journal/2023/june/#27","title":"Tuesday, 27","text":""},{"location":"journal/2023/june/#27#kirk","title":"Kirk","text":"<p>Added a configuration header. Read the Blueprint\u2018s documentation. The tool is pretty neat! Waiting on the bump in the Nixpkgs, though.</p>"},{"location":"journal/2023/june/#26","title":"Monday, 26","text":""},{"location":"journal/2023/june/#26#kirk","title":"Kirk","text":"<p>Set up a basic skeleton for the project, including the build scripts for common types of resources. Also, finally tried out Blueprint.</p>"},{"location":"journal/2023/june/#25","title":"Sunday, 25","text":""},{"location":"journal/2023/june/#25#c","title":"C","text":"<p>Went through the C reference on <code>cppreference.com</code>.</p>"},{"location":"journal/2023/june/#25#kirk","title":"Kirk","text":"<p>Moved my build system setup from the playground to the repository. Next up: reading into Gtk, GLib, GObject (and maybe more). I also found Devhelp to be useful for having these references offline and of the same version as the libraries in the current Nix environment.</p>"},{"location":"journal/2023/june/#23","title":"Friday, 23","text":""},{"location":"journal/2023/june/#documentation","title":"Documentation","text":"<p>I\u2019ve been looking for options to implement the documentation system for my future C project. Here are the variants so far:</p> <ul> <li><code>m.css</code> + Doxygen + Doxygen C++ theme (reference) + MkDocs + Material for MkDocs (everything else)</li> <li>Sphinx + Doxygen + Breathe (everything)<ul> <li>Example</li> </ul> </li> </ul>"},{"location":"journal/2023/june/#22","title":"Thursday, 22","text":""},{"location":"journal/2023/june/#22#c","title":"C","text":"<p>Finished reading the C programming language book.</p> <p>I\u2019m up for reading the <code>cppreference.com</code> now for the up-to-date state of the language. By the way, while reading the aforementioned book, I\u2019ve been using Zeal for having this reference offline and having a proper search engine for it.</p>"},{"location":"journal/2023/june/#glibc","title":"<code>glibc</code>","text":"<p>Holy moly, the GNU C Library (<code>glibc</code>) manual is 1228 pages long in the PDF form\u2026 Anyhoo, coming from Zig, I\u2019m used to being able to read the source code of the standard library, and it\u2019s somewhat convoluted to do since GNU folks prefer to use a stack of old technologies like <code>gitweb</code> for Git web interface, Mailman for electronic mail discussion and e-newsletter lists, Bugzilla for tracking issues. I don\u2019t mind that, though, so I just cloned their repo locally.</p>"},{"location":"journal/2023/june/#22#gr","title":"GR","text":"<p>Worked on the PR review remarks, including creating a PR to the upstream.</p>"},{"location":"journal/2023/june/#21","title":"Wednesday, 21","text":""},{"location":"journal/2023/june/#21#c","title":"C","text":"<p>Read more of the C programming language book.</p> <p>Reading the chapter about the UNIX System Interface, getting some Fortran flashbacks.</p>"},{"location":"journal/2023/june/#21#private-torrent-trackers","title":"Private torrent trackers","text":"<p>I\u2019m using 3 private trackers right now, and it\u2019s getting somewhat cumbersome managing the profiles on them. Today I finally found a torrent that doesn\u2019t exist on public trackers.</p>"},{"location":"journal/2023/june/#20","title":"Tuesday, 20","text":""},{"location":"journal/2023/june/#20#c","title":"C","text":"<p>Read more of the C programming language book.</p> <p>Played around more with the styles of the code (via ClangFormat). I\u2019m one of those <code>AlwaysBreakAfterReturnType: AllDefinitions</code> type of guys\u2026</p>"},{"location":"journal/2023/june/#20#zigmod","title":"Zigmod","text":"<p>Worked on making builds via my <code>buildZigmodPackage</code> function avoid unnecessary builds of the fixed-output derivations for dependencies while making the build more deterministic (by requiring a lock file). This pull request is one of my earliest contributions to Nixpkgs, and it\u2019s still work-in-progress!</p>"},{"location":"journal/2023/june/#19","title":"Monday, 19","text":""},{"location":"journal/2023/june/#19#c","title":"C","text":"<p>Started playing around with <code>struct</code>s. Added <code>cpplint</code> to the Meson build file in my playground.</p>"},{"location":"journal/2023/june/#19#gr","title":"GR","text":"<p>Spent a lot of time figuring out how to make the Nix derivation work on Darwin. Even tried enabling Objective-C compilation by patching the CMake build file. Turns out the fixes are pretty simple: don\u2019t build the QtWayland module and use the Darwin specific <code>stdenv</code>.</p>"},{"location":"journal/2023/june/#18","title":"Sunday, 18","text":""},{"location":"journal/2023/june/#18#c","title":"C","text":"<p>Okay, I got it: you get a <code>*char</code> if you just return an array, and you get a <code>char (*)[SIZE]</code> if you return a pointer to an array with a known size. Here\u2019s a revised version of the yesterday\u2019s snippet:</p> Explanations <pre><code>#include &lt;stdio.h&gt;\n\n// Constant `char`\nconst char x1 = 'a';\n\n// Function returning a `char`\nchar x2() { return x1; }\n\n// Pointer to a function returning a `char`\nchar (*x3)() = &amp;x2;\n\n// Array of `char`s\nchar x4[] = {'b', x1};\n\n// Array of pointers to constant `char`s\nconst char(*x5[]) = {&amp;x1};\n\n// Array of pointers to functions returning a `char`\nchar (*x6[])() = {&amp;x2};\n\n// Function returning a pointer to an array of\n// pointers to functions returning a `char`\nchar (*(*x7())[])() { return &amp;x6; }\n\n// Function returning a pointer to an array of `char`s\nchar *x8() { return x4; }\n\n// Array of pointers to functions returning\n// a pointer to an array of `char`s\nchar *(*x9[])() = {x8};\n\n// Function returning a pointer to a fixed size array of `char`s\nchar (*x10())[2] { return &amp;x4; }\n\n// A fixed size array of pointers to functions returning\n// a pointer to a fixed size array of `char`s\nchar (*(*x11[1])())[2] = {x10};\n\n// Print 'a' thrice\nint main() {\n    char x = (*x7())[0]();\n    printf(\"%c\\n\", x);\n    x = x9[0]()[1];\n    printf(\"%c\\n\", x);\n    x = (*x11[0]())[1];\n    printf(\"%c\\n\", x);\n}\n</code></pre>"},{"location":"journal/2023/june/#18#gr","title":"GR","text":"<p>Added a package for the GR framework to Nixpkgs. It\u2019s my preferred plotting backend for quick plots via the Plots package for Julia (I prefer PGFPlotsX for quality plots, though). With this package you will be able to easily use GR (just set the <code>GRDIR</code> variable) without having to resort to <code>patchelf</code> hacks.</p>"},{"location":"journal/2023/june/#17","title":"Saturday, 17","text":""},{"location":"journal/2023/june/#17#c","title":"C","text":"<p>Here are a couple of scary looking type definitions in C (from K&amp;R):</p> <ul> <li><code>char (*(*x())[])()</code></li> <li><code>char (*(*x[3])())[5]</code></li> </ul> <p>I couldn\u2019t figure out (yet) how to make my compiler happy about the last one (ain\u2019t a fan of pointers to fixed size arrays, seems like), but here are my explanations so far:</p> Explanations <pre><code>#include &lt;stdio.h&gt;\n\n// Constant `char`\nconst char x1 = 'a';\n\n// Function returning a `char`\nchar x2() { return x1; }\n\n// Pointer to a function returning a `char`\nchar (*x3)() = &amp;x2;\n\n// Array of `char`s\nchar x4[] = {x1, x1};\n\n// Array of pointers to constant `char`s\nconst char(*x5[]) = {&amp;x1};\n\n// Array of pointers to functions returning a `char`\nchar (*x6[])() = {&amp;x2};\n\n// Function returning a pointer to an array of\n// pointers to functions returning a `char`\nchar (*(*x7())[])() { return &amp;x6; }\n\n// Function returning a pointer to an array of `char`s\nchar *x8() { return x4; }\n\n// Array of pointers to functions returning\n// a pointer to an array of `char`s\nchar *(*x9[])() = {x8};\n\n// Print 'a' twice\nint main() {\n    char x = (*x7())[0]();\n    printf(\"%c\\n\", x);\n    x = *(x9[0])();\n    printf(\"%c\\n\", x);\n}\n</code></pre> <p>Also, check out this pretty cool example of how to construct such definitions easily.</p>"},{"location":"journal/2023/june/#torrentleech","title":"TorrentLeech","text":"<p>Okay, here\u2019s a hot tip if you\u2019re a TorrentLeech user: add 100 torrents slightly more than 10 MB and let the flow of TL Points commence!</p> <p>Also, according to my testing, the points are updated at 40-20 minutes intervals. Specifically, at every 23d and 42d minute of each hour.</p>"},{"location":"journal/2023/june/#16","title":"Friday, 16","text":""},{"location":"journal/2023/june/#16#c","title":"C","text":"<p>Finished reading the 60 terrible tips for a C++ developer article, and it\u2019s pretty good. Although, I still don\u2019t like that OOP abominations (especially those implemented in C++) are still pushed nowadays. Really, programs are just data structures and algorithms.</p>"},{"location":"journal/2023/june/#mouse-pad","title":"Mouse pad","text":"<p>Ordered a mouse pad today. Turns out there is some distinction in quality, and since I need it to be small, I\u2019m forced to use cloth as the top material (which is not necessarily bad, but might be a problem if it gets dirty). And you still sorta inevitably have to overpay for a brand logo.</p>"},{"location":"journal/2023/june/#objectivism","title":"Objectivism","text":"<p>Watched the Top 10 (+1) Things Leonard Peikoff Did For Me (and You) and it was really pleasant to listen to Robert Nasir genuinely and passionately explaining how the man, the myth, the legend affected his life. It also made me think about how all-encompassing and enduring, yet close to the ground Objectivism can be, and I definitely need to pick it up sooner than later.</p>"},{"location":"journal/2023/june/#15","title":"Thursday, 15","text":""},{"location":"journal/2023/june/#apartment","title":"Apartment","text":"<p>Spent some time looking into how adults buy/rent apartments and stuff.</p> <p>I think it\u2019s better to get a decent (some?) income first, though.</p>"},{"location":"journal/2023/june/#static-analyzer","title":"Static analyzer","text":"<p>Was reading the 60 terrible tips for a C++ developer article today (and still haven\u2019t finished it). I\u2019m not planning to touch C++ in the foreseeable future, but I\u2019m planning to switch to C as my primary language, and this article is still quite useful. Ended up setting <code>cppcheck</code> as a custom target in the Meson build file in my playground project for K&amp;R. I already had set up ASan and UBSan (which I find to be better than dynamic analysis via Valgrind), and I guess I will be able to fit some more analyzers.</p>"},{"location":"journal/2023/june/#14","title":"Wednesday, 14","text":""},{"location":"journal/2023/june/#14#c","title":"C","text":"<p>Read more of the C programming language book.</p>"},{"location":"journal/2023/june/#mtu","title":"MTU","text":"<p>Now that I\u2019m home, I was wondering whether there are issues with my home network configuration. I found out that my whole MTU configuration was inefficient. Here\u2019s what I did.</p> <p>Before going forward, it makes sense to check what value of MTU your ISP is recommending. For example, for PPPoE v2 it\u2019s 1492, but for DS-Lite over PPPoE (which is what my ISP uses) it\u2019s 1452.</p> <p>To find out the optimal MTU value for your currently active wireless network (assuming the interface is <code>wlo1</code>), disable VPN and run</p> <p><pre><code>ping -s $(( $(cat /sys/class/net/wlo1/mtu) - 28)) -M do \"8.8.8.8\" -c 1\n</code></pre> The 28 bytes are subtracted because of the <code>ping</code> itself (see explanation here). If your MTU is too high, you will see an error similar to</p> <pre><code>ping: local error: message too long, mtu=1452\n</code></pre> <p>where the specified value is the optimal MTU. Set it for your network (if you\u2019re using <code>NetworkManager</code>, you can do so via <code>nmtui</code>). Make sure you reconnect to the network, so the interface is recreated. You can check the current value of MTU by running <code>ip a</code>. Run the following command and make sure you receive a response:</p> <pre><code>ping -s $(( $(cat /sys/class/net/wlo1/mtu) - 28)) -D \"8.8.8.8\" -c 1\n</code></pre> <p>The overhead of the Wireguard protocol is 60 bytes if you\u2019re using IPv4 only or 80 bytes if you\u2019re using IPv6. Subtract the appropriate value and use the result as MTU in your Wireguard configs.</p> <p>It also makes sense to benchmark your upload and download speeds after the changes on sites like speedtest.net (use the closest server to your actual physical location for reliability) and compare them to the ones claimed by your ISP.</p>"},{"location":"journal/2023/june/#13","title":"Tuesday, 13","text":""},{"location":"journal/2023/june/#13#c","title":"C","text":"<p>Read some more of the C programming language book. Playing around with pointers arithmetic right now.</p>"},{"location":"journal/2023/june/#12","title":"Monday, 12","text":""},{"location":"journal/2023/june/#bookbrainz","title":"BookBrainz","text":"<p>I will be switching to BookBrainz for linking to books going forward. Even though it\u2019s very much a work-in-progress, it seems to be the only viable open source bibliographical database. I\u2019ve been using Goodreads before, but it\u2019s proprietary and owned by Amazon (big yikes). Open Library is fine, but I much prefer MetaBrainz\u2018s products as a happy MusicBrainz and ListenBrainz user.</p>"},{"location":"journal/2023/june/#12#c","title":"C","text":"<p>Read more of the C programming language book. I learned today that the C2x standard will introduce traditional one-byte booleans, and that using <code>goto</code>s is okay to break out of a nested loop or to handle cleanup code from multiple locations.</p>"},{"location":"journal/2023/june/#12#zigmod","title":"Zigmod","text":"<p>Spent some time refining the derivation for Zigmod.</p>"},{"location":"journal/2023/june/#11","title":"Sunday, 11","text":""},{"location":"journal/2023/june/#nix","title":"Nix","text":"<p>Was researching ways of sandboxing Nix applications today (again). Aside from Flatpak (which I use now) and <code>firejail</code> (which I tried last time), I looked into <code>bubblewrap</code>, <code>bubblejail</code>, <code>nixpak</code>, AppArmor. All of these new ones pretty much expect you to write your own profiles when necessary, which is rather inconvenient. Compared to others, AppArmor doesn\u2019t require you to wrap the binaries and works as a kernel module based on system policies, which is very close to what I\u2019d like. And yet, I missed easily declaring Spotify in conjunction with <code>spicetify</code> (via <code>spicetify-nix</code>); having better plugin support (e.g., for <code>mpv</code>, OBS and VLC); having KeePassXC\u2018s browser integration working. So I nuked all Flatpaks and switched back to native packages. This is probably gonna bite me someday, but hey, whatever.</p>"},{"location":"journal/2023/june/#10","title":"Saturday, 10","text":""},{"location":"journal/2023/june/#10#meson","title":"Meson","text":"<p>Finished reading the manuals and playing around with Meson, Ninja and Ccache. Ready for some blazingly fast builds!</p>"},{"location":"journal/2023/june/#9","title":"Friday, 9","text":""},{"location":"journal/2023/june/#9#meson","title":"Meson","text":"<p>Home at last. Reading into Meson.</p>"},{"location":"journal/2023/june/#6","title":"Tuesday, 6","text":""},{"location":"journal/2023/june/#6#pmg","title":"PMG","text":"<p>Defended my diploma today and received an \u201cexcellent\u201d rating! This work is finally finished.</p> <p>Dobby is free!</p>"},{"location":"journal/2023/june/#5","title":"Monday, 5","text":""},{"location":"journal/2023/june/#5#pmg","title":"PMG","text":"<p>We gathered with groupmates today to discuss the presentations. Applied some stylistic changes as a result.</p>"},{"location":"journal/2023/june/#4","title":"Sunday, 4","text":""},{"location":"journal/2023/june/#4#pmg","title":"PMG","text":"<p>Aight, done did it: compressed the presentation under 10 minutes.</p> <p>My legs hurt from walking in circles so much (pretty much the whole day on feet).</p>"},{"location":"journal/2023/june/#3","title":"Saturday, 3","text":""},{"location":"journal/2023/june/#3#pmg","title":"PMG","text":"<p>Committed the code of the presentation, rehearsed and reduced the text more (turns out there\u2019s really not that much you can fit under 10 minutes). I might reduce it even more, will do some more timing tomorrow.</p>"},{"location":"journal/2023/june/#2","title":"Friday, 2","text":""},{"location":"journal/2023/june/#2#pmg","title":"PMG","text":"<p>Spent most of the day just walking outside in circles, preparing the speech for the presentation. It\u2019s kinda chilly out there.</p>"},{"location":"journal/2023/june/#1","title":"Thursday, 1","text":""},{"location":"journal/2023/june/#1#pmg","title":"PMG","text":"<p>Worked on the presentation a bit more.</p>"},{"location":"journal/2023/june/#1#private-torrent-trackers","title":"Private torrent trackers","text":"<p>Yesterday RARGB was discontinued. That\u2019s rather sad since it was one of the best public torrent trackers out there. TorrentLeech, one of the popular private trackers, gives away invites on the occasion, and today I got one. This is my first private tracker (and I\u2019ve been torrenting for more than 10 years), so I learned about ratios, hit-and-runs, and more.</p> <p>Here\u2019s my opinion so far: it doesn\u2019t make any sense to download releases that are not marked as <code>FREELEECH</code> (releases that don\u2019t count into the downloading count, meaning they don\u2019t affect the ratio, which is the division of uploaded to downloaded), since the pool of people is much smaller than on public trackers, and everyone downloading is obliged to be seeding, too. I can\u2019t really compete with people using seedboxes. Since <code>FREELEECH</code> releases are always seeded, you can get high-quality content (which is what is usually marked with this tag) quite easily.</p> <p>TL Points are a joke, though, not gonna lie. I counted that it will take me about a year (without bonuses) of seeding to repay for the 3 GB I\u2019ve downloaded today.</p>"},{"location":"journal/2023/march/","title":"March 2023","text":""},{"location":"journal/2023/march/#30","title":"Thursday, 30","text":""},{"location":"journal/2023/march/#obs-teleport","title":"<code>obs-teleport</code>","text":"<p>Created a pull request to add <code>obs-teleport</code> to Nixpkgs.</p>"},{"location":"journal/2023/march/#29","title":"Wednesday, 29","text":""},{"location":"journal/2023/march/#28#pmg","title":"PMG","text":"<p>Made plotting multi-threaded. While I don\u2019t have much experience with multi-threading in Julia, spawning <code>Task</code>s turned out to be trivial via the <code>@spawn</code> macro. I also learned about <code>ReentrantLock</code> and used that to share the standard output between the tasks in a thread-safe manner.</p> <p>Reduced trait coupling in the Rust code. This is a quirk of the trait system that bothers me.</p> <p>Here\u2019s an example:</p> <pre><code>impl&lt;F&gt; Object&lt;F&gt;\nwhere\n    T: A + B\n{\n    fn a(&amp;mut self) -&gt; Result&lt;()&gt; {\n        // &lt;...&gt;\n    }\n    fn b(&amp;mut self) -&gt; Result&lt;()&gt; {\n        // &lt;...&gt;\n    }\n}\n</code></pre> <p>Now everything that uses either of these methods should implement both traits. This scales really badly and leads to weird trait bounds (I had <code>SampleUniform</code> being a requirement for using an iterator of a wrapped vector\u2026).</p> <p>However, you can separate the trait bounds, like so:</p> <pre><code>impl&lt;T&gt; Object&lt;T&gt;\n{\n    fn a(&amp;mut self) -&gt; Result&lt;()&gt;\n    where\n        T: A,\n    {\n        // &lt;...&gt;\n    }\n    fn b(&amp;mut self) -&gt; Result&lt;()&gt;\n    where\n        T: B,\n    {\n        // &lt;...&gt;\n    }\n}\n</code></pre> <p>And now the problem is solved by excessive copying/pasting.</p> <p>Also, if you specify the trait bounds in the declaration of an item, you will have to carry around them everywhere. I found it not being worth it for binary crates.</p>"},{"location":"journal/2023/march/#27","title":"Monday, 27","text":""},{"location":"journal/2023/march/#27#pmg","title":"PMG","text":"<p>Found the culprit of the errors on the rotation curve: the uncertainties related to the distances should have been inherited from parallax\u2019s errors only. However, after fixing it, the uncertainties related to the velocities are still mostly bigger than before. Taking into account that operations done by automatic differentiation are implicit, it\u2019s hard to tell whether it\u2019s a regression or an improvement.</p> <p>Finished with the old requests and now ready to work towards improving the fitting algorithm.</p>"},{"location":"journal/2023/march/#26","title":"Sunday, 26","text":""},{"location":"journal/2023/march/#26#pmg","title":"PMG","text":"<p>Finished refactoring. Seems like that fixed weird errors I had on the rotation curve. However, there is no easy way to check the correctness (except, well, by going through the math again).</p> <p>Implemented some requests, too (e.g., outputting more computed values).</p>"},{"location":"journal/2023/march/#25","title":"Saturday, 25","text":""},{"location":"journal/2023/march/#identity","title":"Identity","text":"<p>Created a pull request to add Identity to Nixpkgs.</p> <p>The author of the program has implemented the long-awaited side-by-side comparison mode, which is very useful. You can zoom in/out and drag the image, too!</p>"},{"location":"journal/2023/march/#22","title":"Tuesday, 22","text":""},{"location":"journal/2023/march/#22#pmg","title":"PMG","text":"<p>Started refactoring code to (hopefully) make it simpler. The galactocentric distance is stored in one place now instead of two.</p> <p>Passing so many arguments around is bothering me (same thing I had with Zig). Unfortunately, Rust doesn\u2019t have anonymous structs, so I will probably have to create a general struct with optional fields. Perhaps, simplifying the <code>Object</code> struct itself to this state would be possible.</p>"},{"location":"journal/2023/march/#22#site","title":"Site","text":"<p>Yeah, Codeberg\u2019s Woodpecker instance updates the image cache infrequently. I believe I solved the issue with</p> <pre><code>fatal: unable to access 'https://codeberg.org/paveloom/pages.git/': OpenSSL/3.0.8: error:16000069:STORE routines::unregistered scheme\n</code></pre> <p>by setting the <code>SSL_CERT_FILE</code> environment variable to <code>${pkgs.cacert}/etc/ssl/certs/ca-bundle.crt</code> in the image. Still can\u2019t test it, though!</p>"},{"location":"journal/2023/march/#21","title":"Tuesday, 21","text":""},{"location":"journal/2023/march/#21#oci","title":"OCI","text":"<p>Learned how to use <code>umoci</code>. Ditched the <code>buildContainer</code> function in favor of using <code>umoci</code> for building an OCI image from scratch. It simplifies stuff since there is no need for a <code>config.json</code> file, you just need to put what you want in your file system in a <code>rootfs</code> directory, and then <code>umoci insert</code> it.</p> <p><code>dive</code> works fine for OCI images, surprisingly. The last update for it was in 2021.</p>"},{"location":"journal/2023/march/#21#pmg","title":"PMG","text":"<p>Did a couple of stylistic changes in the code.</p>"},{"location":"journal/2023/march/#21#site","title":"Site","text":"<p>I switched to using an OCI image for CI/CD. The image is built via Nix.</p> <p>This way the runners don\u2019t require Nix anymore to run the build, and the image contains only required packages.</p> <p>Woodpecker doesn\u2019t see <code>/bin/sh</code>, though, for some reason. Image cache, perhaps?</p>"},{"location":"journal/2023/march/#16","title":"Thursday, 16","text":""},{"location":"journal/2023/march/#16#oci","title":"OCI","text":"<p>Tried to build an OCI image for my website today using <code>ociTools</code> in Nixpkgs. Turns out the <code>buildContainer</code> function actually creates a filesystem bundle instead of an image. Tried to use <code>runc</code> to run a container from the bundle, but found out that the generated config is incorrect. I fixed the <code>realatime</code> typo locally, but got stuck on trying to implement a working config for a rootless container. Might pick up the PR later.</p>"},{"location":"journal/2023/march/#14","title":"Tuesday, 14","text":""},{"location":"journal/2023/march/#14#zigmod","title":"Zigmod","text":"<p>Did a bit more work on the PR to Nixpkgs.</p>"},{"location":"journal/2023/march/#12","title":"Sunday, 12","text":""},{"location":"journal/2023/march/#tmux","title":"<code>tmux</code>","text":"<p>Started learning <code>tmux</code> today. I wonder if it\u2019s better to outsource some functionality of my Neovim config (e.g., tree-like file system manager plugins) to related external programs (e.g., <code>xplr</code>). I do that with Lazygit already. It\u2019s especially useful if I\u2019m ever to switch to Helix which doesn\u2019t have a plugin system yet.</p>"},{"location":"journal/2023/march/#11","title":"Saturday, 11","text":""},{"location":"journal/2023/march/#zig","title":"Zig","text":"<p>Turns out you can provide a custom format function for any user type. I did not know that!</p>"},{"location":"journal/2023/march/#10","title":"Friday, 10","text":""},{"location":"journal/2023/march/#divolt","title":"Divolt","text":"<p>Divolt is down. Was able to download from Slav Art Web. Tried DoubleDouble, too, but it failed a lot.</p>"},{"location":"journal/2023/march/#9","title":"Thursday, 9","text":""},{"location":"journal/2023/march/#9#livestreaming","title":"Livestreaming","text":"<p>No stream today, busy with important personal matters.</p>"},{"location":"journal/2023/march/#8","title":"Wednesday, 8","text":""},{"location":"journal/2023/march/#8#livestreaming","title":"Livestreaming","text":"<p>Some notes after today\u2019s stream:</p> <ul> <li>Overall bit rate for streaming the screen turned out to be way lower than streaming Noita yesterday: around 1Mbps. VBR is supposed to be capping the maximum bit rate, but I was missing some frames until I switched from 6Mbps to 5Mbps (I show stats on the recording). So, I wonder if this rate control mode might use more bits when necessary. I\u2019m downloading the replay right now, and it is 1.75 times bigger than the recorded one. Also, since the recording\u2019s bit rate is pretty small, as I pointed out yesterday, there might be no reason to use VBR in my use case. However, I would like to try 60 FPS tomorrow.</li> <li>Colors seem to be a bit more pale. I wonder if I can fiddle with the color space.</li> <li>I might try a slower preset for the recording.</li> <li>If I do stick with VBR, I might also try to lower the bit rate and make the buffer size the same or twice as that.</li> <li>Might increase the audio bit rate, too.</li> <li>I would like to take a look on how it looks on mobile while I\u2019m streaming.</li> </ul> <p>Here are the best resources on rate control modes:</p> <ul> <li>CRF Guide (Constant Rate Factor in x264, x265 and libvpx)</li> <li>Understanding Rate Control Modes (x264, x265, vpx)</li> </ul> <p>I\u2019ve been thinking more about the \u201cpublic accountability\u201d idea. Here\u2019s a simple recap in 3 key points:</p> <ol> <li>Timeboxing (you schedule your work)</li> <li>Public schedule (e.g., announcing livestreams)</li> <li>Public work (e.g., livestreaming)</li> </ol> <p>The main pro, of course, is that you get things done. You might also get fun along the way if you look into creating a community (not me, ironically, but check out ThePrimeagen). I was also thinking about it being an analogy to traditional work, except, you know\u2026 it\u2019s on your terms.</p>"},{"location":"journal/2023/march/#8#obs","title":"OBS","text":"<p>Had problems with adding the Dropped Frame Alarm Lua script for OBS. Looks like Lua\u2019s <code>CPATH</code> is broken, the correct path to <code>obslua.so</code> is appended twice in a single entry.</p>"},{"location":"journal/2023/march/#odysee","title":"Odysee","text":"<p>I said yesterday that Odysee\u2019s front-end is closed-source, but apparently it is open-source. And the mobile apps are, too!</p> <p>A YouTube / Twitch alternative that goes brrr.</p>"},{"location":"journal/2023/march/#8#pmg","title":"PMG","text":"<p>Updated everything, added a Nix flake. Somehow that took 4 hours\u2026 Done on a stream!</p>"},{"location":"journal/2023/march/#7","title":"Tuesday, 7","text":""},{"location":"journal/2023/march/#7#livestreaming","title":"Livestreaming","text":"<p>I did a test stream today, playing Noita. It ended with the game crashing my laptop. That\u2019s the first time on the GOG version of the game, while both streaming and recording, but happens all the time on the Steam version, for some reason.</p> <p>I decided to stick with Odysee (as opposed to YouTube and Twitch) mostly because I\u2019m planning to play copyrighted music on streams. Never understood why this is considered illegal. It literally harms no one, but helps every artist with exposure. Also, Odysee is based on the LBRY\u2018s open-source stack underneath the closed-source front-end, the network is peer-to-peer and uncensorable (if someone keeps seeding the content, that is).</p> <p>Some notes:</p> <ul> <li>I need something notifying me that I lose frames (I have flaky internet)</li> <li>I can put a chat pop-up on top of all windows, but it\u2019s somewhat inconvenient for full screen applications (like games) on a single display</li> </ul> <p>Streaming settings:</p> <ul> <li>Encoder: <code>x264</code></li> <li>Rate Control: <code>VBR</code></li> <li>Bit rate: 7Mbps, then 6Mbps, then 5Mbps</li> <li>CRF: 17</li> <li>Key frame interval: 2s</li> <li>Preset: <code>veryfast</code></li> <li>Profile: High</li> <li>Tune: <code>zerolatency</code></li> </ul> <p>Recording settings:</p> <ul> <li>Encoder: <code>x264</code></li> <li>Rate Control: <code>CRF</code></li> <li>CRF: 17</li> <li>Key frame interval: 0s</li> <li>Profile: None</li> <li>Tune: None</li> </ul> <p>Forgot to change the profile for the recording settings. Hard to tell about the bit rate for streaming until I download the replay (the live version was lagging for me, but I don\u2019t think it\u2019s that bad in reality). From what I can see now, 7Mbps was a bit too much, but 6Mbps and 5Mbps were fine (network-wise). The overall bit rate of the recording is way lower, though, almost 4Mbps, so not sure what happened there. This also might be a case for just using <code>CRF</code> for screen sharing, and using the same settings for the recording to lower CPU usage.</p> <p>Also, someone really made sure to leave a slime right after I started streaming\u2026</p>"},{"location":"journal/2023/march/#6","title":"Monday, 6","text":""},{"location":"journal/2023/march/#6#livestreaming","title":"Livestreaming","text":"<p>Looked into streaming today. I might actually do it for the sake of the \u201cpublic accountability\u201d idea. That is, the idea to accompany timeboxing with the schedule and the work done being public. I fiddled with OBS today, preparing scenes and learning basic shortcuts. That said, it\u2019s probably gonna be a simple screen share.</p> <p>Also looked into VTubing, but that seems to be somewhat expensive to run and hard to make pretty, and I don\u2019t feel like it\u2019s gonna add much (I\u2019m not gonna be speaking, after all).</p>"},{"location":"journal/2023/march/#6#obs","title":"OBS","text":"<p>Created a PR to Nixpkgs for the Advanced Scene Switcher plugin for OBS. I wanted to check whether it will allow me to automatically switch scenes depending on which window is focused. Alas, you can\u2019t do that on Wayland.</p>"},{"location":"journal/2023/march/#5","title":"Sunday, 5","text":""},{"location":"journal/2023/march/#counter-strike-source","title":"Counter-Strike: Source","text":"<p>So, my procrastination suggested me to play CSS ZE again. I always thought of this game as of sort of a time capsule, and I saw this again today: it\u2019s the same players playing the same maps and joking the same jokes. I still enjoy it, though.</p>"},{"location":"journal/2023/march/#5#livestreaming","title":"Livestreaming","text":"<p>I\u2019ve read the <code>noopkat</code>\u2018s (Suz Hinton) old article \u201cLessons from my first year of live coding on Twitch\u201d today. Livestreaming coding sessions is something I thought of for a while now. In the few articles that I saw, people often give advice on how to make them more entertaining (as far as that\u2019s possible for this niche). But what if I would do it just for the sake of keeping myself accountable? Sort of like this journal, but, you know, the next level.</p> <p>And become a silent coding VTuber, maybe?!</p>"},{"location":"journal/2023/march/#4","title":"Saturday, 4","text":""},{"location":"journal/2023/march/#gnome-shell-memento-mori","title":"<code>gnome-shell-memento-mori</code>","text":"<p>I\u2019ve tested my extension on GNOME OS Nightly, added support for GNOME 44.</p> <p>I\u2019ve also switched to pure NPM from Bun and added a Nix flake.</p>"},{"location":"journal/2023/march/#virt-manager","title":"Virt-Manager","text":"<p>Learned how to set up Virtual Machine Manager with file sharing between the host and the guest systems on NixOS:</p> <ol> <li>Follow the instructions on the NixOS Wiki.</li> <li>Add the <code>virtiofsd</code> package to user packages.</li> <li> <p>From the virtual hardware details of a machine: <code>Add Hardware</code> \u2192 <code>Filesystem</code>.</p> <p>Set driver to <code>virtiofs</code>, source path \u2013 to the path on your host machine. Target path is an arbitrary string used as a mount tag (e.g., <code>host</code>).</p> </li> <li> <p>Add</p> <pre><code>&lt;binary path=\"/etc/profiles/per-user/$USER/bin/virtiofsd\" xattr=\"on\"/&gt;\n</code></pre> <p>to the XML config of the new Filesystem virtual hardware. Replace <code>$USER</code> with your username.</p> </li> <li> <p>In the Guest system: run <code>sudo mkdir /media/host</code> and put</p> <pre><code>host /media/host virtiofs rw,users,_netdev 0 0\n</code></pre> <p>in <code>/etc/fstab</code>. Should mount automatically, but you might need to log out and log in again.</p> </li> </ol>"},{"location":"journal/2023/march/#3","title":"Friday, 3","text":""},{"location":"journal/2023/march/#nix","title":"Nix","text":"<p>I\u2019ve been trying to rewrite the Nix expression of this very site to take advantage of fixed-output derivations. I\u2019ve encountered some issues</p> <ul> <li>The <code>.git</code> directory is pruned from the local source (e.g., <code>./.</code>)</li> <li>Seems like there is something non-deterministic in PDM\u2018s cache</li> <li>Timestamps of all files in the store are reset (this breaks latest revision dates)</li> </ul> <p>The first one can be bypassed by fetching the repo from a Git forge. Proper investigation would be required for the second one. And the third one is making this whole idea a no-go.</p> <p>Gotta stick with the development shell on this one.</p>"},{"location":"journal/2023/march/#2","title":"Thursday, 2","text":""},{"location":"journal/2023/march/#2#zigmod","title":"Zigmod","text":"<p>Finished the yesterday\u2019s work. Learned how to write package tests along the way.</p>"},{"location":"journal/2023/march/#1","title":"Wednesday, 1","text":""},{"location":"journal/2023/march/#objectivism","title":"Objectivism","text":"<p>There seems to be a couple of issues with Objectivism:</p> <ul> <li>Glaring lack of priority of virtue acquisition in ethics</li> <li>Rather aggressive focus on extremes</li> </ul> <p>The latter is something that struck me, too, while reading \u201cPhilosophy: Who Needs It\u201d.</p> <p>Interestingly, both linked resources mention these issues, and both refer to Aristotelianism as a more practical solution. This might be a reason to explore the latter in parallel to objectivism.</p>"},{"location":"journal/2023/march/#1#zigmod","title":"Zigmod","text":"<p>I learned how to use fixed-output derivations in Nix packages. This is big since it allows me to package pretty much anything now (you can bypass the network restrictions with them).</p> <p>I\u2019m almost done with the rewrite of the Zigmod package, but deterministic builds with Git repositories are apparently pretty complex. Thankfully, I only need the code, so I fixed my issue last minute by nuking all <code>.git</code> directories.</p>"},{"location":"journal/2023/may/","title":"May 2023","text":""},{"location":"journal/2023/may/#31","title":"Wednesday, 31","text":""},{"location":"journal/2023/may/#31#pmg","title":"PMG","text":"<p>Roughly put up some text for the presentation (it\u2019s basically the same as in the diploma, really).</p>"},{"location":"journal/2023/may/#30","title":"Tuesday, 30","text":""},{"location":"journal/2023/may/#airvpn","title":"AirVPN","text":"<p>Mullvad announced yesterday that they will be removing the support for forwarded ports, disabling the ability to add new ports immediately and removing all existing forwarded ports on July, 1st. Unfortunately, this affects me since I\u2019m very active in the BitTorrent and Soulseek P2P-networks, which rely solely on port forwarding (to establish a connection one of the peers must have an open port, and of course many people torrent behind VPNs).</p> <p>After some research, I decided to switch to AirVPN. They support up to 20 port forwards, but also seemingly take a stance at protecting the privacy of their users. They provide a config generation tool, and I\u2019ve imported several WireGuard configs on my NixOS machine via <code>NetworkManager</code>:</p> <pre><code>ln -s NL-Alblasserdam-Celaeno.conf Celaeno.conf\nnmcli connection import type wireguard file Celaeno.conf\n</code></pre>"},{"location":"journal/2023/may/#29","title":"Monday, 29","text":""},{"location":"journal/2023/may/#29#pmg","title":"PMG","text":"<p>Started writing the presentation.</p> <p>Found a bunch of small typos in the diploma\u2026 and missing error lines on the rotation curve plots.</p>"},{"location":"journal/2023/may/#27","title":"Saturday, 27","text":""},{"location":"journal/2023/may/#c","title":"C","text":"<p>Today I learned that C doesn\u2019t have boolean types (well, without including the standard library header <code>stdbool.h</code>). I mean, makes sense, but I guess I\u2019ll have to get used to inserting <code>0</code> and <code>1</code> instead of <code>false</code> and <code>true</code>, respectively. The tricks with the bitwise XOR operator (<code>x ^= 1</code>) and explicit negation (<code>x = !x</code>) are neat, but they obfuscate the logic. K&amp;R suggest using symbolic constants, but I prefer <code>boolean</code>-ish variable names (e.g., <code>if (empty) {}</code>).</p> <p>I am happy with how snappy <code>clangd</code> is, and compilation times (I\u2019m using <code>clang</code>) in a release mode are almost instant.</p>"},{"location":"journal/2023/may/#27#pmg","title":"PMG","text":"<p>Fixed another error when computing the estimate mean error. I was mutating the same vector of parameters when computing the finite differences (and so I was accidentally computing a half of the forward finite difference instead of the full central one).</p>"},{"location":"journal/2023/may/#26","title":"Friday, 26","text":""},{"location":"journal/2023/may/#c_1","title":"C","text":"<p>Started reading The C Programming Language. Learned how to set up a very basic C project using Clang, Meson, Nix, and how to set up <code>clangd</code> (ain\u2019t that straightforward with how Nix works).</p>"},{"location":"journal/2023/may/#26#pmg","title":"PMG","text":"<p>Forgot to extract a square root when computing the estimate mean error, fixed that.</p>"},{"location":"journal/2023/may/#25","title":"Thursday, 25","text":""},{"location":"journal/2023/may/#25#pmg","title":"PMG","text":"<p>Covariance matrices and related to them matrices are now computed. Added model confidence intervals on the rotation curves plots.</p>"},{"location":"journal/2023/may/#24","title":"Wednesday, 24","text":""},{"location":"journal/2023/may/#codon","title":"Codon","text":"<p>I might have just wasted a huge part of my free day updating the Nixpkgs package of Codon from <code>0.16.0</code> to <code>0.16.1</code> only to realize later that the dependency hashes are the same\u2026</p> <p>Also, yeah, I finally got some free time away from the diploma.</p>"},{"location":"journal/2023/may/#23","title":"Tuesday, 23","text":""},{"location":"journal/2023/may/#23#pmg","title":"PMG","text":"<p>Finished the diploma.</p>"},{"location":"journal/2023/may/#22","title":"Monday, 22","text":""},{"location":"journal/2023/may/#22#pmg","title":"PMG","text":"<p>Edited the diploma according to the received remarks. Somehow that took the whole day\u2026</p>"},{"location":"journal/2023/may/#21","title":"Sunday, 21","text":""},{"location":"journal/2023/may/#21#pmg","title":"PMG","text":"<p>Corrected the way an extra error term is added to the velocity uncertainties. There are now two sets of bars for the non-from-Reid objects on the rotation curves. Added a near the solar circle sample that is self-consistent.</p> <p>And finally, I finished writing the diploma! Will have to insert the new results tomorrow, though, but still!</p>"},{"location":"journal/2023/may/#20","title":"Saturday, 20","text":""},{"location":"journal/2023/may/#20#pmg","title":"PMG","text":"<p>Added a variant for the optimal sample of HMSFRs, but with disabled inner optimization and outliers checks (to check for the effect of assuming zero parallax errors separately from the effect of reducing the sample volume).</p> <p>Added most of the results to the diploma.</p>"},{"location":"journal/2023/may/#19","title":"Friday, 19","text":""},{"location":"journal/2023/may/#19#pmg","title":"PMG","text":"<p>Added variants for checking self-consistency of the models. Added a comparison chart for original parallaxes vs. reduced ones (it shows that the algorithm of getting proper parallaxes via the statistical method works). Switched to the <code>chi^2_3</code> characteristic when checking for outliers for the variants with disabled inner optimization.</p> <p>That\u2019s kinda it\u2026 just gotta put the results into the diploma now.</p>"},{"location":"journal/2023/may/#18","title":"Thursday, 18","text":""},{"location":"journal/2023/may/#nixpkgs","title":"Nixpkgs","text":"<p>An update to <code>obs-studio-plugins.advanced-theme-switched</code> required me to add <code>libremidi</code> to Nixpkgs. Did that.</p>"},{"location":"journal/2023/may/#18#pmg","title":"PMG","text":"<p>Added result variants with the inner optimization disabled for comparison.</p> <p>The mean systematical error in parallaxes is now computed.</p>"},{"location":"journal/2023/may/#17","title":"Wednesday, 17","text":""},{"location":"journal/2023/may/#17#pmg","title":"PMG","text":"<p>Finished with the errands. Added a section to the diploma about applying the algorithm.</p>"},{"location":"journal/2023/may/#16","title":"Tuesday, 16","text":""},{"location":"journal/2023/may/#16#pmg","title":"PMG","text":"<p>Welp, turns out I\u2019ve got the L\u2019 thing wrong. Struggled, but made it proper today.</p> <p>Also, there are a bunch of other errands, and not much time left\u2026</p>"},{"location":"journal/2023/may/#15","title":"Monday, 15","text":""},{"location":"journal/2023/may/#15#pmg","title":"PMG","text":"<p>Wrote about the samples today. Started writing about the inner target function not being smooth. This required me to write some extra code to compute and plot the inner profiles, and to find the objects with more than one local minima on these profiles and to plot their (X, Y) distribution. The latter is almost done, and hopefully it will show what I think it should.</p>"},{"location":"journal/2023/may/#14","title":"Sunday, 14","text":""},{"location":"journal/2023/may/#14#pmg","title":"PMG","text":"<p>Wrote about the algorithm in the diploma.</p>"},{"location":"journal/2023/may/#13","title":"Saturday, 13","text":""},{"location":"journal/2023/may/#13#pmg","title":"PMG","text":"<p>Added a four-dimensional method (next to the one-dimensional one) for checking for outliers. Okay, I hope this is the last change to the algorithm.</p> <p>Wrote most of the theory in the diploma. Thinking about writing about more practical bits of the algorithm next, separate from the theory.</p>"},{"location":"journal/2023/may/#12","title":"Friday, 12","text":""},{"location":"journal/2023/may/#12#pmg","title":"PMG","text":"<p>Outliers are now searched with L\u2019 = 3 first, then with L\u2019 = 1. This is (hopefully) a final touch, and the realization of the method of parametric modelling of the Galaxy is now complete.</p> <p>Was also writing the theoretical part of the diploma. That\u2019s definitely taking a while\u2026</p>"},{"location":"journal/2023/may/#11","title":"Thursday, 11","text":""},{"location":"journal/2023/may/#11#pmg","title":"PMG","text":"<p>Made the HMSFRs sample more uniform by adding an extra error term to the non-from-Reid objects. The <code>best_n</code> for HMSFRs is found to be 3, and the profiles and relative errors are adequate now.</p> <p>Started making the outliers routine more intricate.</p>"},{"location":"journal/2023/may/#10","title":"Wednesday, 10","text":""},{"location":"journal/2023/may/#10#pmg","title":"PMG","text":"<p>Finished with the introduction, started writing the theoretical part of the diploma.</p>"},{"location":"journal/2023/may/#9","title":"Tuesday, 9","text":""},{"location":"journal/2023/may/#9#pmg","title":"PMG","text":"<p>Still writing an introduction\u2026</p> <p>I\u2019ve learned how to create bibliographies today in XeTeX. Basically, I\u2019ve set up a combination of Zotero (with their browser add-on) and Better BibTeX for automatic generation of <code>.bib</code> files, and a combination of <code>tectonic</code>, <code>biber</code> and <code>biblatex</code> for typesetting.</p>"},{"location":"journal/2023/may/#8","title":"Monday, 8","text":""},{"location":"journal/2023/may/#8#pmg","title":"PMG","text":"<p>Started writing the text of the diploma.</p>"},{"location":"journal/2023/may/#7","title":"Sunday, 7","text":""},{"location":"journal/2023/may/#7#pmg","title":"PMG","text":"<p>Okay, computing errors works now for all models. Many don\u2019t converge well, though, but it\u2019s fine.</p>"},{"location":"journal/2023/may/#6","title":"Saturday, 6","text":""},{"location":"journal/2023/may/#6#pmg","title":"PMG","text":"<p>Finished with other errands. Computing the errors for all models. This takes forever\u2026</p>"},{"location":"journal/2023/may/#5","title":"Friday, 5","text":""},{"location":"journal/2023/may/#5#pmg","title":"PMG","text":"<p>Okay, I was able to make the inner optimization mostly work by switching to subintervals and finding the global minimum in the interval that way. The interval is now expanded from \u00b13 to \u00b16 to \u00b19 sigmas as necessary.</p>"},{"location":"journal/2023/may/#4","title":"Thursday, 4","text":""},{"location":"journal/2023/may/#4#pmg","title":"PMG","text":"<p>Started reimplementing the optimization process to make it possible to go through all degrees of the polynomial of the rotation curve via the same sample (by sharing the blacklist). This will allow us to define which degree is the best.</p>"},{"location":"journal/2023/may/#2","title":"Tuesday, 2","text":""},{"location":"journal/2023/may/#2#pmg","title":"PMG","text":"<p>Added an option to output extra information about the blacklisted objects. It\u2019s their (X, Y) distribution, discrepancies, and inner profiles.</p>"},{"location":"journal/2023/may/#1","title":"Monday, 1","text":""},{"location":"journal/2023/may/#1#pmg","title":"PMG","text":"<p>Aight, it\u2019s done. I\u2019ve put the parallax smoothness check in a loop, and inside that loop is the previous loop for checking the discrepancies via frozen profiles. The parallax interval (both for finding the minimum and checking the smoothness of the inner target function in its vicinity) is bound to 3 sigmas, the interval for other discrepancies is now increased to 5 sigmas. It mostly works now, and I\u2019m very much eager to stop at this implementation of the optimization routine (because, to be frank, I\u2019m burned out).</p>"},{"location":"journal/2023/november/","title":"November 2023","text":""},{"location":"journal/2023/november/#30","title":"Thursday, 30","text":""},{"location":"journal/2023/november/#30#objectivism","title":"Objectivism","text":"<p>Finished reading the Objectivism: The Philosophy of Ayn Rand.</p>"},{"location":"journal/2023/november/#24","title":"Friday, 24","text":""},{"location":"journal/2023/november/#24#maintenance","title":"Maintenance","text":"<p>Have been working on small maintenance tasks these couple of days.</p>"},{"location":"journal/2023/november/#22","title":"Wednesday, 22","text":""},{"location":"journal/2023/november/#22#maintenance","title":"Maintenance","text":"<p>Created a pull request to Meson for Visual Studio Code to look up relative paths to the language server in <code>PATH</code> first.</p>"},{"location":"journal/2023/november/#21","title":"Tuesday, 21","text":""},{"location":"journal/2023/november/#21#maintenance","title":"Maintenance","text":"<p>Created a pull request to fix Swift in and a pull request to add Swift-MesonLSP to Nixpkgs.</p>"},{"location":"journal/2023/november/#19","title":"Sunday, 19","text":""},{"location":"journal/2023/november/#19#maintenance","title":"Maintenance","text":"<p>Created a pull request to Nixpkgs to create a link to <code>/bin/ldconfig</code> in <code>/sbin</code> when using <code>buildFHSEnvBubblewrap</code>.</p>"},{"location":"journal/2023/november/#18","title":"Saturday, 18","text":""},{"location":"journal/2023/november/#18#maintenance","title":"Maintenance","text":"<p>Worked on polishing the pull request to update Wireshark in Nixpkgs.</p>"},{"location":"journal/2023/november/#16","title":"Thursday, 16","text":""},{"location":"journal/2023/november/#16#maintenance","title":"Maintenance","text":"<p>Created a pull request to update Wireshark in Nixpkgs.</p>"},{"location":"journal/2023/november/#14","title":"Tuesday, 14","text":""},{"location":"journal/2023/november/#14#maintenance","title":"Maintenance","text":"<p>Created a pull request to Nixpkgs to fix symlinks being ignored by Wine in Bottles when using <code>buildFHSEnvBubblewrap</code>.</p>"},{"location":"journal/2023/november/#11","title":"Saturday, 11","text":""},{"location":"journal/2023/november/#11#objectivism","title":"Objectivism","text":"<p>Returned to reading the Objectivism: The Philosophy of Ayn Rand.</p>"},{"location":"journal/2023/november/#9","title":"Thursday, 9","text":""},{"location":"journal/2023/november/#9#site","title":"Site","text":"<p>Set up a workflow for Codeberg (yes, again). Turns out they silently switched from Woodpecker to their own CI system, which is almost identical to GitHub Actions. They don\u2019t provide hosted runners, though, and expect users to host their own. Here\u2019s the user guide. I was surprised to learn that they mention NixOS in their documentation, and there is already a NixOS module in Nixpkgs, so I just used it.</p>"},{"location":"journal/2023/november/#9#vscode","title":"VSCode","text":"<p>Current gripes:</p> <ul> <li>No way to close the tab to the left instead of to the right;</li> <li>Seems like I need a plugin for every tool I use (in Neovim I used <code>nvim-lspconfig</code> and <code>null-ls</code> plugins). I found Trunk, but it\u2019s proprietary and expects an FHS compliant filesystem (which I\u2019d rather avoid on NixOS).</li> </ul> <p>Current positives:</p> <ul> <li>VSCode handles <code>all-packages.nix</code> like a champ. It\u2019s a file with 42K lines of code in Nixpkgs which contains all top-level derivations.</li> </ul>"},{"location":"journal/2023/november/#8","title":"Wednesday, 8","text":""},{"location":"journal/2023/november/#8#vscode","title":"VSCode","text":"<p>Almost done with setting up VSCode.</p>"},{"location":"journal/2023/november/#7","title":"Tuesday, 7","text":""},{"location":"journal/2023/november/#7#vscode","title":"VSCode","text":"<p>Started switching from Neovim to Visual Studio Code with the VSCodeVim extension.</p>"},{"location":"journal/2023/november/#6","title":"Monday, 6","text":""},{"location":"journal/2023/november/#6#kirk","title":"Kirk","text":"<p>Finished implementing support for notifying the user about expired Qobuz subscription. Started figuring out how to set up <code>Gtk.ListView</code> for storing and displaying the results of a release search.</p>"},{"location":"journal/2023/november/#3","title":"Friday, 3","text":""},{"location":"journal/2023/november/#3#kirk","title":"Kirk","text":"<p>Added a feature that allows one to stop fetching the application ID. Started working on implementing support for notifying about expired Qobuz subscription.</p>"},{"location":"journal/2023/november/#2","title":"Thursday, 2","text":""},{"location":"journal/2023/november/#2#kirk","title":"Kirk","text":"<p>Converted the code back to C (from C++). My compilation is fast and error messages are nice again! Split the authorization into two buttons (\u201csend\u201d and \u201ccancel\u201d) and put them into a <code>GtkStack</code>. I used to switch labels and callbacks on runtime, but with <code>GtkStack</code> I can just switch to another page (and make sure the focus is grabbed when needed).</p>"},{"location":"journal/2023/november/#1","title":"Wednesday, 1","text":""},{"location":"journal/2023/november/#1#kirk","title":"Kirk","text":"<p>Pushed the commit with the feature to fetch the application ID from Qobuz. Switched to GLib\u2019s <code>GRegex</code>, created a generic asynchronous wrapper for it. Solved the problem with asynchronous functions running in the background after the preferences window is closed.</p>"},{"location":"journal/2023/november/#1#maintenance","title":"Maintenance","text":"<p>Created a pull request to update Anki and a pull request to update <code>obs-teleport</code> in Nixpkgs.</p>"},{"location":"journal/2023/october/","title":"October 2023","text":""},{"location":"journal/2023/october/#31","title":"Tuesday, 31","text":""},{"location":"journal/2023/october/#31#kirk","title":"Kirk","text":"<p>Spent quite a lot of time figuring out how to connect to signals from the Secret Service API via D-Bus to set up my callback when the password changes in the secret store (spoiler: you apparently can\u2019t monitor that, only public parameters), just to find a simpler, one line solution afterward.</p> <p>Also, started wrapping my blocking regex searching functions in asynchronous wrappers, as described here, so that I can use the <code>g_task_run_in_thread</code> function and make them run in a worker thread. Simply using <code>std::thread</code> from the C++ standard library turned out to be not enough to avoid blocks.</p> <p>I get somewhat annoyed by C++\u2019s need to run destructors all the time. For example, I can\u2019t really steal the pointer from an <code>std::string</code> to bypass the destructor. This causes workarounds in asynchronous code, such as copying the string to <code>GTask</code>\u2018s data. I might as well just use GLib\u2026 and switch back to C?\u2026</p>"},{"location":"journal/2023/october/#30","title":"Monday, 30","text":""},{"location":"journal/2023/october/#30#kirk","title":"Kirk","text":"<p>Implemented the retrieval of the application ID from Qobuz. Used the support for regular expressions and multi-threading in the standard C++ library. Currently, in the process of implementing UI nuances (like updating the password entry on changes in the secret store), so that the process of fetching the ID is more intuitive.</p>"},{"location":"journal/2023/october/#27","title":"Friday, 27","text":""},{"location":"journal/2023/october/#27#kirk","title":"Kirk","text":"<p>I started rewriting the code using <code>gtkmm</code>, but eventually encountered that there is no pretty way to derive from the <code>libadwaita</code>\u2018s widgets. There are hardly any examples of someone doing it (GNOME System Monitor is one, but they just use the GTK Builder to avoid defining new classes). Also, I found out that you can\u2019t use templates in XML descriptions of user interfaces, only concrete objects. Furthermore, the API seems slightly different from the upstream (and their reference doesn\u2019t have a search!). I decided to stick with C-like C++ for the time being.</p> <p>Started writing support for fetching application ID from Qobuz.</p>"},{"location":"journal/2023/october/#26","title":"Thursday, 26","text":""},{"location":"journal/2023/october/#26#kirk","title":"Kirk","text":"<p>Converted the code from C to the C-like C++. Turned out to be a pretty straight forward thing to do. Started rewriting into more C++-esque style using <code>gtkmm</code>. Hopefully type-safe callbacks are worth it!</p>"},{"location":"journal/2023/october/#25","title":"Wednesday, 25","text":""},{"location":"journal/2023/october/#25#kirk","title":"Kirk","text":"<p>Started converting the code from C to C++.</p>"},{"location":"journal/2023/october/#25#maintenance","title":"Maintenance","text":"<p>Worked on polishing the pull request to update qBittorrent in Nixpkgs.</p>"},{"location":"journal/2023/october/#24","title":"Tuesday, 24","text":""},{"location":"journal/2023/october/#24#c++","title":"C++","text":"<p>Finished reading A Tour of C++. It changed my opinion of C++ (I think it\u2019s pretty good).</p>"},{"location":"journal/2023/october/#24#maintenance","title":"Maintenance","text":"<p>Created a pull request to update qBittorrent in Nixpkgs.</p>"},{"location":"journal/2023/october/#23","title":"Monday, 23","text":""},{"location":"journal/2023/october/#23#c++","title":"C++","text":"<p>Read more of A Tour of C++.</p>"},{"location":"journal/2023/october/#20","title":"Friday, 20","text":""},{"location":"journal/2023/october/#20#c++","title":"C++","text":"<p>Read more of A Tour of C++.</p>"},{"location":"journal/2023/october/#19","title":"Thursday, 19","text":""},{"location":"journal/2023/october/#19#c++","title":"C++","text":"<p>Read more of A Tour of C++.</p>"},{"location":"journal/2023/october/#19#maintenance","title":"Maintenance","text":"<p>Spent a lot of time figuring out what went wrong with using <code>mold</code> on Darwin (checks failed here). Turns out support for macOS exists as a separate commercial project by the same authors, called <code>sold</code> (that\u2019s pretty funny). Learned about <code>otool</code> and <code>objdump</code> as alternatives to <code>patchelf</code> and <code>readelf</code>.</p>"},{"location":"journal/2023/october/#18","title":"Wednesday, 18","text":""},{"location":"journal/2023/october/#18#c++","title":"C++","text":"<p>Read more of A Tour of C++. Turns out the support for generic programming in C++ is very powerful!</p>"},{"location":"journal/2023/october/#18#maintenance","title":"Maintenance","text":"<p>Created a pull request to update <code>mold</code> in Nixpkgs. Also, I\u2019ve set <code>allowedRequisites</code> to <code>null</code> for <code>useMoldLinker</code> to avoid issues downstream (see #261825).</p>"},{"location":"journal/2023/october/#17","title":"Tuesday, 17","text":""},{"location":"journal/2023/october/#17#c++","title":"C++","text":"<p>Read more of A Tour of C++.</p>"},{"location":"journal/2023/october/#17#maintenance","title":"Maintenance","text":"<p>Created a pull request to update Tracy in Nixpkgs.</p>"},{"location":"journal/2023/october/#17#mpv","title":"<code>mpv</code>","text":"<p>Turns out you can create per-directory configuration files (<code>mpv.conf</code>) and make them loaded automatically if you enable the <code>use-filedir-conf</code> option. So, for example, you can select an audio stream, a subtitles stream, a size and a position of the subtitles, for all files in a directory. Really useful when watching series!</p>"},{"location":"journal/2023/october/#16","title":"Monday, 16","text":""},{"location":"journal/2023/october/#16#c++","title":"C++","text":"<p>Read more of A Tour of C++. Already diving in complexities like the rule of three/five/zero. Added locally a <code>pkg-config</code> file to the Nixpkgs package for Microsoft\u2019s Guidelines Support Library to make it work with Meson.</p>"},{"location":"journal/2023/october/#13","title":"Friday, 13","text":""},{"location":"journal/2023/october/#13#c++","title":"C++","text":"<p>Started reading A Tour of C++.</p>"},{"location":"journal/2023/october/#12","title":"Thursday, 12","text":""},{"location":"journal/2023/october/#12#kirk","title":"Kirk","text":"<p>Finished reading the GDB manual.</p>"},{"location":"journal/2023/october/#11","title":"Wednesday, 11","text":""},{"location":"journal/2023/october/#11#kirk","title":"Kirk","text":"<p>Finished setting up additional linters (<code>clang-tidy</code>, <code>scan-build</code>, and PVS-Studio). Surprisingly, there was only one new warning that I found useful: I didn\u2019t initialize a variable in one place, and <code>clang-tidy</code> notified me about that.</p> <p>Read a part of the GDB manual.</p>"},{"location":"journal/2023/october/#9","title":"Monday, 9","text":""},{"location":"journal/2023/october/#9#algorithms-and-data-structures","title":"Algorithms &amp; Data Structures","text":"<p>Started reading Cracking the Coding Interview.</p>"},{"location":"journal/2023/october/#9#japanese","title":"Japanese","text":"<p>Dropped learning the language since I don\u2019t see the pragmatic reasoning of its usage anymore.</p>"},{"location":"journal/2023/october/#5","title":"Friday, 6","text":""},{"location":"journal/2023/october/#6#counter-strike-source","title":"Counter-Strike: Source","text":"<p>Wrote the blog post after finally figuring out how to fix the issues with the fonts.</p>"},{"location":"journal/2023/october/#5","title":"Thursday, 5","text":""},{"location":"journal/2023/october/#5#counter-strike-source","title":"Counter-Strike: Source","text":"<p>Worked on fixing some of the issues with the game (almost finished with a blog post on fixing issues with fonts on Linux). Found my old <code>custom</code> folder and configs on an old laptop!</p>"},{"location":"journal/2023/october/#4","title":"Wednesday, 4","text":""},{"location":"journal/2023/october/#4#kirk","title":"Kirk","text":"<p>Set up PVS-Studio, started going through the warnings.</p>"},{"location":"journal/2023/october/#3","title":"Tuesday, 3","text":""},{"location":"journal/2023/october/#3#japanese","title":"Japanese","text":"<p>Switched from the Tae Kim\u2019s Guide to Learning Japanese to IMABI for proper explanations.</p>"},{"location":"journal/2023/october/#3#kirk","title":"Kirk","text":"<p>Started learning how to use PVS-Studio. Since I got a trial key yesterday and packaged the CLI tools to Nixpkgs today, I will look into it first before returning to <code>rr</code> and GDB.</p> <p>Excited to find out what their implementation of MISRA C will find in my code!</p>"},{"location":"journal/2023/october/#3#maintenance","title":"Maintenance","text":"<p>Created a pull request to add PVS-Studio to Nixpkgs.</p>"},{"location":"journal/2023/october/#2","title":"Monday, 2","text":""},{"location":"journal/2023/october/#2#maintenance","title":"Maintenance","text":"<p>Created a pull request to add VTFEdit to Nixpkgs. That\u2019s a rather old Windows application (circa 2005\u20132011), but it\u2019s rather important for people who\u2019d like to have high quality sprays in Source games. So, I used Wine and <code>winetricks</code> to make it work!</p>"},{"location":"journal/2023/september/","title":"September 2023","text":""},{"location":"journal/2023/september/#29","title":"Friday, 29","text":""},{"location":"journal/2023/september/#29#japanese","title":"Japanese","text":"<p>I do like how particles in Japanese sentences not only separate words, but also explicitly state their purpose. Verb conjugation seems to be the hardest part of the grammar so far.</p>"},{"location":"journal/2023/september/#29#maintenance","title":"Maintenance","text":"<p>Updated some of my pull requests to Nixpkgs.</p>"},{"location":"journal/2023/september/#28","title":"Thursday, 28","text":""},{"location":"journal/2023/september/#28#japanese","title":"Japanese","text":"<p>Replicated Tatsumoto\u2019s workflow in my setup.</p>"},{"location":"journal/2023/september/#28#maintenance","title":"Maintenance","text":"<p>Implemented the reviewers\u2019 requests on my pull requests for adding Python packages to Nixpkgs.</p>"},{"location":"journal/2023/september/#27","title":"Wednesday, 27","text":""},{"location":"journal/2023/september/#27#japanese","title":"Japanese","text":"<p>Started doing the routine, finally! This includes doing Anki reps (JP1K deck, later will add from my own sentence mining), then grammar study, then immersion (free-flow with English subtitles, then intensive immersion).</p> <p>Watching Is the Order a Rabbit? for the first time, and it\u2019s pretty fun!</p>"},{"location":"journal/2023/september/#26","title":"Tuesday, 26","text":""},{"location":"journal/2023/september/#26#japanese","title":"Japanese","text":"<p>Ironically, after packaging <code>vocabsieve</code>, found out a better workflow for sentence mining: <code>mpv</code> + <code>mpvacious</code> + Rikaitan + AJT Japanese. Here\u2018s a pretty cool demo.</p>"},{"location":"journal/2023/september/#26#maintenance","title":"Maintenance","text":"<p>Created a pull request to add <code>vocabsieve</code> to Nixpkgs. And also 8 additional pull requests for adding Python modules that are the dependencies of <code>vocabsieve</code>.</p> <p>Created a pull request to enable <code>mecab</code>\u2018s support for the UTF-8 charset. This tool is necessary to create Furigana automatically in Anki via the AJT Japanese add-on.</p>"},{"location":"journal/2023/september/#25","title":"Monday, 25","text":""},{"location":"journal/2023/september/#25#japanese","title":"Japanese","text":"<p>Learned more about the Refold method. Started packaging <code>vocabsieve</code> for Nixpkgs. This tool would allow me to very easily mine 1T sentences from pretty much anything.</p>"},{"location":"journal/2023/september/#25#maintenance","title":"Maintenance","text":"<p>Fixed a couple of issues with my pull request that updates <code>mold</code> in Nixpkgs. Had to fire up my MacOS VM to debug an issue with the <code>std::alloc_aligned</code> function missing. Turns out it comes from the <code>cstdlib</code> header in later versions of the Apple\u2019s Clang.</p>"},{"location":"journal/2023/september/#22","title":"Friday, 22","text":""},{"location":"journal/2023/september/#22#japanese","title":"Japanese","text":"<p>Learned more about the Refold method.</p>"},{"location":"journal/2023/september/#21","title":"Thursday, 21","text":""},{"location":"journal/2023/september/#21#kirk","title":"Kirk","text":"<p>Found out that I can use <code>nixseparatedebuginfod</code> to make GDB automatically pick up debug info (which includes information about where to find source code). This allows me to step into functions from shared libraries, which is very useful for debugging (and general exploration of the code). There is a small caveat, though: it only works for Nix packages that have a separate <code>debug</code> output, which can be enabled via the <code>separateDebugInfo</code> variable in the derivation. It already is set to <code>true</code> in many packages in Nixpkgs that I care about, and I\u2019ve created several pull requests to enable it in others.</p>"},{"location":"journal/2023/september/#20","title":"Wednesday, 20","text":""},{"location":"journal/2023/september/#20#japanese","title":"Japanese","text":"<p>Learned more about the Refold method. Probably will ditch GENKI completely in favor of The Refold Japanese Grammar Primer and Tae Kim\u2019s Grammar Guide. Or, perhaps, use GENKI only for the grammar explanations.</p> <p>Planning to use <code>substudy</code> for sentence mining. Here\u2018s a good example of a person using <code>subs2srs</code> to understand their favorite TV show in 30 days.</p>"},{"location":"journal/2023/september/#20#maintenance","title":"Maintenance","text":"<p>Created a pull request to add <code>substudy</code> to Nixpkgs.</p>"},{"location":"journal/2023/september/#19","title":"Tuesday, 19","text":""},{"location":"journal/2023/september/#19#kirk","title":"Kirk","text":"<p>Switched to using the <code>Authorization: Bearer &lt;token&gt;</code> HTTP header instead of passing the Qobuz token in the query part of the URL. Also, found out by experimentation (with some help from ChatALL) that Qobuz accepts the app ID as the <code>X-App-ID: &lt;app_id&gt;</code> header. Thus, I no longer need to have the query part in the call to the <code>/user/login</code> endpoint, which is pretty sweet. Switched to HTTP/2 over TLS by a simple change of the scheme from <code>http://</code> to <code>https://</code>, Soup did the rest! Also, GnuTLS (which is Soup\u2019s default TLS backend) supports the <code>SSLKEYLOGFILE</code> environment variable, and I used the resulting keylog file to decrypt the TLS traffic captured by Wireshark, as described here.</p> <p>Started learning GDB and <code>rr</code> for proper debugging skills (always used poor man\u2019s printing of variables).</p>"},{"location":"journal/2023/september/#19#maintenance","title":"Maintenance","text":"<p>Created a pull request to update GR Framework in Nixpkgs. Got an issue on update and had to dive into CMake again. Found out that (in the case of packages in Nixpkgs) one should use the module mode when searching for packages.</p>"},{"location":"journal/2023/september/#18","title":"Monday, 18","text":""},{"location":"journal/2023/september/#18#japanese","title":"Japanese","text":"<p>Read through a lot of Refold resources. Gotta find some material for immersion now!</p>"},{"location":"journal/2023/september/#18#nixos","title":"NixOS","text":"<p>Went through all pages on NixOS Wiki. Found out that there is an experimental feature for content-addressed derivations, and that NixOS has an option to enable BTRFs scrubbing.</p>"},{"location":"journal/2023/september/#15","title":"Friday, 15","text":""},{"location":"journal/2023/september/#15#maintenance","title":"Maintenance","text":"<p>Filled an issue to Mesa about experiencing full desktop graphical glitches when interacting with certain applications, just to found out a half an hour later that I was missing the <code>amdgpu</code> device driver, and instead was using <code>fbdev</code>. Set it up as explained in the NixOS Wiki.</p> <p>Learned (in a very basic way) how to use <code>apitrace</code> to create traces of graphics API calls. Built a 32-bit version of it (turns out Nixpkgs have <code>pkgs.multiStdenv</code> and <code>pkgs.pkgsi686Linux</code> for such a case) to run with Steam. However, that didn\u2019t give me proper results, as described here, but the 64-bit version from Nixpkgs did (somewhat).</p> <p>UPD: never mind, the issue occurred again on a high load.</p>"},{"location":"journal/2023/september/#14","title":"Thursday, 14","text":""},{"location":"journal/2023/september/#14#kirk","title":"Kirk","text":"<p>Updated the dependencies and disabled Nixpkgs hardening for debug builds. Switched to Soup for handling HTTP conversations (and so that I can easily switch to HTTP/2 over TLS in the future). Found out that I can pass the Qobuz token as the <code>Authorization: Bearer &lt;token&gt;</code> header instead of appending it to the query. Also, apparently, the <code>user_id</code> isn\u2019t required.</p>"},{"location":"journal/2023/september/#14#maintenance","title":"Maintenance","text":"<p>Opened a merge request to fix the memory leak on a graceful TCP disconnect in GLib.</p>"},{"location":"journal/2023/september/#13","title":"Wednesday, 13","text":""},{"location":"journal/2023/september/#13#japanese","title":"Japanese","text":"<p>I think my Anki setup is ready for new vocabulary now. Discovered that the Refold community has a lot of resources for Japanese. Refreshed my knowledge of Kana.</p>"},{"location":"journal/2023/september/#wi-fi","title":"Wi-Fi","text":"<p>Here are two things I did to prevent my network speed from getting slower on idle on a wireless connection via NetworkManager:</p> <ol> <li> <p>Disable power saving globally:</p> <pre><code># /etc/NetworkManager/conf.d\n[connection]\n# Values are:\n# 0 (use the default value)\n# 1 (don't touch the existing setting)\n# 2 (disable powersave)\n# 3 (enable powersave)\nwifi.powersave = 2\n</code></pre> <p>Can be accomplished on NixOS with</p> <pre><code>networking.networkmanager.wifi.powersave = false;\n</code></pre> </li> <li> <p>Disable power saving on the currently active network interface directly:</p> <pre><code>nmcli connection modify \"$SSID\" 802-11-wireless.powersave 2\n</code></pre> <p>Check with</p> <pre><code>nmcli -f 802-11-wireless.powersave connection show \"$SSID\"\n</code></pre> <p>Reconnect to the network afterward.</p> </li> </ol> <p>Still unsure if it\u2019s enough, though.</p>"},{"location":"journal/2023/september/#12","title":"Tuesday, 12","text":""},{"location":"journal/2023/september/#12#maintenance","title":"Maintenance","text":"<p>Created a pull request to update Picard and a pull request to add ChatALL in Nixpkgs. Learned how to package Electron apps.</p>"},{"location":"journal/2023/september/#11","title":"Monday, 11","text":""},{"location":"journal/2023/september/#11#learning","title":"Learning","text":"<p>Read the Effective learning: Twenty rules of formulating knowledge article, learned about the Incremental reading method as a side effect. Read the Low-key Anki series of articles and modified my Anki setup as suggested.</p>"},{"location":"journal/2023/september/#11#maintenance","title":"Maintenance","text":"<p>Created a pull request for adding Fopnu to Nixpkgs.</p>"},{"location":"journal/2023/september/#5","title":"Tuesday, 5","text":""},{"location":"journal/2023/september/#5#japanese","title":"Japanese","text":"<p>Read more of the Anki manual.</p>"},{"location":"journal/2023/september/#5#samba","title":"Samba","text":"<p>Set up Samba on my NixOS machine, so that I can copy files to and from my iOS device (via the standard Files app). Turns out it can be done with just 3 lines of <code>smb.conf</code>:</p> <pre><code>[public]\npath = %H/Public/Samba\nvfs objects = fruit streams_xattr\nwriteable = yes\n</code></pre> <p>Don\u2019t forget to create the password for the user with <code>smbpasswd -a $USER</code>, though!</p>"},{"location":"journal/2023/september/#3","title":"Sunday, 3","text":""},{"location":"journal/2023/september/#3#japanese","title":"Japanese","text":"<p>Got into figuring out the nitty-gritty of how Anki\u2018s algorithm works. Worked on my GENKI I deck.</p>"},{"location":"journal/2023/september/#2","title":"Saturday, 2","text":""},{"location":"journal/2023/september/#2#c","title":"C","text":"<p>Watched some of the VoxelRifts\u2018 videos. Finally, some C positivity and DIY mentality!</p>"},{"location":"journal/2023/september/#2#maintenance","title":"Maintenance","text":"<p>Created a pull request to update Anki in Nixpkgs. The latest version has a fix for crashes caused by copying the contents of fields in the Browser. That said, they have the most horrendous build process I\u2019ve ever seen.</p>"},{"location":"journal/2023/september/#1","title":"Friday, 1","text":""},{"location":"journal/2023/september/#1#japanese","title":"Japanese","text":"<p>Was learning how to use Anki today. Already got into thinking about whether to use subdecks, tags, or fields for organization. I got a deck for GENKI I, but will have to remake it.</p>"},{"location":"pensieve/","title":"Pensieve","text":"<p>This digital garden is my collection of notes on different topics.</p> <p>Recommended materials are marked with \u2b50.</p> <p>Majorly inspired by Nikita Voloboev\u2019s Knowledge Wiki.</p>"},{"location":"pensieve/algorithms/","title":"Algorithms","text":"<p>In mathematics and computer science, an algorithm is a finite sequence of rigorous instructions, typically used to solve a class of specific problems or to perform a computation. Algorithms are used as specifications for performing calculations and data processing. More advanced algorithms can perform automated deductions (referred to as automated reasoning) and use mathematical and logical tests to divert the code execution through various routes (referred to as automated decision-making). Using human characteristics as descriptors of machines in metaphorical ways was already practiced by Alan Turing with terms such as \u201cmemory\u201d, \u201csearch\u201d and \u201cstimulus\u201d.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/algorithms/#community","title":"Community","text":""},{"location":"pensieve/algorithms/#books","title":"Books","text":"<ul> <li>Grokking Algorithms</li> <li>Hello, Algorithm</li> <li>Introduction to Algorithms</li> </ul>"},{"location":"pensieve/algorithms/#sites","title":"Sites","text":"<ul> <li>AlgoExpert</li> <li>Algorithms for Competitive Programming</li> <li>CSES Problem Set \u2b50</li> <li>Codeforces</li> <li>LeetCode \u2b50<ul> <li>LeetSolve</li> <li>NeetCode \u2b50</li> </ul> </li> <li>\u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0438\u043a\u0430</li> </ul>"},{"location":"pensieve/algorithms/#resources","title":"Resources","text":""},{"location":"pensieve/algorithms/#text","title":"Text","text":"<ul> <li>Therapy for Leetcode Warriors</li> <li>[2023] Fantastic Learning Resources \u2b50</li> <li>[2023] Role Of Algorithms \u2b50</li> <li>[2023] \u041a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0440\u0435\u0448\u0430\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0438 \u043d\u0430 LeetCode: \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u0433\u0430\u0439\u0434 \u043f\u043e \u0442\u0440\u0435\u043d\u0430\u0436\u0451\u0440\u0443 \u0434\u043b\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432</li> <li>[2022] Challenging algorithms and data structures every programmer should try</li> <li>[2019] Blind 75 LeetCode Questions</li> </ul>"},{"location":"pensieve/algorithms/#video","title":"Video","text":"<ul> <li>CodeMeetsWorld</li> <li>NeetCodeIO</li> <li>[2023] The Last Algorithms Course You\u2019ll Need</li> </ul>"},{"location":"pensieve/anki/","title":"Anki","text":"<p>Anki is a free and open-source flashcard program using spaced repetition, a technique from cognitive science for memorization. The name comes from the Japanese word for \u201cmemorization\u201d (\u6697\u8a18).</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/anki/#resources","title":"Resources","text":""},{"location":"pensieve/anki/#text","title":"Text","text":"<ul> <li>Low-key Anki \u2b50</li> <li>Refold: Basic Anki Setup</li> <li>[2017] Target An 80-90 Percent Success Rate In Anki</li> </ul>"},{"location":"pensieve/anki/#video","title":"Video","text":"<ul> <li>[2022] The BEST Anki Settings and Algorithm Explained (by an expert!) \u2b50</li> <li>[2021] Anki Algorithm Explained! (This Will Actually Makes Sense) \u2b50</li> <li>[2018] Anki Tutorial | Deck Options and Anki\u2019s Algorithm</li> </ul>"},{"location":"pensieve/application-software/","title":"Application software","text":"<p>An application program (software application, or application, or app for short) is a computer program designed to carry out a specific task other than one relating to the operation of the computer itself, typically to be used by end-users. Word processors, media players, and accounting software are examples. The collective noun \u201capplication software\u201d refers to all applications collectively. The other principal classifications of software are system software, relating to the operation of the computer, and utility software (\u201cutilities\u201d).</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/aristotelianism/","title":"Aristotelianism","text":"<p>Aristotelianism is a philosophical tradition inspired by the work of Aristotle, usually characterized by deductive logic and an analytic inductive method in the study of natural philosophy and metaphysics. It covers the treatment of the social sciences under a system of natural law. It answers why-questions by a scheme of four causes, including purpose or teleology, and emphasizes virtue ethics. Aristotle and his school wrote tractates on physics, biology, metaphysics, logic, ethics, aesthetics, poetry, theatre, music, rhetoric, psychology, linguistics, economics, politics, and government. Any school of thought that takes one of Aristotle\u2019s distinctive positions as its starting point can be considered \u201cAristotelian\u201d in the widest sense. This means that different Aristotelian theories (e.g. in ethics or in ontology) may not have much in common as far as their actual content is concerned besides their shared reference to Aristotle.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/aristotelianism/#books","title":"Books","text":"<ul> <li>Nicomachean Ethics \u2b50</li> </ul>"},{"location":"pensieve/aristotelianism/#resources","title":"Resources","text":""},{"location":"pensieve/aristotelianism/#video","title":"Video","text":"<ul> <li>Aristotle &amp; Virtue Theory: Crash Course Philosophy</li> </ul>"},{"location":"pensieve/artificial-intelligence-art/","title":"Artificial intelligence art","text":"<p>Artificial intelligence art is any artwork created through the use of artificial intelligence.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/artificial-intelligence-art/#examples","title":"Examples","text":""},{"location":"pensieve/artificial-intelligence-art/#image","title":"Image","text":"<ul> <li>DALL-E</li> <li>Different Dimension Me</li> <li>Midjourney<ul> <li>OpenJourney</li> </ul> </li> <li>Seaart</li> <li>Stable Diffusion \u2b50<ul> <li>Anything</li> <li>Counterfeit</li> <li>InvokeAI</li> <li>NovelAI: Image Generation</li> <li>OrangeMixs</li> <li>Stable Diffusion 2.0</li> <li>Waifu Diffusion</li> </ul> </li> </ul>"},{"location":"pensieve/artificial-intelligence-art/#video","title":"Video","text":"<ul> <li>Imagen Video</li> </ul>"},{"location":"pensieve/artificial-intelligence-art/#community","title":"Community","text":""},{"location":"pensieve/artificial-intelligence-art/#sites","title":"Sites","text":"<ul> <li>Deforum</li> </ul>"},{"location":"pensieve/artificial-intelligence-art/#resources","title":"Resources","text":""},{"location":"pensieve/artificial-intelligence-art/#text","title":"Text","text":"<ul> <li>[2023] How I used Midjourney to design a brand identity</li> <li>[2023] Stable Diffusion Samplers: A Comprehensive Guide</li> <li>[2022] High-performance image generation using Stable Diffusion in KerasCV</li> <li>[2022] NovelAI Improvements on Stable Diffusion</li> <li>[2022] Prompt engineering is hard</li> <li>[2022] Stable Diffusion 2.0 Release</li> <li>[2022] Stable Diffusion 2.0 and the Importance of Negative Prompts for Good Results</li> <li>[2022] The Illustrated Stable Diffusion</li> </ul>"},{"location":"pensieve/artificial-intelligence-art/#video_1","title":"Video","text":"<ul> <li>[2022] How AI Image Generators Work (Stable Diffusion / Dall-E)</li> <li>[2022] Stable Diffusion in Code (AI Image Generation)</li> </ul>"},{"location":"pensieve/artificial-intelligence/","title":"Artificial intelligence","text":"<p>Artificial intelligence (AI) is intelligence demonstrated by machines, as opposed to the natural intelligence displayed by animals including humans. AI research has been defined as the field of study of intelligent agents, which refers to any system that perceives its environment and takes actions that maximize its chance of achieving its goals.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/assembly/","title":"Assembly","text":"<p>In computer programming, assembly language (or assembler language, or symbolic machine code), often referred to simply as Assembly and commonly abbreviated as ASM or asm, is any low-level programming language with a very strong correspondence between the instructions in the language and the architecture\u2019s machine code instructions. Assembly language usually has one statement per machine instruction (1:1), but constants, comments, assembler directives, symbolic labels of, e.g., memory locations, registers, and macros are generally also supported.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/assembly/#instruction-references","title":"Instruction references","text":"<ul> <li>x86 and amd64 \u2b50</li> </ul>"},{"location":"pensieve/assembly/#books","title":"Books","text":"<ul> <li>A Gentle Introduction to Assembly Language Programming</li> </ul>"},{"location":"pensieve/assembly/#resources","title":"Resources","text":""},{"location":"pensieve/assembly/#video","title":"Video","text":"<ul> <li>[2018] Intro to x86 Assembly Language</li> </ul>"},{"location":"pensieve/asynchrony/","title":"Asynchrony","text":"<p>Asynchrony, in computer programming, refers to the occurrence of events independent of the main program flow and ways to deal with such events. These may be \u201coutside\u201d events such as the arrival of signals, or actions instigated by a program that take place concurrently with program execution, without the program blocking to wait for results. Asynchronous input/output is an example of the latter case of asynchrony, and lets programs issue commands to storage or network devices that service these requests while the processor continues executing the program. Doing so provides a degree of parallelism.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/asynchrony/#libraries","title":"Libraries","text":"<ul> <li>Asio</li> <li>GLib</li> <li><code>libevent</code></li> <li><code>libuv</code> \u2b50</li> </ul>"},{"location":"pensieve/asynchrony/#resources","title":"Resources","text":""},{"location":"pensieve/asynchrony/#video","title":"Video","text":"<ul> <li>Async engines in C++20, Rust, &amp; Zig</li> </ul>"},{"location":"pensieve/bittorrent/","title":"BitTorrent","text":"<p>BitTorrent is a communication protocol for peer-to-peer file sharing (P2P), which enables users to distribute data and electronic files over the Internet in a decentralized manner.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/bittorrent/#community","title":"Community","text":""},{"location":"pensieve/bittorrent/#clients","title":"Clients","text":"<ul> <li>qBittorrent \u2b50</li> </ul>"},{"location":"pensieve/bittorrent/#tools","title":"Tools","text":"<ul> <li>Multiplex</li> </ul>"},{"location":"pensieve/bittorrent/#resources","title":"Resources","text":"<ul> <li>[2021] Answered: Why you do need port-forwarding for Bittorrent \u2b50</li> </ul>"},{"location":"pensieve/bitwise-operation/","title":"Bitwise operation","text":"<p>In computer programming, a bitwise operation operates on a bit string, a bit array or a binary numeral (considered as a bit string) at the level of its individual bits. It is a fast and simple action, basic to the higher-level arithmetic operations and directly supported by the processor. Most bitwise operations are presented as two-operand instructions where the result replaces one of the input operands.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/bitwise-operation/#resources","title":"Resources","text":"<ul> <li>[2023] Demystifying bitwise operations, a gentle C tutorial \u2b50</li> </ul>"},{"location":"pensieve/blog/","title":"Blog","text":"<p>A blog (a truncation of \u201cweblog\u201d) is an informational website published on the World Wide Web consisting of discrete, often informal diary-style text entries (posts). Posts are typically displayed in reverse chronological order so that the most recent post appears first, at the top of the web page. Until 2009, blogs were usually the work of a single individual, occasionally of a small group, and often covered a single subject or topic. In the 2010s, \u201cmulti-author blogs\u201d (MABs) emerged, featuring the writing of multiple authors and sometimes professionally edited. MABs from newspapers, other media outlets, universities, think tanks, advocacy groups, and similar institutions account for an increasing quantity of blog traffic. The rise of Twitter and other \u201cmicroblogging\u201d systems helps integrate MABs and single-author blogs into the news media. Blog can also be used as a verb, meaning to maintain or add content to a blog.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/btrfs/","title":"Btrfs","text":"<p>Btrfs (pronounced as \u201cbetter F S\u201d, \u201cbutter F S\u201d, \u201cb-tree F S\u201d, or B.T.R.F.S.) is a computer storage format that combines a file system based on the copy-on-write (COW) principle with a logical volume manager (not to be confused with Linux\u2019s LVM), developed together. It was founded by Chris Mason in 2007 for use in Linux, and since November 2013, the file system\u2019s on-disk format has been declared stable in the Linux kernel.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/btrfs/#resources","title":"Resources","text":"<ul> <li>[2022] Working with Btrfs:<ol> <li>General Concepts</li> <li>Subvolumes</li> <li>Snapshots</li> <li>Compression</li> </ol> </li> <li>[2014] Fixing Btrfs Filesystem Full Problems \u2b50</li> </ul>"},{"location":"pensieve/build-automation/","title":"Build automation","text":"<p>Build automation is the process of automating the creation of a software build and the associated processes including: compiling computer source code into binary code, packaging binary code, and running automated tests.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/build-automation/#tools","title":"Tools","text":"<ul> <li>Bazel</li> <li>CMake</li> <li>Make</li> <li>Meson \u2b50<ul> <li><code>muon</code></li> </ul> </li> </ul>"},{"location":"pensieve/c/","title":"C","text":"<p>C (pronounced like the letter c) is a general-purpose computer programming language. It was created in the 1970s by Dennis Ritchie, and remains very widely used and influential. By design, C\u2019s features cleanly reflect the capabilities of the targeted CPUs. It has found lasting use in operating systems, device drivers, protocol stacks, though decreasingly for application software. C is commonly used on computer architectures that range from the largest supercomputers to the smallest microcontrollers and embedded systems.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/c/#community","title":"Community","text":""},{"location":"pensieve/c/#books","title":"Books","text":"<ul> <li>Beej\u2019s Guide to C Programming</li> <li>[2012] 21st Century C: C Tips from the New School</li> <li>[2011] Object-Oriented Programming With ANSI-C</li> <li>[1996] C Programming: A Modern Approach</li> <li>[1995] C Programming FAQs: Frequently Asked Questions<ul> <li>Web version</li> </ul> </li> <li>[1994] Expert C Programming: Deep C Secrets</li> <li>[1992] Practical C Programming</li> <li>[1978] The C Programming Language \u2b50<ul> <li>K&amp;R2 solutions</li> <li>[1989] The C Answer Book \u2b50</li> </ul> </li> </ul>"},{"location":"pensieve/c/#coding-conventions","title":"Coding conventions","text":"<ul> <li>Malcolm Inglis\u2019s favorite C programming practices \u2b50</li> </ul>"},{"location":"pensieve/c/#compilers","title":"Compilers","text":"<ul> <li>Cake</li> <li>Clang</li> <li>GCC</li> </ul>"},{"location":"pensieve/c/#libraries","title":"Libraries","text":"<ul> <li>Cosmopolitan Libc \u2b50</li> </ul>"},{"location":"pensieve/c/#sites","title":"Sites","text":"<ul> <li><code>cdecl</code> \u2b50</li> </ul>"},{"location":"pensieve/c/#resources","title":"Resources","text":"<ul> <li>[2023] A gentle introduction to static analyzers for C</li> <li>[2023] A simple hash table in C \u2b50</li> <li>[2023] Compiler Options Hardening Guide for C and C++</li> <li>[2023] Driving Compilers \u2b50</li> <li>[2023] Few lesser known tricks, quirks and features of C \u2b50</li> <li>[2023] My favorite C compiler flags during development \u2b50</li> <li>[2023] My personal C coding style as of late 2023</li> <li>[2023] Programming in Modern C with a Sneak Peek into C23 \u2b50</li> <li>[2023] Scope-based resource management for the kernel \u2b50</li> <li>[2023] Simply Parse in C</li> <li>[2023] Why I Use C When I Believe in Memory Safety</li> <li>[2023] Writing Robust C - Best Practices for Finding and Preventing Vulnerabilities \u2b50</li> <li>[2022] Everything I wish I knew when learning C</li> <li>[2020] Best aspects of C language \u2b50</li> <li>[2019] Post modern C tooling \u2b50</li> <li>[2018] One year of C</li> <li>[2017] How to Write Portable C Without Complicating Your Build</li> <li>[2017] OpenMP and pwrite()</li> <li>[2015] Implementing smart pointers for the C programming language</li> <li>[2014] C Object Oriented Programming</li> <li>[2012] What\u2019s to love about C?</li> </ul>"},{"location":"pensieve/central-processing-unit/","title":"Central processing unit","text":"<p>A central processing unit (CPU) \u2014 also called a central processor or main processor \u2014 is the most important processor in a given computer. Its electronic circuitry executes instructions of a computer program, such as arithmetic, logic, controlling, and input/output (I/O) operations. This role contrasts with that of external components, such as main memory and I/O circuitry, and specialized coprocessors such as graphics processing units (GPUs).</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/central-processing-unit/#resources","title":"Resources","text":""},{"location":"pensieve/central-processing-unit/#text","title":"Text","text":"<ul> <li>Putting the \u201cYou\u201d in CPU</li> </ul>"},{"location":"pensieve/changelog/","title":"Changelog","text":"<p>A changelog is a log or record of all notable changes made to a project. The project is often a website or software project, and the changelog usually includes records of changes such as bug fixes, new features, etc. Some open-source projects include a changelog as one of the top-level files in their distribution.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/changelog/#resources","title":"Resources","text":"<ul> <li>[2021] Keep a Changelog \u2b50</li> </ul>"},{"location":"pensieve/chatbot/","title":"Chatbot","text":"<p>A chatbot or chatterbot is a software application used to conduct an on-line chat conversation via text or text-to-speech, in lieu of providing direct contact with a live human agent. Designed to convincingly simulate the way a human would behave as a conversational partner, chatbot systems typically require continuous tuning and testing, and many in production remain unable to adequately converse, while none of them can pass the standard Turing test. The term \u201cChatterBot\u201d was originally coined by Michael Mauldin (creator of the first Verbot) in 1994 to describe these conversational programs.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/chatbot/#examples","title":"Examples","text":"<ul> <li>ChatGPT \u2b50</li> <li>LLaMA<ul> <li>ChatLLaMA: ChatGPT style chatbot for Facebook\u2019s LLaMA</li> <li><code>llama.cpp</code>: Port of Facebook\u2019s LLaMA model in C/C++<ul> <li><code>alpaca.cpp</code>: Locally run an Instruction-Tuned Chat-Style LLM</li> </ul> </li> </ul> </li> <li>Perplexity</li> </ul>"},{"location":"pensieve/chatbot/#community","title":"Community","text":""},{"location":"pensieve/chatbot/#clients","title":"Clients","text":"<ul> <li>ChatALL</li> </ul>"},{"location":"pensieve/chatbot/#resources","title":"Resources","text":""},{"location":"pensieve/chatbot/#video","title":"Video","text":"<ul> <li>LLaMA \u2014 \u043a\u0430\u043a ChatGPT \u0442\u043e\u043b\u044c\u043a\u043e \u043b\u0443\u0447\u0448\u0435 \u2b50</li> </ul>"},{"location":"pensieve/chronophilia/","title":"Chronophilia","text":"<p>The term chronophilia was used by psychologist John Money to describe varying forms of sexual preference and/or sexual fixation limited to individuals of particular age ranges. Some such fixations, specifically those towards prepubescents and those towards the elderly, constitute types of paraphilia. The term has not been widely adopted by sexologists, who instead use terms that refer to the specific age range in question. An arguable historical precursor was Richard von Krafft-Ebing\u2019s concept of \u201cage fetishism\u201d. Importantly, chronophilia are technically not determined by age itself, but by human sexual maturity stages, such as body type, secondary sexual characteristics and other visible features, particularly as measured by the stages of the Tanner scale.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/coding-interview/","title":"Coding interview","text":"<p>A coding interview, technical interview, programming interview or Microsoft interview is a technical problem-based job interview technique to assess applicants for a computer programming or software development position. Modern coding interview techniques were pioneered by Microsoft during the 1990s and adopted by other large technology companies including Amazon, Facebook, and Google. Coding interviews test candidates\u2019 technical knowledge, coding ability, problem solving skills, and creativity, typically on a whiteboard. Candidates usually have a degree in computer science, information science, computer engineering or electrical engineering, and are asked to solve programming problems, algorithms, or puzzles. Coding interviews are typically conducted in-person or virtually.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/coding-interview/#books","title":"Books","text":"<ul> <li>Cracking the Coding Interview \u2b50</li> </ul>"},{"location":"pensieve/coding-interview/#resources","title":"Resources","text":""},{"location":"pensieve/coding-interview/#text","title":"Text","text":"<ul> <li>Hiring Without Whiteboards: Companies that don\u2019t have a broken hiring process \u2b50</li> <li>This Is What A GOOD Resume Should Look Like</li> <li>[2023] How does a hobby programmer get hired? \u2b50</li> <li>[2023] How to hire engineering talent without the BS</li> <li>[2023] What we look for in a resume \u2b50</li> <li>[2019] 14 Patterns to Ace Any Coding Interview Question</li> </ul>"},{"location":"pensieve/coding-interview/#video","title":"Video","text":"<ul> <li>[2022] How I got a job at Amazon as a software engineer \u2b50</li> </ul>"},{"location":"pensieve/collaborative-software/","title":"Collaborative software","text":"<p>Collaborative software or groupware is application software designed to help people working on a common task to attain their goals. One of the earliest definitions of groupware is \u201cintentional group processes plus software to support them\u201d.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/collaborative-software/#examples","title":"Examples","text":"<ul> <li>Slack</li> <li>Zulip \u2b50</li> </ul>"},{"location":"pensieve/command-prompt/","title":"Command prompt","text":"<p>A command prompt (or just prompt) is a sequence of (one or more) characters used in a command-line interface to indicate readiness to accept commands. It literally prompts the user to take action. A prompt usually ends with one of the characters <code>$</code>, <code>%</code>, <code>#</code>, <code>:</code>, <code>&gt;</code> or <code>-</code> and often includes other information, such as the path of the current working directory and the hostname.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/command-prompt/#examples","title":"Examples","text":"<ul> <li>Starship</li> </ul>"},{"location":"pensieve/communication-design/","title":"Communication design","text":"<p>Communication design is a mixed discipline between design and information-development which is concerned with how media communicate with people. A communication design approach is not only concerned with developing the message in addition to the aesthetics in media, but also with creating new media channels to ensure the message reaches the target audience. Some designers use graphic design and communication design interchangeably due to overlapping skills.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/communication-studies/","title":"Communication studies","text":"<p>Communication studies or communication science is an academic discipline that deals with processes of human communication and behavior, patterns of communication in interpersonal relationships, social interactions and communication in different cultures. Communication is commonly defined as giving, receiving or exchanging ideas, information, signals or messages through appropriate media, enabling individuals or groups to persuade, to seek information, to give information or to express emotions effectively. Communication studies is a social science that uses various methods of empirical investigation and critical analysis to develop a body of knowledge that encompasses a range of topics, from face-to-face conversation at a level of individual agency and interaction to social and cultural communication systems at a macro level.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/compatibility-layer/","title":"Compatibility layer","text":"<p>In software engineering, a compatibility layer is an interface that allows binaries for a legacy or foreign system to run on a host system. This translates system calls for the foreign system into native system calls for the host system. With some libraries for the foreign system, this will often be sufficient to run foreign binaries on the host system. A hardware compatibility layer consists of tools that allow hardware emulation.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/compatibility-layer/#examples","title":"Examples","text":"<ul> <li>Windows Subsystem for Linux</li> </ul>"},{"location":"pensieve/compile-time/","title":"Compile time","text":"<p>In computer science, compile time (or compile-time) describes the time window during which a computer program is compiled. The term is used as an adjective to describe concepts related to the context of program compilation, as opposed to concepts related to the context of program execution (runtime). For example, compile-time requirements are programming language requirements that must be met by source code before compilation and compile-time properties are properties of the program that can be reasoned about during compilation. The actual length of time it takes to compile a program is usually referred to as compilation time.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/compile-time/#resources","title":"Resources","text":"<ul> <li>[2022] Compile time evaluation in Nim, Zig, Rust and C++ \u2b50</li> <li>[2022] The downsides of compile time evaluation</li> </ul>"},{"location":"pensieve/compiler/","title":"Compiler","text":"<p>In computing, a compiler is a computer program that translates computer code written in one programming language (the source language) into another language (the target language). The name \u201ccompiler\u201d is primarily used for programs that translate source code from a high-level programming language to a lower level language (e.g. assembly language, object code, or machine code) to create an executable program.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/compiler/#sites","title":"Sites","text":"<ul> <li>Compiler Explorer \u2b50</li> </ul>"},{"location":"pensieve/compiler/#tools","title":"Tools","text":"<ul> <li>Ccache \u2b50</li> <li><code>distcc</code></li> </ul>"},{"location":"pensieve/computer-algebra-system/","title":"Computer algebra system","text":"<p>A computer algebra system (CAS) or symbolic algebra system (SAS) is any mathematical software with the ability to manipulate mathematical expressions in a way similar to the traditional manual computations of mathematicians and scientists. The development of the computer algebra systems in the second half of the 20th century is part of the discipline of \u201ccomputer algebra\u201d or \u201csymbolic computation\u201d, which has spurred work in algorithms over mathematical objects such as polynomials.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/computer-algebra-system/#examples","title":"Examples","text":"<ul> <li>Mathics</li> <li>Maxima \u2b50</li> <li>wxMaxima \u2b50</li> <li>Wolfram Mathematica</li> </ul>"},{"location":"pensieve/computer-font/","title":"Computer font","text":"<p>A computer font is implemented as a digital data file containing a set of graphically related glyphs. A computer font is designed and created using a font editor. A computer font specifically designed for the computer screen, and not for printing, is a screen font.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/computer-font/#examples","title":"Examples","text":"<ul> <li>Cascadia Code</li> <li>Comic Mono</li> <li>Fira Code</li> <li>Hack</li> <li>Inter</li> <li>Iosevka</li> <li>JetBrains Mono</li> <li>MonoLisa</li> <li>Victor Mono</li> </ul>"},{"location":"pensieve/computer-font/#community","title":"Community","text":"<ul> <li>Font Repo: Free Fonts in TTF format</li> <li>Nerd Fonts: Iconic font aggregator, collection, and patcher \u2b50</li> </ul>"},{"location":"pensieve/computer-font/#tools","title":"Tools","text":"<ul> <li><code>google-webfonts-helper</code>: A Hassle-Free Way to Self-Host Google Fonts</li> <li>Programming Fonts: Test drive programming fonts online</li> </ul>"},{"location":"pensieve/computer-font/#resources","title":"Resources","text":"<ul> <li>[2022] 18 Best Free Fonts for Modern UI Design in 2022 (+ Typography Best Practices) \u2b50</li> </ul>"},{"location":"pensieve/computer-graphics/","title":"Computer graphics","text":"<p>Computer graphics is a sub-field of computer science which studies methods for digitally synthesizing and manipulating visual content. Although the term often refers to the study of three-dimensional computer graphics, it also encompasses two-dimensional graphics and image processing. The individuals who serve as professional designers for computers graphics are known as \u201cGraphics Programmers\u201d, who often are computer programmers with skills in computer graphics design.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/computer-keyboard/","title":"Computer keyboard","text":"<p>A computer keyboard is a peripheral input device modeled after the typewriter keyboard which uses an arrangement of buttons or keys to act as mechanical levers or electronic switches. Replacing early punched cards and paper tape technology, interaction via teleprinter-style keyboards have been the main input method for computers since the 1970s, supplemented by the computer mouse since the 1980s.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/computer-keyboard/#resources","title":"Resources","text":""},{"location":"pensieve/computer-keyboard/#video","title":"Video","text":"<ul> <li>[2023] Keys To A Dream Software Development Setup \u2b50</li> </ul>"},{"location":"pensieve/computer-mediated-communication/","title":"Computer-mediated communication","text":"<p>Computer-mediated communication (CMC) is defined as any human communication that occurs through the use of two or more electronic devices. While the term has traditionally referred to those communications that occur via computer-mediated formats (e.g., instant messaging, email, chat rooms, online forums, social network services), it has also been applied to other forms of text-based interaction such as text messaging. Research on CMC focuses largely on the social effects of different computer-supported communication technologies. Many recent studies involve Internet-based social networking supported by social software.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/computer-music/","title":"Computer music","text":"<p>Computer music is the application of computing technology in music composition, to help human composers create new music or to have computers independently create music, such as with algorithmic composition programs. It includes the theory and application of new and existing computer software technologies and basic aspects of music, such as sound synthesis, digital signal processing, sound design, sonic diffusion, acoustics, electrical engineering and psychoacoustics. The field of computer music can trace its roots back to the origins of electronic music, and the first experiments and innovations with electronic instruments at the turn of the 20th century.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/computer-music/#resources","title":"Resources","text":""},{"location":"pensieve/computer-music/#text","title":"Text","text":"<ul> <li>Get started making music \u2b50</li> </ul>"},{"location":"pensieve/computer-music/#video","title":"Video","text":"<ul> <li>[2022] A Language for Making Languages for Making Synthesizers \u2b50</li> </ul>"},{"location":"pensieve/computer-networks/","title":"Computer networks","text":"<p>A computer network is a set of computers sharing resources located on or provided by network nodes. The computers use common communication protocols over digital interconnections to communicate with each other. These interconnections are made up of telecommunication network technologies, based on physically wired, optical, and wireless radio-frequency methods that may be arranged in a variety of network topologies.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/computer-programming/","title":"Computer programming","text":"<p>Computer programming is the process of performing a particular computation (or more generally, accomplishing a specific computing result), usually by designing and building an executable computer program. Programming involves tasks such as analysis, generating algorithms, profiling algorithms\u2019 accuracy and resource consumption, and the implementation of algorithms (usually in a chosen programming language, commonly referred to as coding). The source code of a program is written in one or more languages that are intelligible to programmers, rather than machine code, which is directly executed by the central processing unit. The purpose of programming is to find a sequence of instructions that will automate the performance of a task (which can be as complex as an operating system) on a computer, often for solving a given problem. Proficient programming thus usually requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/computer-programming/#books","title":"Books","text":"<ul> <li>[2015] Secure Programming HOWTO</li> <li>[2009] Coders at Work: Reflections on the Craft of Programming</li> <li>[1999] The Pragmatic Programmer: From Journeyman to Master<ul> <li>[2019] The Pragmatic Programmer, 20th Anniversary Edition</li> </ul> </li> <li>[1984] Structure and Interpretation of Computer Programs<ul> <li>HTML5/EPUB3 version of SICP</li> <li>Hexlet SICP \u2b50</li> <li>SICP PDF with Texinfo and LaTeX source \u2b50</li> <li>SICP in Texinfo Format</li> <li>SICP-Solutions</li> </ul> </li> </ul>"},{"location":"pensieve/computer-programming/#community","title":"Community","text":""},{"location":"pensieve/computer-programming/#blogs","title":"Blogs","text":"<ul> <li>Evan Ovadia\u2019s Blog \u2b50</li> </ul>"},{"location":"pensieve/computer-programming/#forums","title":"Forums","text":"<ul> <li><code>/r/learnprogramming/</code><ul> <li>FAQ \u2b50</li> </ul> </li> </ul>"},{"location":"pensieve/computer-programming/#courses","title":"Courses","text":"<ul> <li>Computer Science 61A, Spring 2011 \u2b50<ul> <li>Materials:<ul> <li>Berkeley\u2019s backup<ul> <li>Mirror</li> </ul> </li> <li>Brian Harvey\u2019s backup</li> <li>Roman Bird\u2019s compilation</li> </ul> </li> <li>Federico Galassi\u2019s solutions</li> </ul> </li> </ul>"},{"location":"pensieve/computer-programming/#wikis","title":"Wikis","text":"<ul> <li>Rosetta Code \u2b50</li> </ul>"},{"location":"pensieve/computer-programming/#resources","title":"Resources","text":""},{"location":"pensieve/computer-programming/#text","title":"Text","text":"<ul> <li>Just for Fun. No, Really</li> <li>Low-Level Programming University</li> <li>Programing Best Practices 2023</li> <li>[2023] Fantastic Learning Resources \u2b50</li> <li>[2023] When to comment that code \u2b50</li> <li>[2022] Does experience make you a better programmer?</li> <li>[2022] Programming as play</li> <li>[2022] The Secret Art of Storytelling in Programming</li> <li>[2022] Variables</li> <li>[2021] Reflections on 10,000 Hours of Programming \u2b50</li> <li>[2016] Programming book recommendations and anti-recommendations</li> </ul>"},{"location":"pensieve/computer-programming/#video","title":"Video","text":"<ul> <li>CodeAesthetic \u2b50</li> </ul>"},{"location":"pensieve/computer-science/","title":"Computer science","text":"<p>Computer science is the study of computation, automation, and information. Computer science spans theoretical disciplines (such as algorithms, theory of computation, information theory, and automation) to practical disciplines (including the design and implementation of hardware and software). Computer science is generally considered an area of academic research and distinct from computer programming.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/computer-science/#books","title":"Books","text":"<ul> <li>Elementary Computer Science: From Bits and Bytes to the Big Picture</li> </ul>"},{"location":"pensieve/computer-science/#courses","title":"Courses","text":"<ul> <li>CS Primer \u2b50</li> </ul>"},{"location":"pensieve/computer-science/#community","title":"Community","text":""},{"location":"pensieve/computer-science/#forums","title":"Forums","text":"<ul> <li><code>/r/CSCareerQuestions</code><ul> <li>Wiki</li> </ul> </li> </ul>"},{"location":"pensieve/computer-science/#resources","title":"Resources","text":"<ul> <li>A Self-Learning, Modern Computer Science Curriculum</li> <li>Coding Interview University</li> <li>Computer Science from the Bottom Up</li> <li>Computer Science Roadmap</li> <li>Open Source Society University (OSSU): Computer Science \u2b50</li> <li>Spam\u2019s CS Corner: Course Reviews</li> <li>[2021] Computer science careers: Why computer science is for everyone</li> <li>[2020] \u201cGetting B.S. in CS\u201c without Getting B.S. in CS</li> <li>[2020] Teach Yourself Computer Science \u2b50</li> <li>[2020] The Open-Source Computer Science Degree</li> <li>[2020] The case against CS master\u2019s degrees</li> <li>[2011] What every computer science major should know</li> </ul>"},{"location":"pensieve/computer-security/","title":"Computer security","text":"<p>Computer security, cybersecurity (cyber security), or information technology security (IT security) is the protection of computer systems and networks from attack by malicious actors that may result in unauthorized information disclosure, theft of, or damage to hardware, software, or data, as well as from the disruption or misdirection of the services they provide.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/computer-security/#books","title":"Books","text":"<ul> <li>Hacking: The Art of Exploitation, 2nd Edition \u2b50</li> </ul>"},{"location":"pensieve/computer-security/#resources","title":"Resources","text":"<ul> <li>ArchWiki: Security \u2b50</li> </ul>"},{"location":"pensieve/construction-language/","title":"Construction language","text":"<p>Construction languages include all forms of communication by which a human can specify an executable problem solution to a computer.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/cpp/","title":"C++","text":"<p>C++ (pronounced \u201cC plus plus\u201d) is a high-level general-purpose programming language created by Danish computer scientist Bjarne Stroustrup as an extension of the C programming language, or \u201cC with Classes\u201d. The language has expanded significantly over time, and modern C++ now has object-oriented, generic, and functional features in addition to facilities for low-level memory manipulation. It is almost always implemented as a compiled language, and many vendors provide C++ compilers, including the Free Software Foundation, LLVM, Microsoft, Intel, Embarcadero, Oracle, and IBM, so it is available on many platforms.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/cpp/#community","title":"Community","text":""},{"location":"pensieve/cpp/#books","title":"Books","text":"<ul> <li>A Tour of C++</li> <li>C++ Primer</li> <li>The C++ Programming Language</li> </ul>"},{"location":"pensieve/cpp/#compilers","title":"Compilers","text":"<ul> <li>Clang</li> <li>GCC</li> </ul>"},{"location":"pensieve/cpp/#documentation","title":"Documentation","text":"<ul> <li>cppreference.com \u2b50</li> </ul>"},{"location":"pensieve/cpp/#resources","title":"Resources","text":""},{"location":"pensieve/cpp/#text","title":"Text","text":"<ul> <li>C++ Core Guidelines \u2b50</li> <li>C++ Developer Roadmap \u2b50</li> <li>C++ Stories</li> <li>[2023] 60 terrible tips for a C++ developer \u2b50</li> <li>[2023] C++ Papercuts</li> <li>[2023] C++: The most important complexities</li> <li>[2023] Compiler Options Hardening Guide for C and C++</li> </ul>"},{"location":"pensieve/cryptocurrency/","title":"Cryptocurrency","text":"<p>A cryptocurrency, crypto-currency, or crypto is a digital currency designed to work as a medium of exchange through a computer network that is not reliant on any central authority, such as a government or bank, to uphold or maintain it.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/cryptocurrency/#examples","title":"Examples","text":"<ul> <li>Ethereum</li> <li>Monero</li> </ul>"},{"location":"pensieve/cryptocurrency/#community","title":"Community","text":""},{"location":"pensieve/cryptocurrency/#exchanges","title":"Exchanges","text":"<ul> <li>BestChange \u2b50</li> </ul>"},{"location":"pensieve/cryptocurrency/#news","title":"News","text":"<ul> <li>OurNetwork</li> </ul>"},{"location":"pensieve/cryptocurrency/#wallets","title":"Wallets","text":"<ul> <li>Unstoppable Wallet \u2b50</li> </ul>"},{"location":"pensieve/cryptography/","title":"Cryptography","text":"<p>Cryptography, or cryptology (from Ancient Greek: \u03ba\u03c1\u03c5\u03c0\u03c4\u03cc\u03c2, romanized: krypt\u00f3s \u201chidden, secret\u201d; and \u03b3\u03c1\u03ac\u03c6\u03b5\u03b9\u03bd graphein, \u201cto write\u201d, or -\u03bb\u03bf\u03b3\u03af\u03b1 -logia, \u201cstudy\u201d, respectively), is the practice and study of techniques for secure communication in the presence of adversarial behavior. More generally, cryptography is about constructing and analyzing protocols that prevent third parties or the public from reading private messages. Modern cryptography exists at the intersection of the disciplines of mathematics, computer science, information security, electrical engineering, digital signal processing, physics, and others. Core concepts related to information security (data confidentiality, data integrity, authentication, and non-repudiation) are also central to cryptography. Practical applications of cryptography include electronic commerce, chip-based payment cards, digital currencies, computer passwords, and military communications.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/currency/","title":"Currency","text":"<p>A currency is a standardization of money in any form, in use or circulation as a medium of exchange, for example banknotes and coins. A more general definition is that a currency is a system of money in common use within a specific environment over time, especially for people in a nation state. Under this definition, the British Pound Sterling (\u00a3), euros (\u20ac), Japanese yen (\u00a5), and U.S. dollars (US$) are examples of (government-issued) fiat currencies. Currencies may act as stores of value and be traded between nations in foreign exchange markets, which determine the relative values of the different currencies. Currencies in this sense are either chosen by users or decreed by governments, and each type has limited boundaries of acceptance - i.e. legal tender laws may require a particular unit of account for payments to government agencies.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/data-analysis/","title":"Data analysis","text":"<p>Data analysis is a process of inspecting, cleansing, transforming, and modeling data with the goal of discovering useful information, informing conclusions, and supporting decision-making. Data analysis has multiple facets and approaches, encompassing diverse techniques under a variety of names, and is used in different business, science, and social science domains. In today\u2019s business world, data analysis plays a role in making decisions more scientific and helping businesses operate more effectively.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/data-analysis/#tools","title":"Tools","text":"<ul> <li>Aleph: Search and browse documents and data; find the people and companies you look for</li> </ul>"},{"location":"pensieve/data-oriented-design/","title":"Data-oriented design","text":"<p>As a design paradigm, data-oriented-design focuses on optimal transformations of data and focuses on modelling programs as transforms. Transforms are abstractions of code that solely focus on the mapping of inputs to outputs. They do not distinguish between accessing inputs by parameter, pointer, reference, upvalue, and vice versa with writing outputs. This eliminates the concept of a Side-effect and focuses solely on how inputs transform into outputs, logically identical to functions in mathematics.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/data-oriented-design/#books","title":"Books","text":"<ul> <li>[2018] Data-oriented design: software engineering for limited resources and short schedules</li> </ul>"},{"location":"pensieve/data-oriented-design/#resources","title":"Resources","text":""},{"location":"pensieve/data-oriented-design/#video","title":"Video","text":"<ul> <li>[2022] A Practical Guide to Applying Data-Oriented Design \u2b50</li> <li>[2014] Data-Oriented Design and C++ \u2b50</li> </ul>"},{"location":"pensieve/data/","title":"Data","text":"<p>In computer science, data (treated as singular, plural, or as a mass noun) is any sequence of one or more symbols; datum is a single symbol of data. Data requires interpretation to become information. Digital data is data that is represented using the binary number system of ones (1) and zeros (0), instead of analog representation. In modern (post-1960) computer systems, all data is digital.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/debugging/","title":"Debugging","text":"<p>In computer programming and software development, debugging is the process of finding and resolving bugs (defects or problems that prevent correct operation) within computer programs, software, or systems.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/debugging/#books","title":"Books","text":"<ul> <li>The Pocket Guide to Debugging \u2b50</li> </ul>"},{"location":"pensieve/debugging/#debuggers","title":"Debuggers","text":"<ul> <li>GNU Debugger \u2b50</li> <li><code>rr</code> \u2b50</li> </ul>"},{"location":"pensieve/debugging/#resources","title":"Resources","text":""},{"location":"pensieve/debugging/#video","title":"Video","text":"<ul> <li>[2023] Back to Basics: Debugging in Cpp</li> <li>[2018] 9.1 - Debugging - Introduction \u2b50</li> <li>[2018] 9.2 - Debugging - GDB Tutorial \u2b50</li> </ul>"},{"location":"pensieve/design/","title":"Design","text":"<p>A design is a plan or specification for the construction of an object or system or for the implementation of an activity or process or the result of that plan or specification in the form of a prototype, product, or process. The verb to design expresses the process of developing a design. In some cases, the direct construction of an object without an explicit prior plan (such as in craftwork, some engineering, coding, and graphic design) may also be considered to be a design activity. The design usually has to satisfy certain goals and constraints; may take into account aesthetic, functional, economic, or socio-political considerations; and is expected to interact with a certain environment. Typical examples of designs include architectural and engineering drawings, circuit diagrams, sewing patterns and less tangible artefacts such as business process models.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/desktop-environments/","title":"Desktop environments","text":"<p>In computing, a desktop environment (DE) is an implementation of the desktop metaphor made of a bundle of programs running on top of a computer operating system that share a common graphical user interface (GUI), sometimes described as a graphical shell. The desktop environment was seen mostly on personal computers until the rise of mobile computing. Desktop GUIs help the user to easily access and edit files, while they usually do not provide access to all of the features found in the underlying operating system. Instead, the traditional command-line interface (CLI) is still used when full control over the operating system is required.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/desktop-environments/#examples","title":"Examples","text":"<ul> <li>GNOME \u2b50</li> <li>KDE</li> <li>Regolith</li> </ul>"},{"location":"pensieve/diary/","title":"Diary","text":"<p>A diary is a written or audiovisual record with discrete entries arranged by date reporting on what has happened over the course of a day or other period. Diaries have traditionally been handwritten but are now also often digital. A personal diary may include a person\u2019s experiences, thoughts, and/or feelings, excluding comments on current events outside the writer\u2019s direct experience. Someone who keeps a diary is known as a diarist.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/diary/#resources","title":"Resources","text":"<ul> <li>[2019] Getting Started with a Code Journal \u2b50</li> </ul>"},{"location":"pensieve/digital-audio/","title":"Digital audio","text":"<p>Digital audio is a representation of sound recorded in, or converted into, digital form. In digital audio, the sound wave of the audio signal is typically encoded as numerical samples in a continuous sequence. For example, in CD audio, samples are taken 44,100 times per second, each with 16-bit sample depth. Digital audio is also the name for the entire technology of sound recording and reproduction using audio signals that have been encoded in digital form. Following significant advances in digital audio technology during the 1970s and 1980s, it gradually replaced analog audio technology in many areas of audio engineering, record production and telecommunications in the 1990s and 2000s.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/digital-audio/#formats","title":"Formats","text":""},{"location":"pensieve/digital-audio/#lossless","title":"Lossless","text":"<ul> <li>FLAC \u2b50</li> </ul>"},{"location":"pensieve/digital-audio/#lossy","title":"Lossy","text":"<ul> <li>EnCodec</li> <li>Lyra</li> <li>MP3</li> <li>Opus \u2b50</li> </ul>"},{"location":"pensieve/digital-audio/#software","title":"Software","text":"<ul> <li>FFmpeg \u2b50</li> </ul>"},{"location":"pensieve/digital-audio/#resources","title":"Resources","text":"<ul> <li>Codec Landscape</li> <li>Guidelines for high quality lossy audio encoding \u2b50</li> <li>Yuki Subs Guides \u2b50</li> <li>[2022] Lyra V2 - a better, faster, and more versatile speech codec</li> <li>[2021] Lyra - enabling voice calls for the next billion users</li> <li>[2019] Anime Encoding Guide for x265 (HEVC) &amp; AAC/OPUS (and Why to Never Use FLAC) \u2b50</li> </ul>"},{"location":"pensieve/digital-data/","title":"Digital data","text":"<p>Digital data, in information theory and information systems, is information represented as a string of discrete symbols, each of which can take on one of only a finite number of values from some alphabet, such as letters or digits. An example is a text document, which consists of a string of alphanumeric characters. The most common form of digital data in modern information systems is binary data, which is represented by a string of binary digits (bits) each of which can have one of two values, either 0 or 1.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/digital-data/#compression-algorithms","title":"Compression algorithms","text":"<ul> <li>Brotli<ul> <li>Brotli-G SDK</li> </ul> </li> </ul>"},{"location":"pensieve/digital-distribution/","title":"Digital distribution","text":"<p>Digital distribution (also referred to as content delivery, online distribution, or electronic software distribution (ESD), among others) is the delivery or distribution of digital media content such as audio, video, e-books, video games, and other software. The term is generally used to describe distribution over an online delivery medium, such as the Internet, thus bypassing physical distribution methods, such as paper, optical discs, and VHS videocassettes. The term online distribution is typically applied to freestanding products; downloadable add-ons for other products are more commonly known as downloadable content. With the advancement of network bandwidth capabilities, online distribution became prominent in the 21st century, with prominent platforms such as Amazon Video, and Netflix\u2019s streaming service starting in 2007.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/digital-distribution/#examples","title":"Examples","text":""},{"location":"pensieve/digital-distribution/#music","title":"Music","text":"<ul> <li>Bandcamp \u2b50</li> <li>Spotify</li> </ul>"},{"location":"pensieve/digital-distribution/#games","title":"Games","text":"<ul> <li>Steam \u2b50</li> </ul>"},{"location":"pensieve/digital-garden/","title":"Digital garden","text":"<p>A garden is something inbetween a personal blog and a wiki. It\u2019s a collection of evolving notes, essays, and ideas that aren\u2019t strictly organised by their publication date. They\u2019re inherently exploratory \u2014 posts are linked through contextual associations. They aren\u2019t refined or complete \u2014 posts can be published as half-finished thoughts that will grow and evolve over time. They\u2019re less rigid, less performative, and less perfect than the personal \u201cblogs\u201d we\u2019re used to encountering on the web.</p> <p>\u2014 Maggie Appleton</p>"},{"location":"pensieve/digital-garden/#examples","title":"Examples","text":"<ul> <li>Bhupesh Varshney</li> <li>Brian Turchyn</li> <li>David Gasquez</li> <li>Jesse Squires</li> <li>Maggie Appelton</li> <li>mark1626</li> <li>Mineral Existence</li> <li>Nikita Voloboev \u2b50</li> <li>Rachel Brindle</li> <li>The Blue Book \u2b50</li> </ul>"},{"location":"pensieve/digital-garden/#community","title":"Community","text":""},{"location":"pensieve/digital-garden/#compilations","title":"Compilations","text":"<ul> <li>Best-of: Digital Gardens \u2b50</li> <li>KasperZutterman\u2019s compilation</li> <li>Maggie Appleton\u2019s compilation</li> <li>Nikita Voloboev\u2019s compilation</li> <li>Richard Litt\u2019s compilation</li> </ul>"},{"location":"pensieve/digital-garden/#forums","title":"Forums","text":"<ul> <li><code>r/DigitalGardens</code></li> </ul>"},{"location":"pensieve/digital-garden/#resources","title":"Resources","text":"<ul> <li>Digital Gardening Tools and Resources \u2b50</li> </ul>"},{"location":"pensieve/digital-image/","title":"Digital image","text":"<p>A digital image is an image composed of picture elements, also known as pixels, each with finite, discrete quantities of numeric representation for its intensity or gray level that is an output from its two-dimensional functions fed as input by its spatial coordinates denoted with x, y on the x-axis and y-axis, respectively. Depending on whether the image resolution is fixed, it may be of vector or raster type. By itself, the term \u201cdigital image\u201d usually refers to raster images or bitmapped images (as opposed to vector images).</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/digital-image/#resources","title":"Resources","text":"<ul> <li>[2023] The Dark Horse of the Image Codec World: Near-Lossless Image Formats Using Ultra-Fast LZ Codecs</li> </ul>"},{"location":"pensieve/digital-media/","title":"Digital media","text":"<p>Digital media refers to any communication media that operate in conjunction with various encoded machine-readable data formats. Digital media can be created, viewed, distributed, modified, listened to, and preserved on a digital electronics device. Digital defines as any data represented by a series of digits, and media refers to methods of broadcasting or communicating this information. Together, digital media refers to mediums of digitized information broadcast through a screen and/or a speaker. This also includes text, audio, video, and graphics that are transmitted over the internet for viewing or listening to on the internet.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/digital-video/","title":"Digital video","text":"<p>Digital video is an electronic representation of moving visual images (video) in the form of encoded digital data. This is in contrast to analog video, which represents moving visual images in the form of analog signals. Digital video comprises a series of digital images displayed in rapid succession, usually at 24 frames per second. Digital video has many advantages such as easy copying, multicasting, sharing and storage.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/digital-video/#formats","title":"Formats","text":"<ul> <li>AV1</li> <li>Advanced Video Coding (H.264 / MPEG-4 AVC)</li> <li>High Efficiency Video Coding (H.265 / MPEG-H HEVC)</li> <li>VP9</li> <li>Versatile Video Coding (H.266 / VVC)</li> </ul>"},{"location":"pensieve/digital-video/#quality-assessment","title":"Quality assessment","text":"<ul> <li>Video Multimethod Assessment Fusion \u2b50<ul> <li>Reference implementation</li> </ul> </li> </ul>"},{"location":"pensieve/digital-video/#software","title":"Software","text":"<ul> <li>Av1an \u2b50</li> <li>FFmpeg \u2b50</li> </ul>"},{"location":"pensieve/digital-video/#resources","title":"Resources","text":"<ul> <li>FFmpeg Wiki \u2b50</li> <li>Yuki Subs Guides \u2b50</li> <li>[2023] Video Compression for Mere Mortals \u2b50</li> <li>[2022] This is a video about video</li> <li>[2019] Anime Encoding Guide for x265 (HEVC) &amp; AAC/OPUS (and Why to Never Use FLAC) \u2b50</li> </ul>"},{"location":"pensieve/distributed-file-systems/","title":"Distributed file systems","text":"<p>Distributed file systems do not share block level access to the same storage but use a network protocol. These are commonly known as network file systems, even though they are not the only file systems that use the network to send data. Distributed file systems can restrict access to the file system depending on access lists or capabilities on both the servers and the clients, depending on how the protocol is designed.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/distributions/","title":"Distributions","text":"<p>A Linux distribution (often abbreviated as distro) is an operating system made from a software collection that includes the Linux kernel and, often, a package management system. Linux users usually obtain their operating system by downloading one of the Linux distributions, which are available for a wide variety of systems ranging from embedded devices (for example, OpenWrt) and personal computers (for example, Linux Mint) to powerful supercomputers (for example, Rocks Cluster Distribution).</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/distributions/#examples","title":"Examples","text":"<ul> <li>Arch Linux<ul> <li>Manjaro Linux</li> </ul> </li> <li>Debian<ul> <li>Ubuntu<ul> <li>elementary OS</li> <li>Linux Mint</li> </ul> </li> </ul> </li> <li>Fedora Linux \u2b50<ul> <li>Fedora Kinoite</li> <li>Fedora Silverblue \u2b50</li> <li>Nobara Project</li> <li>Red Hat Enterprise Linux</li> </ul> </li> <li>Gentoo<ul> <li>Funtoo</li> <li>MocaccinoOS</li> </ul> </li> <li>Guix</li> <li>NixOS \u2b50</li> <li>openSUSE</li> </ul>"},{"location":"pensieve/distributions/#community","title":"Community","text":""},{"location":"pensieve/distributions/#sites","title":"Sites","text":"<ul> <li>DistroWatch \u2b50</li> <li>Privacy Guides: Linux Overview</li> <li>Privacy Guides: Linux</li> </ul>"},{"location":"pensieve/distributions/#resources","title":"Resources","text":""},{"location":"pensieve/distributions/#video","title":"Video","text":"<ul> <li>[2019] Let\u2019s try Fedora Silverblue \u2014 an immutable desktop OS!</li> </ul>"},{"location":"pensieve/dns/","title":"DNS","text":"<p>The Domain Name System (DNS) is the hierarchical and decentralized naming system used to identify computers reachable through the Internet or other Internet Protocol (IP) networks. The resource records contained in the DNS associate domain names with other forms of information. These are most commonly used to map human-friendly domain names to the numerical IP addresses computers need to locate services and devices using the underlying network protocols, but have been extended over time to perform many other functions as well. The Domain Name System has been an essential component of the functionality of the Internet since 1985.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/doom-franchise/","title":"Doom (franchise)","text":"<p>Doom (stylized as DOOM) is a media franchise created by John Carmack, John Romero, Adrian Carmack, Kevin Cloud, and Tom Hall. The series usually focuses on the exploits of an unnamed space marine (often referred to as Doomguy or Doom Slayer) operating under the auspices of the Union Aerospace Corporation (UAC), who fights hordes of demons and the undead in order to save Earth from an apocalyptic invasion.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/doom-franchise/#community","title":"Community","text":""},{"location":"pensieve/doom-franchise/#engines","title":"Engines","text":"<ul> <li>ZDoom</li> </ul>"},{"location":"pensieve/doom-franchise/#frontends","title":"Frontends","text":"<ul> <li>DoomRunner</li> </ul>"},{"location":"pensieve/doom-franchise/#mods","title":"Mods","text":"<ul> <li>Doom Infinite</li> </ul>"},{"location":"pensieve/doom-franchise/#wiki","title":"Wiki","text":"<ul> <li>DoomWiki.org</li> </ul>"},{"location":"pensieve/dynamic-dispatch/","title":"Dynamic dispatch","text":"<p>In computer science, dynamic dispatch is the process of selecting which implementation of a polymorphic operation (method or function) to call at run time. It is commonly employed in, and considered a prime characteristic of, object-oriented programming (OOP) languages and systems.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/dynamic-dispatch/#resources","title":"Resources","text":""},{"location":"pensieve/dynamic-dispatch/#video","title":"Video","text":"<ul> <li>[2020] Runtime polymorphism: why, how?</li> </ul>"},{"location":"pensieve/economics/","title":"Economics","text":"<p>Economics is the social science that studies the production, distribution, and consumption of goods and services.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/email-client/","title":"Email client","text":"<p>An email client, email reader or, more formally, message user agent (MUA) or mail user agent is a computer program used to access and manage a user\u2019s email.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/email-client/#examples","title":"Examples","text":"<ul> <li>Evolution</li> <li>Geary</li> <li>Mailspring</li> <li>Mozilla Thunderbird<ul> <li>Betterbird</li> </ul> </li> </ul>"},{"location":"pensieve/email-hosting-service/","title":"Email hosting service","text":"<p>An email hosting service is an Internet hosting service that operates email servers.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/email-hosting-service/#examples","title":"Examples","text":""},{"location":"pensieve/email-hosting-service/#hosted","title":"Hosted","text":"<ul> <li>Proton Mail</li> <li>Riseup \u2b50</li> <li>Tutanota</li> </ul>"},{"location":"pensieve/email-hosting-service/#self-hosted","title":"Self-hosted","text":"<ul> <li>Cuttlefish</li> <li>Dovecot</li> <li>Haraka</li> <li>iRedMail</li> <li>James</li> <li>Maddy</li> <li>Mail-in-a-Box</li> <li>mailcow</li> <li>Mailu</li> <li>Modoboa</li> <li>Mox</li> <li>Postal</li> <li>Poste.io</li> <li>Postfix</li> </ul>"},{"location":"pensieve/email-hosting-service/#resources","title":"Resources","text":"<ul> <li>E-mail providers - which one to choose?</li> <li>Privacy Guides: Email Services</li> <li>Shadow Wiki: Email</li> <li>[2023] Best Open Source Email Servers \u2b50</li> </ul>"},{"location":"pensieve/ethereum/","title":"Ethereum","text":"<p>Ethereum is a decentralized, open-source blockchain with smart contract functionality. Ether (Abbreviation: ETH; sign: \u039e) is the native cryptocurrency of the platform. Among cryptocurrencies, ether is second only to bitcoin in market capitalization.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/ethereum/#sites","title":"Sites","text":""},{"location":"pensieve/ethereum/#official","title":"Official","text":"<ul> <li>Ethereum \u2b50</li> </ul>"},{"location":"pensieve/ethereum/#community","title":"Community","text":"<ul> <li>L2 Fees: How much does it cost to use Layer-2? \u2b50</li> <li>ultra sound money: An Ethereum meme focusing on the likely decrease of the ETH supply</li> </ul>"},{"location":"pensieve/ethereum/#bridges","title":"Bridges","text":"<ul> <li>Celer Bridge</li> <li>Synapse</li> </ul>"},{"location":"pensieve/ethereum/#news","title":"News","text":"<ul> <li>Week in Ethereum News</li> <li>What\u2019s New in Eth2</li> </ul>"},{"location":"pensieve/ethereum/#resources","title":"Resources","text":""},{"location":"pensieve/ethereum/#text","title":"Text","text":"<ul> <li>[2022] The Ethereum Merge Is Done, Opening a New Era for the Second-Biggest Blockchain</li> <li>[2022] Ethereum After the Merge: What Comes Next?</li> <li>[2021] Why sharding is great: demystifying the technical properties \u2b50</li> </ul>"},{"location":"pensieve/extended-reality/","title":"Extended reality","text":"<p>Extended reality (XR) is a catch-all term to refer to augmented reality (AR), virtual reality (VR), mixed reality or mediated reality (MR), letting \u201cX\u201d be an arbitrary variable that can interpolate between these various realities or eXtrapolate (eXtend) beyond them. The technology is intended to combine or mirror the physical world with a \u201cdigital twin world\u201d able to interact with it.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/extended-reality/#resources","title":"Resources","text":""},{"location":"pensieve/extended-reality/#video","title":"Video","text":"<ul> <li>[2023] Year of the Linux Headset? AR/VR with Stardust XR \u2b50</li> </ul>"},{"location":"pensieve/ffmpeg/","title":"FFmpeg","text":"<p>FFmpeg is a free and open-source software project consisting of a suite of libraries and programs for handling video, audio, and other multimedia files and streams. At its core is the command-line <code>ffmpeg</code> tool itself, designed for processing of video and audio files. It is widely used for format transcoding, basic editing (trimming and concatenation), video scaling, video post-production effects and standards compliance (SMPTE, ITU).</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/ffmpeg/#sites","title":"Sites","text":"<ul> <li>FFmpeg \u2b50</li> <li>FFmpeg Wiki \u2b50</li> </ul>"},{"location":"pensieve/ffmpeg/#tools","title":"Tools","text":"<ul> <li><code>ffmpeg-normalize</code>: Audio Normalization for Python/ffmpeg \u2b50</li> </ul>"},{"location":"pensieve/ffmpeg/#resources","title":"Resources","text":"<ul> <li>[2022] FFmpeg - The Ultimate Guide \u2b50</li> </ul>"},{"location":"pensieve/file-sharing/","title":"File sharing","text":"<p>File sharing is the practice of distributing or providing access to digital media, such as computer programs, multimedia (audio, images and video), documents or electronic books. Common methods of storage, transmission and dispersion include removable media, centralized servers on computer networks, Internet-based hyperlinked documents, and the use of distributed peer-to-peer networking.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/file-sharing/#examples","title":"Examples","text":"<ul> <li>BitTorrent</li> <li>LBRY</li> <li>Soulseek</li> </ul>"},{"location":"pensieve/file-system/","title":"File system","text":"<p>In computing, file system or filesystem (often abbreviated to fs) is a method and data structure that the operating system uses to control how data is stored and retrieved. Without a file system, data placed in a storage medium would be one large body of data with no way to tell where one piece of data stopped and the next began, or where any piece of data was located when it was time to retrieve it. By separating the data into pieces and giving each piece a name, the data is easily isolated and identified. Taking its name from the way a paper-based data management system is named, each group of data is called a \u201cfile\u201d. The structure and logic rules used to manage the groups of data and their names is called a \u201cfile system.\u201d</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/file-system/#examples","title":"Examples","text":"<ul> <li>Btrfs</li> </ul>"},{"location":"pensieve/fish/","title":"<code>fish</code> (Unix shell)","text":"<p><code>fish</code> is a Unix shell with a focus on interactivity and usability. Fish is designed to give the user features by default, rather than by configuration. Fish is considered an exotic shell since it does not rigorously adhere to POSIX shell standards, at the discretion of the maintainers.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/fish/#official","title":"Official","text":""},{"location":"pensieve/fish/#sites","title":"Sites","text":"<ul> <li><code>fish</code> \u2b50</li> </ul>"},{"location":"pensieve/fish/#community","title":"Community","text":""},{"location":"pensieve/fish/#text","title":"Text","text":"<ul> <li>The Fish Cookbook: Tips and recipes for Fish, from shell to plate</li> </ul>"},{"location":"pensieve/floating-point-arithmetic/","title":"Floating-point arithmetic","text":"<p>In computing, floating-point arithmetic (FP) is arithmetic that represents real numbers approximately, using an integer with a fixed precision, called the significand, scaled by an integer exponent of a fixed base.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/floating-point-arithmetic/#community","title":"Community","text":""},{"location":"pensieve/floating-point-arithmetic/#tools","title":"Tools","text":"<ul> <li>Herbie: Find and fix floating-point problems \u2b50</li> </ul>"},{"location":"pensieve/floating-point-arithmetic/#libraries","title":"Libraries","text":"<ul> <li><code>float-cmp</code>: Floating point approximate comparison for Rust</li> </ul>"},{"location":"pensieve/floating-point-arithmetic/#resources","title":"Resources","text":""},{"location":"pensieve/floating-point-arithmetic/#video","title":"Video","text":"<ul> <li>[2022] How floating point works \u2b50</li> </ul>"},{"location":"pensieve/formal-language/","title":"Formal language","text":"<p>In logic, mathematics, computer science, and linguistics, a formal language consists of words whose letters are taken from an alphabet and are well-formed according to a specific set of rules.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/fuzzing/","title":"Fuzzing","text":"<p>In programming and software development, fuzzing or fuzz testing is an automated software testing technique that involves providing invalid, unexpected, or random data as inputs to a computer program. The program is then monitored for exceptions such as crashes, failing built-in code assertions, or potential memory leaks. Typically, fuzzers are used to test programs that take structured inputs. This structure is specified, e.g., in a file format or protocol and distinguishes valid from invalid input. An effective fuzzer generates semi-valid inputs that are \u201cvalid enough\u201d in that they are not directly rejected by the parser, but do create unexpected behaviors deeper in the program and are \u201cinvalid enough\u201d to expose corner cases that have not been properly dealt with.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/fuzzing/#fuzzing-engines","title":"Fuzzing engines","text":"<ul> <li>AFL++</li> <li>Centipede</li> <li>Honggfuzz</li> <li>LibFuzzer</li> </ul>"},{"location":"pensieve/fuzzing/#fuzzing-infrastructure","title":"Fuzzing infrastructure","text":"<ul> <li>ClusterFuzz</li> </ul>"},{"location":"pensieve/fuzzing/#continuous-integration","title":"Continuous integration","text":"<ul> <li>OSS-Fuzz</li> </ul>"},{"location":"pensieve/fuzzing/#resources","title":"Resources","text":"<ul> <li><code>google/fuzzing</code></li> <li>[2019] The Day I Fell in Love with Fuzzing</li> </ul>"},{"location":"pensieve/game-engine/","title":"Game engine","text":"<p>A game engine is a software framework primarily designed for the development of video games, and generally includes relevant libraries and support programs. The \u201cengine\u201d terminology is similar to the term \u201csoftware engine\u201d used in the software industry.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/game-engine/#examples","title":"Examples","text":"<ul> <li>Mach</li> <li>Source</li> </ul>"},{"location":"pensieve/git/","title":"Git","text":"<p>Git is free and open source software for distributed version control: tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. Its goals include speed, data integrity, and support for distributed, non-linear workflows (thousands of parallel branches running on different systems).</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/git/#sites","title":"Sites","text":"<ul> <li>Git \u2b50</li> </ul>"},{"location":"pensieve/git/#community","title":"Community","text":""},{"location":"pensieve/git/#books","title":"Books","text":"<ul> <li>A Hacker\u2019s Guide to Git \u2b50</li> <li>Pro Git \u2b50</li> </ul>"},{"location":"pensieve/git/#forges","title":"Forges","text":"<ul> <li>GitHub</li> <li>GitLab</li> <li>Gitea<ul> <li>Forgejo<ul> <li>Codeberg</li> </ul> </li> </ul> </li> </ul>"},{"location":"pensieve/git/#tools","title":"Tools","text":"<ul> <li><code>git-absorb</code>: <code>git commit --fixup</code>, but automatic</li> <li><code>git-appraise</code>: Distributed code review system for Git repos</li> <li><code>git-subrepo</code>: Git Submodule Alternative</li> <li><code>lazygit</code>: Simple terminal UI for git commands \u2b50</li> </ul>"},{"location":"pensieve/git/#workflows","title":"Workflows","text":"<ul> <li><code>git-branchless</code>: High-velocity, monorepo-scale workflow for Git</li> <li>Legit: Git Workflow for Humans</li> </ul>"},{"location":"pensieve/git/#platforms","title":"Platforms","text":"<ul> <li>HighFlux: Next-Generation Git Client for the remote work era</li> <li>Sturdy: An open-source, real-time, version control platform for startups</li> </ul>"},{"location":"pensieve/git/#resources","title":"Resources","text":"<ul> <li>[2022] Extremely Linear Git History</li> <li>[2022] Git Notes: git\u2019s coolest, most unloved feature</li> <li>[2022] What makes Git so hard to use?</li> <li>[2020] How to update a pull request from a fork with Git</li> <li>[2018] A Plumber\u2019s Guide to Git \u2b50</li> <li>[2014] A Hacker\u2019s Guide to Git \u2b50</li> </ul>"},{"location":"pensieve/gnome-shell-extensions/","title":"GNOME Shell Extensions","text":"<p>The functionality of GNOME Shell can be changed with extensions, which can be written in JavaScript. Users can find and install extensions using the GNOME extensions website. Some of these extensions are hosted in GNOME\u2019s git repository, though they are not official.</p>"},{"location":"pensieve/gnome-shell-extensions/#sites","title":"Sites","text":"<ul> <li>GNOME Shell Extensions \u2b50<ul> <li>Unreviewed Extensions</li> </ul> </li> </ul>"},{"location":"pensieve/gnome-shell-extensions/#code","title":"Code","text":"<ul> <li><code>@gi-types</code>: TypeScript definitions for GNOME libraries \u2b50</li> <li><code>gnome-shell/js/misc/extensionUtils.js</code></li> <li><code>gnome-shell/js/ui</code> \u2b50</li> </ul>"},{"location":"pensieve/gnome-shell-extensions/#documentation","title":"Documentation","text":"<ul> <li>API Documentation \u2b50</li> <li><code>gjs/doc</code></li> <li>GJS Guide \u2b50</li> <li>GNOME Wiki</li> </ul>"},{"location":"pensieve/gnome-shell-extensions/#books","title":"Books","text":"<ul> <li>GTK4 + GJS Book</li> </ul>"},{"location":"pensieve/gnome-shell-extensions/#tools","title":"Tools","text":"<ul> <li>gi.ts: TypeScript (and checkJS) support for GJS</li> </ul>"},{"location":"pensieve/gnome-shell-extensions/#applications","title":"Applications","text":"<ul> <li>Extensions Manager: A utility for browsing and installing GNOME Shell Extensions \u2b50</li> </ul>"},{"location":"pensieve/gnome-shell-extensions/#resources","title":"Resources","text":""},{"location":"pensieve/gnome-shell-extensions/#text","title":"Text","text":"<ul> <li>[2020] How to Create A GNOME Extension \u2b50</li> <li>[2019] Developing my first Gnome Extension</li> <li>[2018] Are there any up-to-date documentation on writing Gnome Shell extensions? \u2b50</li> <li>[2017] GNOME Shell Extension Reference</li> <li>[2012] GNOME shell: Javascript Source Documentation (extensions development)</li> </ul>"},{"location":"pensieve/gnome-shell-extensions/#video","title":"Video","text":"<ul> <li>[2020] How to Create GNOME Extension</li> </ul>"},{"location":"pensieve/gnome-shell/","title":"GNOME Shell","text":"<p>GNOME Shell is the graphical shell of the GNOME desktop environment starting with version 3, which was released on April 6, 2011. It provides basic functions like launching applications, switching between windows and is also a widget engine. GNOME Shell replaced GNOME Panel and some ancillary components of GNOME 2.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/gnome-shell/#sites","title":"Sites","text":"<ul> <li>GitLab \u2b50</li> <li>Wiki</li> </ul>"},{"location":"pensieve/gnome/","title":"GNOME","text":"<p>GNOME, originally an acronym for GNU Network Object Model Environment, is a free and open-source desktop environment for Linux and other Unix-like operating systems.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/gnome/#sites","title":"Sites","text":"<ul> <li>GNOME \u2b50</li> <li>GitLab</li> </ul>"},{"location":"pensieve/gnome/#resources","title":"Resources","text":""},{"location":"pensieve/gnome/#text","title":"Text","text":"<ul> <li>This Week in GNOME \u2b50</li> <li>[2023] How to Propose Features to GNOME</li> <li>[2023] What is GNOME\u2019s Philosophy?</li> </ul>"},{"location":"pensieve/gnome/#video","title":"Video","text":"<ul> <li>baby WOGUE \u2b50</li> </ul>"},{"location":"pensieve/gnu-emacs/","title":"GNU Emacs","text":"<p>GNU Emacs is a free software text editor. It was created by GNU Project founder Richard Stallman, based on the Emacs editor developed for Unix operating systems. GNU Emacs has been a central component of the GNU project and a flagship project of the free software movement. Its tag line is \u201cthe extensible self-documenting text editor.\u201d</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/gnu-emacs/#sites","title":"Sites","text":"<ul> <li>GNU Emacs \u2b50</li> </ul>"},{"location":"pensieve/gnu-emacs/#resources","title":"Resources","text":"<ul> <li>[2023] Emacs From Scratch Part Two: Projects and Keybindings</li> <li>[2023] Emacs From Scratch, Part 1: Foundations</li> <li>[2023] From Zero To IDE with Emacs and LSP</li> </ul>"},{"location":"pensieve/go/","title":"Go","text":"<p>Go is a statically typed, compiled programming language designed at Google by Robert Griesemer, Rob Pike, and Ken Thompson. It is syntactically similar to C, but with memory safety, garbage collection, structural typing, and CSP-style concurrency. It is often referred to as Golang because of its former domain name, golang.org, but its proper name is Go.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/go/#sites","title":"Sites","text":"<ul> <li>Go \u2b50</li> </ul>"},{"location":"pensieve/go/#community","title":"Community","text":""},{"location":"pensieve/go/#coding-conventions","title":"Coding conventions","text":"<ul> <li>Google Go Style Best Practices \u2b50</li> <li>Google\u2019s Go Style Guide \u2b50</li> </ul>"},{"location":"pensieve/go/#compilers","title":"Compilers","text":"<ul> <li>TinyGo: Go on embedded systems and WebAssembly</li> </ul>"},{"location":"pensieve/go/#tools","title":"Tools","text":"<ul> <li>Gocovsh: Go Coverage in your terminal \u2b50</li> <li>Goup: Elegant Go installer \u2b50</li> </ul>"},{"location":"pensieve/go/#libraries","title":"Libraries","text":"<ul> <li><code>gopkg</code>: Universal Utilities for Go</li> </ul>"},{"location":"pensieve/go/#resources","title":"Resources","text":"<ul> <li>go-profiler-notes</li> <li>[2023] Profiling Go Programs</li> <li>[2023] The Smallest Go Binary (5KB)</li> <li>[2022] Making a Go program 42% faster with a one character change</li> <li>[2022] The carcinization of Go programs</li> </ul>"},{"location":"pensieve/graphical-user-interface/","title":"Graphical user interface","text":"<p>The GUI, graphical user interface, is a form of user interface that allows users to interact with electronic devices through graphical icons and audio indicator such as primary notation, instead of text-based UIs, typed command labels or text navigation. GUIs were introduced in reaction to the perceived steep learning curve of CLIs (command-line interfaces), which require commands to be typed on a computer keyboard.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/graphical-user-interface/#resources","title":"Resources","text":"<ul> <li>[2023] The life of a GUI application</li> </ul>"},{"location":"pensieve/graphical-widget/","title":"Graphical widget","text":"<p>A graphical widget (also graphical control element or control) in a graphical user interface is an element of interaction, such as a button or a scroll bar. Controls are software components that a computer user interacts with through direct manipulation to read or edit information about an application. User interface libraries such as Windows Presentation Foundation, Qt, GTK, and Cocoa, contain a collection of controls and the logic to render these.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/habit/","title":"Habit","text":"<p>A habit (or wont as a humorous and formal term) is a routine of behavior that is repeated regularly and tends to occur subconsciously.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/habit/#books","title":"Books","text":"<ul> <li>Atomic Habits</li> </ul>"},{"location":"pensieve/handshake/","title":"Handshake","text":"<p>Decentralized naming and certificate authority. An experimental peer-to-peer root naming system.</p>"},{"location":"pensieve/handshake/#sites","title":"Sites","text":"<ul> <li>Handshake \u2b50</li> </ul>"},{"location":"pensieve/handshake/#utilities","title":"Utilities","text":"<ul> <li>HTools SiteCheck: Analyze DNS, DNSSEC and DANE by a Handshake domain \u2b50</li> </ul>"},{"location":"pensieve/hardware-virtualization/","title":"Hardware virtualization","text":"<p>Hardware virtualization is the virtualization of computers as complete hardware platforms, certain logical abstractions of their componentry, or only the functionality required to run various operating systems. Virtualization hides the physical characteristics of a computing platform from the users, presenting instead an abstract computing platform. At its origins, the software that controlled virtualization was called a \u201ccontrol program\u201d, but the terms \u201chypervisor\u201d or \u201cvirtual machine monitor\u201d became preferred over time.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/hardware-virtualization/#hypervisors-and-emulators","title":"Hypervisors and emulators","text":"<ul> <li>Kernel-based Virtual Machine (KVM)</li> <li>QEMU</li> </ul>"},{"location":"pensieve/hardware-virtualization/#managers","title":"Managers","text":"<ul> <li>Boxes</li> <li>Proxmox Virtual Environment</li> <li>Virtual Machine Manager</li> <li>VirtualBox</li> </ul>"},{"location":"pensieve/hardware/","title":"Hardware","text":"<p>Computer hardware includes the physical parts of a computer, such as the case, central processing unit (CPU), random access memory (RAM), monitor, mouse, keyboard, computer data storage, graphics card, sound card, speakers and motherboard.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/hash-function/","title":"Hash function","text":"<p>A hash function is any function that can be used to map data of arbitrary size to fixed-size values. The values returned by a hash function are called hash values, hash codes, digests, or simply hashes. The values are usually used to index a fixed-size table called a hash table. Use of a hash function to index a hash table is called hashing or scatter storage addressing.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/hash-function/#examples","title":"Examples","text":"<ul> <li>SHA-1</li> </ul>"},{"location":"pensieve/hash-function/#resources","title":"Resources","text":"<ul> <li>Learning Rust by implementing a SHA-1 hash cracker</li> </ul>"},{"location":"pensieve/helix/","title":"Helix","text":"<p>A post-modern text editor.</p>"},{"location":"pensieve/helix/#sites","title":"Sites","text":"<ul> <li>Helix \u2b50</li> </ul>"},{"location":"pensieve/helix/#resources","title":"Resources","text":"<ul> <li>[2022] Helix as a glorious modern Vim</li> </ul>"},{"location":"pensieve/html/","title":"HTML","text":"<p>The HyperText Markup Language or HTML is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/html/#template-engines","title":"Template engines","text":"<ul> <li>Maud (Rust)</li> <li>Tera (Rust)</li> </ul>"},{"location":"pensieve/human-intelligence/","title":"Human intelligence","text":"<p>Human intelligence is the intellectual capability of humans, which is marked by complex cognitive feats and high levels of motivation and self-awareness. High intelligence is associated with better outcomes in life.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/humanities/","title":"Humanities","text":"<p>Humanities are academic disciplines that study aspects of human society and culture. In the Renaissance, the term contrasted with divinity and referred to what is now called classics, the main area of secular study in universities at the time. Today, the humanities are more frequently defined as any fields of study outside of professional training, mathematics, and the natural and social sciences. They use methods that are primarily critical, or speculative, and have a significant historical element \u2014 as distinguished from the mainly empirical approaches of the natural sciences; yet, unlike the sciences, the humanities have no general history.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/i2p/","title":"I2P","text":"<p>The Invisible Internet Project (I2P) is an anonymous network layer (implemented as a mix network) that allows for censorship-resistant, peer-to-peer communication. Anonymous connections are achieved by encrypting the user\u2019s traffic (by using end-to-end encryption), and sending it through a volunteer-run network of roughly 55,000 computers distributed around the world. Given the high number of possible paths the traffic can transit, a third party watching a full connection is unlikely. The software that implements this layer is called an \u201cI2P router\u201d, and a computer running I2P is called an \u201cI2P node\u201d. I2P is free and open sourced, and is published under multiple licenses.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/i2p/#implementations","title":"Implementations","text":"<ul> <li>I2P</li> <li><code>i2pd</code> \u2b50</li> </ul>"},{"location":"pensieve/icon/","title":"Icon","text":"<p>In computing, an icon is a pictogram or ideogram displayed on a computer screen in order to help the user navigate a computer system. The icon itself is a quickly comprehensible symbol of a software tool, function, or a data file, accessible on the system and is more like a traffic sign than a detailed illustration of the actual entity it represents. It can serve as an electronic hyperlink or file shortcut to access the program or data. The user can activate an icon using a mouse, pointer, finger, or recently voice commands. Their placement on the screen, also in relation to other icons, may provide further information to the user about their usage. In activating an icon, the user can move directly into and out of the identified function without knowing anything further about the location or requirements of the file or code.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/icon/#community","title":"Community","text":""},{"location":"pensieve/icon/#sites","title":"Sites","text":"<ul> <li>1001 Free Downloads: Best and most attractive free graphics for designers</li> <li>CSS Author: Design and Development related blog for Web Designers and Developers</li> <li>DevianArt: A social community of artists and designers</li> <li>Dribbble: The world\u2019s leading design portfolios</li> <li>Feather: Simply beautiful open source icons</li> <li>Flaticon: Illustrations, photos, icons, mockups, and presentations templates</li> <li>Font Awesome: The Internet\u2019s icon library and toolkit</li> <li>Fontello: Icon fonts generator</li> <li>Freepik: Best high-quality photos, designs, and mockups</li> <li>Good Stuff No Nonsense: Hand Drawn Vector Icons &amp; Elements</li> <li>GraphicBurger: A buffet of premium quality design resources offered for free to the community</li> <li>Iconfinder: The world\u2019s greatest resource for high-quality icons and illustrations</li> <li>Iconify: All popular icon sets, one framework. Over 150,000 open source vector icons \u2b50<ul> <li>Ic\u00f4nes: Alternative front-end</li> </ul> </li> <li>iconmonstr: Free, monstrously big and continuously growing source of simple icons run by one creator</li> <li>Icons8: Icons, illustrations, photos, music, and design tools \u2b50</li> <li>IconsFlow: Create dozens of personalized icons for your App, Web, Creative projects &amp; Startups</li> <li>Iconshock: The biggest icon pack</li> <li>Pixeden: Premium Design &amp; Web Resources</li> <li>PNG Repo: Search and find best Free PNG graphics</li> <li>Streamline: The world\u2019s largest and most consistent icon and illustration sets</li> <li>SVG Repo: Search and find open source SVG graphics fastest way \u2b50</li> <li>The Noun Project: Icons and Photos For Everything</li> </ul>"},{"location":"pensieve/icon/#resources","title":"Resources","text":"<ul> <li>18 Websites To Download The Best Free Icons For Commercial Use \u2b50</li> </ul>"},{"location":"pensieve/image-scaling/","title":"Image scaling","text":"<p>In computer graphics and digital imaging, image scaling refers to the resizing of a digital image. In video technology, the magnification of digital material is known as upscaling or resolution enhancement.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/image-scaling/#models","title":"Models","text":"<ul> <li>Real-ESRGAN<ul> <li>Real-ESRGAN ncnn Vulkan</li> </ul> </li> <li>waifu2x<ul> <li>waifu2x ncnn Vulkan</li> </ul> </li> </ul>"},{"location":"pensieve/image-scaling/#applications","title":"Applications","text":"<ul> <li>Upscale-rs</li> <li>Upscaler</li> <li>Upscayl</li> </ul>"},{"location":"pensieve/information-theory/","title":"Information theory","text":"<p>Information theory is the scientific study of the quantification, storage, and communication of digital information. The field was fundamentally established by the works of Harry Nyquist and Ralph Hartley, in the 1920s, and Claude Shannon in the 1940s. The field is at the intersection of probability theory, statistics, computer science, statistical mechanics, information engineering, and electrical engineering.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/information-theory/#resources","title":"Resources","text":""},{"location":"pensieve/information-theory/#video","title":"Video","text":"<ul> <li>Uses of Information Theory</li> </ul>"},{"location":"pensieve/instant-messaging/","title":"Instant messaging","text":"<p>Instant messaging (IM) technology is a type of online chat allowing real-time text transmission over the Internet or another computer network. Messages are typically transmitted between two or more parties, when each user inputs text and triggers a transmission to the recipient(s), who are all connected on a common network. It differs from email in that conversations over instant messaging happen in real-time (hence \u201cinstant\u201d). Most modern IM applications (sometimes called \u201csocial messengers\u201d, \u201cmessaging apps\u201d or \u201cchat apps\u201d) use push technology and also add other features such as emojis (or graphical smileys), file transfer, chatbots, voice over IP, or video chat capabilities.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/instant-messaging/#applications","title":"Applications","text":"<ul> <li>Berty \u2b50</li> <li>Discord</li> <li>Revolt</li> <li>Signal<ul> <li>Session</li> </ul> </li> <li>SimpleX</li> <li>Status</li> <li>Telegram</li> </ul>"},{"location":"pensieve/instant-messaging/#protocols","title":"Protocols","text":"<ul> <li>Matrix \u2b50</li> </ul>"},{"location":"pensieve/instant-messaging/#resources","title":"Resources","text":"<ul> <li>Privacy Guides: Real-time Communication \u2b50</li> </ul>"},{"location":"pensieve/intellectual-property/","title":"Intellectual property","text":"<p>Intellectual property (IP) is a category of property that includes intangible creations of the human intellect. There are many types of intellectual property, and some countries recognize more than others. The best-known types are patents, copyrights, trademarks, and trade secrets. The modern concept of intellectual property developed in England in the 17th and 18th centuries. The term \u201cintellectual property\u201d began to be used in the 19th century, though it was not until the late 20th century that intellectual property became commonplace in most of the world\u2019s legal systems.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/intentional-community/","title":"Intentional community","text":"<p>An intentional community is a voluntary residential community which is designed to have a high degree of social cohesion and teamwork from the start. The members of an intentional community typically hold a common social, political, religious, or spiritual vision, and typically share responsibilities and property. This way of life is sometimes characterized as an \u201calternative lifestyle\u201d. Intentional communities can be seen as social experiments or communal experiments. The multitude of intentional communities includes collective households, cohousing communities, coliving, ecovillages, monasteries, survivalist retreats, kibbutzim, hutterites, ashrams, and housing cooperatives.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/intentional-community/#examples","title":"Examples","text":"<ul> <li>Major League Hacking</li> <li>Recurse Center \u2b50</li> <li>The Collab Lab</li> </ul>"},{"location":"pensieve/internet-forum/","title":"Internet forum","text":"<p>An Internet forum, or message board, is an online discussion site where people can hold conversations in the form of posted messages. They differ from chat rooms in that messages are often longer than one line of text, and are at least temporarily archived. Also, depending on the access level of a user or the forum set-up, a posted message might need to be approved by a moderator before it becomes publicly visible.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/internet-forum/#examples","title":"Examples","text":"<ul> <li>Lemmy</li> <li>LessWrong</li> <li>Reddit</li> </ul>"},{"location":"pensieve/interpersonal-relationship/","title":"Interpersonal relationship","text":"<p>In social psychology, an interpersonal relation (or interpersonal relationship) describes a social association, connection, or affiliation between two or more persons. It overlaps significantly with the concept of social relations, which are the fundamental unit of analysis within the social sciences. Relations vary in degrees of intimacy, self-disclosure, duration, reciprocity, and power distribution. The main themes or trends of the interpersonal relations are: family, kinship, friendship, love, marriage, business, employment, clubs, neighborhoods, ethical values, support and solidarity. Interpersonal relations may be regulated by law, custom, or mutual agreement, and form the basis of social groups and societies. They appear when people communicate or act with each other within specific social contexts, and they thrive on equitable and reciprocal compromises.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/japanese-language/","title":"Japanese language","text":"<p>Japanese is the principal language of the Japonic language family spoken by the Japanese people. It has around 128 million speakers, primarily in Japan, the only country where it is the national language, and within Japanese diaspora worldwide.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/japanese-language/#community","title":"Community","text":""},{"location":"pensieve/japanese-language/#books","title":"Books","text":"<ul> <li>Essential Japanese Grammar: Dover Foreign Lanuage Study Guide</li> <li>GENKI: An Integrated Course in Elementary Japanese \u2b50</li> <li>QUARTET: Intermediate Japanese Across the Four Language Skills</li> <li>Tobira: Gateway to Advanced Japanese Learning Through Content and Multimedia</li> </ul>"},{"location":"pensieve/japanese-language/#dictionaries","title":"Dictionaries","text":"<ul> <li>Jisho \u2b50</li> <li>Linguee</li> <li>WordReference.com</li> </ul>"},{"location":"pensieve/japanese-language/#forums","title":"Forums","text":"<ul> <li><code>r/LearnJapanese</code> \u2b50<ul> <li>Wiki</li> </ul> </li> </ul>"},{"location":"pensieve/japanese-language/#sites","title":"Sites","text":"<ul> <li>Animelon</li> <li>Core 6K</li> <li>Massif</li> <li>Real Kana \u2b50</li> <li>Real Kanji \u2b50</li> <li>Renshuu</li> <li>Sentence Search</li> <li>Typing with Mishy</li> </ul>"},{"location":"pensieve/japanese-language/#subtitles","title":"Subtitles","text":"<ul> <li>Itazuraneko</li> <li>Kitsunekko</li> </ul>"},{"location":"pensieve/japanese-language/#tests","title":"Tests","text":"<ul> <li>JLPT</li> </ul>"},{"location":"pensieve/japanese-language/#tools","title":"Tools","text":"<ul> <li><code>subs2cia</code></li> <li><code>subs2srs</code></li> <li><code>substudy</code></li> <li><code>vocabsieve</code></li> <li>Yomichan<ul> <li>Rikaitan \u2b50</li> </ul> </li> </ul>"},{"location":"pensieve/japanese-language/#resources","title":"Resources","text":""},{"location":"pensieve/japanese-language/#text","title":"Text","text":"<ul> <li>Breaking out of the Gaijin Ghetto</li> <li>Genki Study Resources \u2b50</li> <li>IMABI</li> <li>Itazuraneko<ul> <li>Mirror 1 (Kenrick)</li> <li>Mirror 2 (DJT guide) \u2b50</li> </ul> </li> <li>Learn Japanese with Anime</li> <li>MorphMan Addon Guide</li> <li>Refold: Japanese Content &amp; Resources</li> <li>Refold: Japanese Grammar Primer</li> <li>Refold: Japanese</li> <li>Refold: Quickstart</li> <li>Refold: Tech and Tools</li> <li>Shiki\u2019s Unofficial Mining Guide</li> <li>Shiki\u2019s Unofficial Stage and Level Up Guide</li> <li>Tae Kim\u2019s Guide to Learning Japanese</li> <li>Tatsumoto \u2b50</li> <li>TheMoeWay</li> <li>Tobira Study Resources \u2b50</li> <li>[2012] Understand Your Favourite TV Series in 30 Days \u2b50</li> </ul>"},{"location":"pensieve/japanese-language/#video","title":"Video","text":"<ul> <li>Organic Japanese with Cure Dolly</li> <li>[2020] Sentence mining with mpvacious and Yomichan \u2b50</li> <li>[2019] MorphMan Tutorial | UPDATED With Frequency Lists and More</li> <li>[2019] Optimizing Passive Immersion: Condensed Audio</li> </ul>"},{"location":"pensieve/javascript/","title":"JavaScript","text":"<p>JavaScript is a high-level, often just-in-time compiled language that conforms to the ECMAScript standard. It has dynamic typing, prototype-based object-orientation, and first-class functions. It is multi-paradigm, supporting event-driven, functional, and imperative programming styles. It has application programming interfaces (APIs) for working with text, dates, regular expressions, standard data structures, and the Document Object Model (DOM).</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/javascript/#documentation","title":"Documentation","text":"<ul> <li>MDN Web Docs: JavaScript Reference \u2b50</li> <li>MDN Web Docs: JavaScript Guides \u2b50</li> </ul>"},{"location":"pensieve/javascript/#runtimes","title":"Runtimes","text":"<ul> <li>Bun</li> <li>Deno</li> <li>Node</li> </ul>"},{"location":"pensieve/javascript/#tools","title":"Tools","text":""},{"location":"pensieve/javascript/#bundlers","title":"Bundlers","text":"<ul> <li>Bun</li> <li>Turbopack</li> <li>Webpack</li> </ul>"},{"location":"pensieve/javascript/#package-managers","title":"Package managers","text":"<ul> <li>Bun \u2b50</li> <li><code>npm</code></li> <li><code>pnpm</code></li> <li>Ultra</li> <li>Yarn</li> </ul>"},{"location":"pensieve/javascript/#community","title":"Community","text":"<ul> <li>State of JavaScript \u2b50</li> </ul>"},{"location":"pensieve/julia/","title":"Julia","text":"<p>Julia is a high-level, high-performance, dynamic programming language. While it is a general-purpose language and can be used to write any application, many of its features are well suited for numerical analysis and computational science.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/julia/#official","title":"Official","text":""},{"location":"pensieve/julia/#sites","title":"Sites","text":"<ul> <li>Julia \u2b50</li> </ul>"},{"location":"pensieve/julia/#documentation","title":"Documentation","text":"<ul> <li>Julia Documentation \u2b50</li> </ul>"},{"location":"pensieve/julia/#resources","title":"Resources","text":"<ul> <li>[2022] How Julia ODE Solve Compile Time Was Reduced From 30 Seconds to 0.1 \u2b50</li> <li>[2018] Zero-copy deserialization in Julia</li> </ul>"},{"location":"pensieve/key-derivation-function/","title":"Key derivation function","text":"<p>In cryptography, a key derivation function (KDF) is a cryptographic algorithm that derives one or more secret keys from a secret value such as a main key, a password, or a passphrase using a pseudorandom function (which typically uses a cryptographic hash function or block cipher). KDFs can be used to stretch keys into longer keys or to obtain keys of a required format, such as converting a group element that is the result of a Diffie\u2013Hellman key exchange into a symmetric key for use with AES. Keyed cryptographic hash functions are popular examples of pseudorandom functions used for key derivation.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/key-derivation-function/#examples","title":"Examples","text":"<ul> <li>Argon2</li> </ul>"},{"location":"pensieve/key-derivation-function/#resources","title":"Resources","text":"<ul> <li>Learning Rust by implementing a SHA-1 hash cracker</li> </ul>"},{"location":"pensieve/law/","title":"Law","text":"<p>Law is a set of rules that are created and are enforceable by social or governmental institutions to regulate behavior, with its precise definition a matter of longstanding debate. It has been variously described as a science and as the art of justice. State-enforced laws can be made by a group legislature or by a single legislator, resulting in statutes; by the executive through decrees and regulations; or established by judges through precedent, usually in common law jurisdictions. Private individuals may create legally binding contracts, including arbitration agreements that adopt alternative ways of resolving disputes to standard court litigation. The creation of laws themselves may be influenced by a constitution, written or tacit, and the rights encoded therein. The law shapes politics, economics, history and society in various ways and also serves as a mediator of relations between people.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/lbry/","title":"LBRY","text":"<p>LBRY is a blockchain-based file-sharing and payment network that powers decentralized platforms, primarily social networks and video platforms. Video platforms built on LBRY, such as Odysee, have been described as decentralized alternatives to YouTube. The company has described Odysee and other platforms it has built utilizing its LBRY protocol as platforms for free speech and lightly moderates content, including removing pornography or the promotion of violence and terrorism.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/lbry/#sites","title":"Sites","text":"<ul> <li>LBRY \u2b50</li> </ul>"},{"location":"pensieve/lbry/#clients","title":"Clients","text":"<ul> <li>Odysee: an open-source video-sharing website that uses the network \u2b50</li> <li><code>lbryio/lbry-desktop</code>: A browser and wallet for LBRY, the decentralized, user-controlled content marketplace.</li> <li><code>paveloom-f/lbry-desktop</code>: A fork of <code>lbryio/lbry-desktop</code> that removes the blacklist</li> <li><code>lbryio/lbry-android</code>: The LBRY Android app</li> <li><code>paveloom-f/lbry-android</code>: A fork of <code>lbryio/lbry-android</code> that removes the blacklist</li> </ul>"},{"location":"pensieve/learning/","title":"Learning","text":"<p>Learning is the process of acquiring new understanding, knowledge, behaviors, skills, values, attitudes, and preferences. The ability to learn is possessed by humans, animals, and some machines; there is also evidence for some kind of learning in certain plants. Some learning is immediate, induced by a single event (e.g. being burned by a hot stove), but much skill and knowledge accumulate from repeated experiences. The changes induced by learning often last a lifetime, and it is hard to distinguish learned material that seems to be \u201clost\u201d from that which cannot be retrieved.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/learning/#resources","title":"Resources","text":"<ul> <li>[1999] Effective learning: Twenty rules of formulating knowledge \u2b50</li> </ul>"},{"location":"pensieve/lgbt/","title":"LGBT","text":"<p>LGBT is an initialism that stands for \u201clesbian, gay, bisexual, and transgender\u201d. In use since the 1990s, the initialism, as well as some of its common variants, functions as an umbrella term for certain sexualities and gender identities.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/lgbt/#community","title":"Community","text":""},{"location":"pensieve/lgbt/#sites","title":"Sites","text":"<ul> <li>Pronouns.page \u2b50</li> </ul>"},{"location":"pensieve/linguistics/","title":"Linguistics","text":"<p>Linguistics is the scientific study of language. The modern-day scientific study of linguistics takes all aspects of language into account \u2014 i.e., the cognitive, the social, the cultural, the psychological, the environmental, the biological, the literary, the grammatical, the paleographical, and the structural.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/linguistics/#resources","title":"Resources","text":""},{"location":"pensieve/linguistics/#text","title":"Text","text":"<ul> <li>Learn Any Language</li> <li>Refold \u2b50</li> </ul>"},{"location":"pensieve/linux/","title":"Linux","text":"<p>Linux is a family of open-source Unix-like operating systems based on the Linux kernel, an operating system kernel first released on September 17, 1991, by Linus Torvalds. Linux is typically packaged in a Linux distribution.</p> <p>Read more on Wikipedia</p>"},{"location":"pensieve/linux/#official","title":"Official","text":""},{"location":"pensieve/linux/#sites","title":"Sites","text":"<ul> <li>Kernel \u2b50</li> </ul>"},{"location":"pensieve/linux/#documentation","title":"Documentation","text":"<ul> <li>The Linux man-pages project \u2b50</li> </ul>"},{"location":"pensieve/linux/#community","title":"Community","text":""},{"location":"pensieve/linux/#books","title":"Books","text":"<ul> <li>A Heavily Commented Linux kernel Source Code \u2b50</li> <li>Understanding the Linux Kernel \u2b50</li> </ul>"},{"location":"pensieve/livestreaming/","title":"Livestreaming","text":"<p>Livestreaming is streaming media simultaneously recorded and broadcast in real-time over the internet. It is often referred to simply as streaming. Non-live media such as video-on-demand, vlogs, and YouTube videos are technically streamed, but not live-streamed.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/livestreaming/#services","title":"Services","text":""},{"location":"pensieve/livestreaming/#hosted","title":"Hosted","text":"<ul> <li>Odysee</li> <li>Twitch</li> <li>YouTube</li> </ul>"},{"location":"pensieve/livestreaming/#self-hosted","title":"Self-hosted","text":"<ul> <li>Owncast</li> </ul>"},{"location":"pensieve/livestreaming/#resources","title":"Resources","text":"<ul> <li>[2017] Lessons from my first year of live coding on Twitch \u2b50</li> </ul>"},{"location":"pensieve/lobster/","title":"Lobster","text":"<p>Lobster is a programming language that tries to combine the advantages of static typing and compile-time memory management with a very lightweight, friendly and terse syntax, by doing most of the heavy lifting for you.</p>"},{"location":"pensieve/lobster/#official","title":"Official","text":""},{"location":"pensieve/lobster/#sites","title":"Sites","text":"<ul> <li>Lobster \u2b50</li> </ul>"},{"location":"pensieve/lobster/#documentation","title":"Documentation","text":"<ul> <li>Lobster Documentation \u2b50</li> </ul>"},{"location":"pensieve/lobster/#resources","title":"Resources","text":""},{"location":"pensieve/lobster/#text","title":"Text","text":"<ul> <li>[2019] Memory Management in Lobster</li> </ul>"},{"location":"pensieve/lobster/#video","title":"Video","text":"<ul> <li>[2023] The Dream Programming Language? Lobster \u2b50</li> </ul>"},{"location":"pensieve/locale/","title":"Locale","text":"<p>Locale management programs.</p>"},{"location":"pensieve/locale/#documentation","title":"Documentation","text":"<ul> <li><code>locale</code>: Get locale-specific information</li> <li><code>localectl</code>: Control the system locale and keyboard layout settings</li> <li><code>localedef</code>: Compile locale definition files</li> </ul>"},{"location":"pensieve/lua/","title":"Lua","text":"<p>Lua is a lightweight, high-level, multi-paradigm programming language designed primarily for embedded use in applications. Lua is cross-platform, since the interpreter of compiled bytecode is written in ANSI C, and Lua has a relatively simple C API to embed it into applications.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/lua/#sites","title":"Sites","text":"<ul> <li>Lua \u2b50</li> </ul>"},{"location":"pensieve/lua/#resources","title":"Resources","text":""},{"location":"pensieve/lua/#text","title":"Text","text":"<ul> <li>Learn X in Y minutes where X = Lua \u2b50</li> </ul>"},{"location":"pensieve/markup-language/","title":"Markup language","text":"<p>Markup language refers to a text-encoding system consisting of a set of symbols inserted in a text document to control its structure, formatting, or the relationship between its parts. Markup is often used to control the display of the document or to enrich its content to facilitating automated processing. A markup language is a set of rules governing what markup information may be included in a document and how it is combined with the content of the document in a way to facilitate use by humans and computer programs. The idea and terminology evolved from the \u201cmarking up\u201d of paper manuscripts (i.e., the revision instructions by editors), which is traditionally written with a red pen or blue pencil on authors\u2019 manuscripts.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/mathematical-software/","title":"Mathematical software","text":"<p>Mathematical software is software used to model, analyze or calculate numeric, symbolic or geometric data.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/mathematics-of-computing/","title":"Mathematics of computing","text":"<p>A category of computer science which is closely related to mathematics.</p>"},{"location":"pensieve/media-players/","title":"Media players","text":"<p>Media player software is a type of application software for playing multimedia computer files like audio and video files. Media players commonly display standard media control icons known from physical devices such as tape recorders and CD players, such as play (\u00a0\u25b6\ufe0f\u00a0), pause (\u00a0\u23f8\u00a0), fastforward (\u00a0\u23e9\ufe0f\u00a0), backforward (\u00a0\u23ea\u00a0), and stop (\u00a0\u23f9\ufe0f\u00a0) buttons. In addition, they generally have progress bars (or \u201cplayback bars\u201d), which are sliders to locate the current position in the duration of the media file.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/media-players/#examples","title":"Examples","text":""},{"location":"pensieve/media-players/#media","title":"Media","text":"<ul> <li>VLC</li> <li>mpv \u2b50<ul> <li>Celluloid</li> <li>SMPlayer</li> </ul> </li> </ul>"},{"location":"pensieve/media-players/#audio","title":"Audio","text":"<ul> <li>Amberol</li> <li>Audacious</li> <li>Quod Libet \u2b50</li> </ul>"},{"location":"pensieve/media-players/#resources","title":"Resources","text":"<ul> <li>Comparison of audio player software</li> <li>Comparison of video player software</li> </ul>"},{"location":"pensieve/medium-of-exchange/","title":"Medium of exchange","text":"<p>In economics, a medium of exchange is any item that is widely acceptable in exchange for goods and services. In modern economies, the most commonly used medium of exchange is currency.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/memory-management/","title":"Memory management","text":"<p>Memory management is a form of resource management applied to computer memory. The essential requirement of memory management is to provide ways to dynamically allocate portions of memory to programs at their request, and free it for reuse when no longer needed. This is critical to any advanced computer system where more than a single process might be underway at any time.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/memory-management/#allocators","title":"Allocators","text":"<ul> <li><code>mimalloc</code>: A compact general purpose allocator with excellent performance</li> </ul>"},{"location":"pensieve/memory-management/#approaches","title":"Approaches","text":"<ul> <li>Garbage collection<ul> <li>Reference counting</li> <li>Tracing garbage collection</li> </ul> </li> <li>Manual memory management</li> <li>Region-based memory management</li> <li>Stack-based memory allocation</li> </ul>"},{"location":"pensieve/memory-management/#techniques","title":"Techniques","text":"<ul> <li>Borrow checker</li> <li>Resource acquisition is initialization (RAII)</li> </ul>"},{"location":"pensieve/memory-management/#issues","title":"Issues","text":"<ul> <li>Fragmentation</li> <li>Memory leak</li> <li>Unreachable memory</li> </ul>"},{"location":"pensieve/memory-management/#resources","title":"Resources","text":""},{"location":"pensieve/memory-management/#text","title":"Text","text":"<ul> <li>[2023] A simple, arena-backed, generic dynamic array for C</li> <li>[2023] An easy-to-implement, arena-friendly hash map</li> <li>[2023] Arena allocator tips and tricks</li> <li>[2023] Memory Allocation</li> <li>[2022] mmap(1Tb): A Rust arena allocator (ab)using Linux overcommit</li> <li>[2022] Safety in Non-Memory-Safe Languages \u2b50</li> <li>[2022] Untangling Lifetimes: The Arena Allocator \u2b50</li> <li>[2021] Arenas in Rust</li> <li>[2019] Memory Management in Lobster</li> </ul>"},{"location":"pensieve/memory-management/#video","title":"Video","text":"<ul> <li>[2022] Memory safety in C++, Zig, &amp; Rust (Part 1)</li> <li>[2020] What\u2019s a Memory Allocator Anyway? \u2b50</li> </ul>"},{"location":"pensieve/microblogging/","title":"Microblogging","text":"<p>Microblogging is an online broadcast medium that exists as a specific form of blogging. A micro-blog differs from a traditional blog in that its content is typically smaller in both actual and aggregated file size. Micro-blogs \u201callow users to exchange small elements of content such as short sentences, individual images, or video links\u201d, which may be the major reason for their popularity. These small messages are sometimes called micro posts.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/microblogging/#services","title":"Services","text":""},{"location":"pensieve/microblogging/#centralized","title":"Centralized","text":"<ul> <li>cohost</li> <li>Tumblr</li> <li>Twitter</li> </ul>"},{"location":"pensieve/microblogging/#decentralized","title":"Decentralized","text":"<ul> <li>ActivityPub<ul> <li>Mastodon</li> <li>Misskey</li> </ul> </li> <li>Nostr</li> </ul>"},{"location":"pensieve/microblogging/#resources","title":"Resources","text":"<ul> <li>[2023] Nostr: A simple, open protocol enabling global, decentralized, and censorship-resistant social media \u2b50</li> </ul>"},{"location":"pensieve/minor-attracted-person/","title":"Minor Attracted Person","text":"<p>Minor-attracted person (abbreviated to MAP) is an umbrella term that covers a range of minor-related chronophilias, including pedophilia and hebephilia. The inclusion of ephebophilia under this category is controversial among some academics.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/minor-attracted-person/#community","title":"Community","text":""},{"location":"pensieve/minor-attracted-person/#fediverse","title":"Fediverse","text":"<ul> <li>aethy.com</li> <li>baraag.net</li> <li>freak.university</li> <li>nnia.space</li> <li>pawoo.net</li> </ul>"},{"location":"pensieve/minor-attracted-person/#forums","title":"Forums","text":"<ul> <li>Little Angels Hentai</li> </ul>"},{"location":"pensieve/minor-attracted-person/#image-boards","title":"Image boards","text":"<ul> <li>Gelbooru</li> </ul>"},{"location":"pensieve/minor-attracted-person/#several-services","title":"Several services","text":"<ul> <li>AllTheFallen</li> <li>youjo.love</li> </ul>"},{"location":"pensieve/minor-attracted-person/#streaming","title":"Streaming","text":"<ul> <li>Pomf.tv</li> </ul>"},{"location":"pensieve/minor-attracted-person/#video-sharing","title":"Video sharing","text":"<ul> <li>FreeSpeechTube</li> </ul>"},{"location":"pensieve/minor-attracted-person/#resources","title":"Resources","text":""},{"location":"pensieve/minor-attracted-person/#text","title":"Text","text":"<ul> <li>MAP Wiki \u2b50</li> <li>NewgonWiki \u2b50</li> </ul>"},{"location":"pensieve/minor-attracted-person/#video","title":"Video","text":"<ul> <li>Todd Nickerson \u2b50</li> </ul>"},{"location":"pensieve/monero/","title":"Monero","text":"<p>Monero (Abbreviation: XMR) is a decentralized cryptocurrency. It uses a public distributed ledger with privacy-enhancing technologies that obfuscate transactions to achieve anonymity and fungibility. Observers cannot decipher addresses trading Monero, transaction amounts, address balances, or transaction histories.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/monero/#official","title":"Official","text":""},{"location":"pensieve/monero/#sites","title":"Sites","text":"<ul> <li>Monero \u2b50</li> </ul>"},{"location":"pensieve/monero/#community","title":"Community","text":""},{"location":"pensieve/monero/#sites_1","title":"Sites","text":"<ul> <li>MiningPoolStats: Monero \u2b50</li> </ul>"},{"location":"pensieve/monero/#miners","title":"Miners","text":"<ul> <li>XMRig \u2b50<ul> <li>Gupax \u2b50</li> </ul> </li> </ul>"},{"location":"pensieve/monero/#pools","title":"Pools","text":"<ul> <li>P2Pool \u2b50</li> </ul>"},{"location":"pensieve/monero/#resources","title":"Resources","text":""},{"location":"pensieve/monero/#video","title":"Video","text":"<ul> <li>How &amp; Why to Mine Monero \u2b50</li> </ul>"},{"location":"pensieve/motivation/","title":"Motivation","text":"<p>Motivation is the reason for which humans and other animals initiate, continue, or terminate a behavior at a given time. Motivational states are commonly understood as forces acting within the agent that create a disposition to engage in goal-directed behavior. It is often held that different mental states compete with each other and that only the strongest state determines behavior. This means that we can be motivated to do something without actually doing it. The paradigmatic mental state providing motivation is desire. But various other states, such as beliefs about what one ought to do or intentions, may also provide motivation. Motivation is derived from the word \u2018motive\u2019, which denotes a person\u2019s needs, desires, wants, or urges. It is the process of motivating individuals to take action in order to achieve a goal. The psychological elements fueling people\u2019s behavior in the context of job goals might include a desire for money.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/multimedia-software/","title":"Multimedia software","text":"<p>Software for handling video, audio, and other multimedia files and streams.</p>"},{"location":"pensieve/multimedia-software/#examples","title":"Examples","text":"<ul> <li>Av1an \u2b50</li> <li>FFmpeg \u2b50</li> </ul>"},{"location":"pensieve/music-and-artificial-intelligence/","title":"Music and artificial intelligence","text":"<p>Artificial intelligence and music (AIM) is a common subject in the International Computer Music Conference, the Computing Society Conference and the International Joint Conference on Artificial Intelligence. The first International Computer Music Conference (ICMC) was held in 1974 at Michigan State University. Current research includes the application of AI in music composition, performance, theory and digital sound processing.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/music-and-artificial-intelligence/#examples","title":"Examples","text":"<ul> <li>Riffusion</li> <li>Soundraw</li> </ul>"},{"location":"pensieve/music/","title":"Music","text":"<p>Music is generally defined as the art of arranging sound to create some combination of form, harmony, melody, rhythm or otherwise expressive content. Exact definitions of music vary considerably around the world, though it is an aspect of all human societies, a cultural universal. While scholars agree that music is defined by a few specific elements, there is no consensus on their precise definitions. The creation of music is commonly divided into musical composition, musical improvisation, and musical performance, though the topic itself extends into academic disciplines, criticism, philosophy, and psychology. Music may be performed or improvised using a vast range of instruments, including the human voice.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/music/#databases","title":"Databases","text":"<ul> <li>Discogs</li> <li>MusicBrainz \u2b50</li> <li>Rate Your Music</li> </ul>"},{"location":"pensieve/music/#discover","title":"Discover","text":"<ul> <li>Album of the Year \u2b50</li> <li>Every Noise at Once \u2b50</li> <li>Gnoosic \u2b50</li> </ul>"},{"location":"pensieve/music/#tracking","title":"Tracking","text":"<ul> <li>Last.fm</li> <li>ListenBrainz \u2b50</li> <li>Maloja</li> </ul>"},{"location":"pensieve/music/#see-also","title":"See also","text":"<ul> <li>Digital distribution: Music</li> </ul>"},{"location":"pensieve/music/#resources","title":"Resources","text":"<ul> <li>Awesome Music Theory \u2b50</li> </ul>"},{"location":"pensieve/natural-language-processing/","title":"Natural language processing","text":"<p>Natural language processing (NLP) is a subfield of linguistics, computer science, and artificial intelligence concerned with the interactions between computers and human language, in particular how to program computers to process and analyze large amounts of natural language data. The goal is a computer capable of \u201cunderstanding\u201d the contents of documents, including the contextual nuances of the language within them. The technology can then accurately extract information and insights contained in the documents as well as categorize and organize the documents themselves.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/neovim/","title":"Neovim","text":"<p>Neovim is a fork of Vim that strives to improve the extensibility and maintainability of Vim. Some features of the fork include built-in Language Server Protocol support, and support for scripting using Lua. Neovim has the same configuration syntax as Vim (unless vim9script is used); thus the same configuration file can be used with both editors, although there are minor differences in details of options. If the added features of Neovim are not used, Neovim is compatible with almost all of Vim\u2019s features.</p>"},{"location":"pensieve/neovim/#sites","title":"Sites","text":"<ul> <li>Neovim \u2b50</li> </ul>"},{"location":"pensieve/neovim/#books","title":"Books","text":"<ul> <li>Vim Reference Guide \u2b50</li> </ul>"},{"location":"pensieve/neovim/#community","title":"Community","text":""},{"location":"pensieve/neovim/#gui-clients","title":"GUI clients","text":"<ul> <li>Neovide</li> <li>Uivonim</li> </ul>"},{"location":"pensieve/neovim/#resources","title":"Resources","text":"<ul> <li>[2021] Vim-Galore</li> <li>[2017] Vim Search and Replace With Examples</li> </ul>"},{"location":"pensieve/network-delay/","title":"Network delay","text":"<p>Network delay is a design and performance characteristic of a telecommunications network. It specifies the latency for a bit of data to travel across the network from one communication endpoint to another. It is typically measured in multiples or fractions of a second. Delay may differ slightly, depending on the location of the specific pair of communicating endpoints.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/network-delay/#tools","title":"Tools","text":"<ul> <li>Blip: A tool for seeing your Internet latency \u2b50</li> </ul>"},{"location":"pensieve/network-service/","title":"Network service","text":"<p>In computer networking, a network service is an application running at the network application layer and above, that provides data storage, manipulation, presentation, communication or other capability which is often implemented using a client\u2013server or peer-to-peer architecture based on application layer network protocols.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/network-service/#resources","title":"Resources","text":"<ul> <li><code>LandChad.net</code></li> <li>[2022] Redundancy, Part 1</li> </ul>"},{"location":"pensieve/nim/","title":"Nim","text":"<p>Nim is a general-purpose, multi-paradigm, statically typed, compiled systems programming language, designed and developed by a team around Andreas Rumpf. Nim is designed to be \u201cefficient, expressive, and elegant\u201d, supporting metaprogramming, functional, message passing, procedural, and object-oriented programming styles by providing several features such as compile time code generation, algebraic data types, a foreign function interface (FFI) with C, C++, Objective-C, and JavaScript, and supporting compiling to those same languages.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/nim/#official","title":"Official","text":""},{"location":"pensieve/nim/#sites","title":"Sites","text":"<ul> <li>Nim \u2b50</li> </ul>"},{"location":"pensieve/nim/#documentation","title":"Documentation","text":"<ul> <li>Nim Manual \u2b50</li> <li>Nim Standard Library \u2b50</li> <li>Tools available with Nim</li> </ul>"},{"location":"pensieve/nim/#resources","title":"Resources","text":"<ul> <li>[2020] Nim without GC</li> </ul>"},{"location":"pensieve/nix/","title":"Nix","text":"<p>Nix is a cross-platform package manager that utilizes a purely functional deployment model where software is installed into unique directories generated through cryptographic hashes. It is also the name of the tool\u2019s programming language. A package\u2019s hash takes into account the dependencies, which is claimed to eliminate dependency hell, as an alternative to the typical solution of installing multiple versions of dependencies at the same time. This package management model advertises more reliable, reproducible, and portable packages.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/nix/#official","title":"Official","text":""},{"location":"pensieve/nix/#sites","title":"Sites","text":"<ul> <li>NixOS \u2b50</li> </ul>"},{"location":"pensieve/nix/#documentation","title":"Documentation","text":"<ul> <li>Nix Manual \u2b50</li> <li>Nixpkgs Manual \u2b50</li> </ul>"},{"location":"pensieve/nix/#configuration-examples","title":"Configuration examples","text":"<ul> <li>Flake templates \u2b50</li> </ul>"},{"location":"pensieve/nix/#packages","title":"Packages","text":"<ul> <li>Nix User Repository<ul> <li>Search</li> </ul> </li> <li>Nixpkgs \u2b50<ul> <li>Search</li> </ul> </li> </ul>"},{"location":"pensieve/nix/#community","title":"Community","text":""},{"location":"pensieve/nix/#sites_1","title":"Sites","text":"<ul> <li>FlakeHub</li> <li>Nix package versions</li> </ul>"},{"location":"pensieve/nix/#documentation_1","title":"Documentation","text":"<ul> <li>Nix Pills</li> <li><code>nix.dev</code></li> <li>Zero to Nix</li> </ul>"},{"location":"pensieve/nix/#tools","title":"Tools","text":"<ul> <li><code>cntr</code> \u2b50<ul> <li><code>breakpointHook</code> \u2b50</li> </ul> </li> <li><code>nix-output-monitor</code> \u2b50</li> <li><code>nix-snapshotter</code></li> <li><code>nix-sysdig</code></li> </ul>"},{"location":"pensieve/nix/#resources","title":"Resources","text":""},{"location":"pensieve/nix/#text","title":"Text","text":"<ul> <li>[2023] Building 15-year-old software with Nix</li> <li>[2023] Connecting Bash to Nix \u2b50</li> <li>[2023] Debugging Nix build inconsistencies: manual vs automatic build</li> <li>[2023] How do Nix builds work?</li> <li>[2023] Moving stuff around with Nix</li> <li>[2023] Nix Flake Architecture in Practice \u2b50</li> <li>[2023] Nix journey part 0: Learning and reference materials \u2b50</li> <li>[2023] Stopping evaluation from blocking in Nix</li> <li>[2022] Building Nix derivations manually in nix-shell</li> <li>[2022] Building containers with Nix and Gitlab CI \u2b50</li> <li>[2022] Debugging Closure Sizes Graphically with nix-closure-graph \u2b50</li> <li>[2022] Dirty Nix flake quality-of-life hacks \u2b50</li> <li>[2022] Nix Flakes: an Introduction</li> <li>[2022] Nix from First Principles: Flake Edition</li> <li>[2021] A minimal nix-shell</li> <li>[2021] Ditch your version manager \u2b50</li> <li>[2021] How to Learn Nix</li> <li>[2021] Nix From the Ground Up \u2b50</li> <li>[2020] Nix Flakes Series<ul> <li>Part 1: An introduction and tutorial</li> <li>Part 2: Evaluation caching</li> <li>Part 3: Managing NixOS systems</li> </ul> </li> <li>[2020] My usage of Nix, and Lorri + Direnv</li> <li>[2020] Searching and installing old versions of Nix packages</li> </ul>"},{"location":"pensieve/nix/#video","title":"Video","text":"<ul> <li>The Nix Hour</li> <li>[2020] Better than virtualenv | direnv + nix-shell + lorri + flakes \u2b50</li> <li>[2018] About Nix sandboxes and breakpoints \u2b50</li> </ul>"},{"location":"pensieve/nix/#see-also","title":"See also","text":"<ul> <li>NixOS</li> </ul>"},{"location":"pensieve/nixos/","title":"NixOS","text":"<p>NixOS is a Linux distribution built on top of the Nix package manager. It uses declarative configuration and allows reliable system upgrades. Several official package \u201cchannels\u201d are offered, including the current Stable release and the Unstable release which follows the latest development. NixOS has tools dedicated to DevOps and deployment tasks.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/nixos/#official","title":"Official","text":""},{"location":"pensieve/nixos/#sites","title":"Sites","text":"<ul> <li>NixOS \u2b50</li> </ul>"},{"location":"pensieve/nixos/#documentation","title":"Documentation","text":"<ul> <li>NixOS Manual \u2b50</li> </ul>"},{"location":"pensieve/nixos/#community","title":"Community","text":""},{"location":"pensieve/nixos/#documentation_1","title":"Documentation","text":"<ul> <li>NixOS Wiki \u2b50</li> </ul>"},{"location":"pensieve/nixos/#books","title":"Books","text":"<ul> <li>NixOS &amp; Flakes Book</li> <li>NixOS in Production</li> </ul>"},{"location":"pensieve/nixos/#configuration-examples","title":"Configuration examples","text":"<ul> <li>colemickens/nixos-flake-example \u2b50</li> <li>hlissner/dotfiles \u2b50</li> <li>Misterio77/nix-config \u2b50</li> <li>Misterio77/nix-starter-configs \u2b50</li> </ul>"},{"location":"pensieve/nixos/#resources","title":"Resources","text":""},{"location":"pensieve/nixos/#text","title":"Text","text":"<ul> <li>NixOS Guide</li> <li>[2023] Nix and NixOS: a retrospective</li> <li>[2023] NixOS: A personal post-mortem \u2b50</li> <li>[2023] Quick VMs with NixOS</li> <li>[2022] Getting NixOS to keep a secret \u2b50</li> <li>[2022] The Curse of NixOS</li> <li>[2021] Encrypted Secrets with NixOS</li> </ul>"},{"location":"pensieve/nixos/#video","title":"Video","text":"<ul> <li>[2023] Immutable OSes for Hacking! \u2b50</li> </ul>"},{"location":"pensieve/nixos/#see-also","title":"See also","text":"<ul> <li>Nix</li> </ul>"},{"location":"pensieve/object-oriented-programming/","title":"Object-oriented programming","text":"<p>Object-Oriented Programming (OOP) is a programming paradigm based on the concept of \u201cobjects\u201d, which can contain data and code. The data is in the form of fields (often known as attributes or properties), and the code is in the form of procedures (often known as methods).</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/object-oriented-programming/#books","title":"Books","text":"<ul> <li>[2011] Object-Oriented Programming With ANSI-C</li> </ul>"},{"location":"pensieve/objectivism/","title":"Objectivism","text":"<p>Objectivism is a philosophical system developed by Russian-American writer and philosopher Ayn Rand. She described it as \u201cthe concept of man as a heroic being, with his own happiness as the moral purpose of his life, with productive achievement as his noblest activity, and reason as his only absolute\u201d.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/objectivism/#books","title":"Books","text":""},{"location":"pensieve/objectivism/#fiction","title":"Fiction","text":"<ul> <li>[1957] Atlas Shrugged</li> <li>[1943] The Fountainhead</li> <li>[1938] Anthem</li> <li>[1936] We the Living</li> </ul>"},{"location":"pensieve/objectivism/#non-fiction","title":"Non-fiction","text":"<ul> <li>[2019] Keeping It Real: Bringing Ideas Down to Earth</li> <li>[1991] Objectivism: The Philosophy of Ayn Rand \u2b50</li> <li>[1982] Philosophy: Who Needs It</li> <li>[1979] Introduction to Objectivist Epistemology</li> <li>[1969] The Romantic Manifesto: A Philosophy of Literature</li> <li>[1966] Capitalism: The Unknown Ideal</li> <li>[1964] The Virtue of Selfishness</li> </ul>"},{"location":"pensieve/objectivism/#official","title":"Official","text":""},{"location":"pensieve/objectivism/#organizations","title":"Organizations","text":"<ul> <li>Ayn Rand Institute</li> <li>The Atlas Society</li> </ul>"},{"location":"pensieve/objectivism/#community","title":"Community","text":""},{"location":"pensieve/objectivism/#sites","title":"Sites","text":"<ul> <li>The Ayn Rand Lexicon: Objectivism from A to Z \u2b50</li> <li>Unofficial Index to Dr. Leonard Peikoff\u2019s Podcasts</li> </ul>"},{"location":"pensieve/objectivism/#resources","title":"Resources","text":""},{"location":"pensieve/objectivism/#video","title":"Video","text":"<ul> <li>[2023] Top 10 (+1) Things Leonard Peikoff Did For Me (and You) \u2b50</li> <li>[2021] 9 Life Lessons From Ayn Rand (Philosophy Of Objectivism)</li> <li>[1995] Introduction to Objectivism \u2b50</li> <li>[1974] Philosophy: Who Needs It</li> </ul>"},{"location":"pensieve/operating-system-shell/","title":"Operating system shell","text":"<p>In computing, a shell is a computer program that exposes an operating system\u2019s services to a human user or other programs. In general, operating system shells use either a command-line interface (CLI) or graphical user interface (GUI), depending on a computer\u2019s role and particular operation. It is named a shell because it is the outermost layer around the operating system.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/operating-system-shell/#examples","title":"Examples","text":"<ul> <li>Bash</li> <li><code>fish</code> \u2b50</li> <li>Nushell</li> <li>Oil</li> <li>Powershell</li> <li>Zsh<ul> <li>Oh My ZSH!</li> </ul> </li> </ul>"},{"location":"pensieve/operating-system-shell/#tools","title":"Tools","text":"<ul> <li>Atuin: Magical shell history</li> <li><code>explainshell.com</code>: Write down a command-line to see the help text that matches each argument</li> <li><code>fzf</code>: A command-line fuzzy finder \u2b50</li> <li>ShellCheck: A static analysis tool for shell scripts \u2b50</li> </ul>"},{"location":"pensieve/operating-system/","title":"Operating systems","text":"<p>An operating system (OS) is system software that manages computer hardware, software resources, and provides common services for computer programs.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/operating-system/#examples","title":"Examples","text":"<ul> <li>Unix and Unix-like operating systems<ul> <li>BSD<ul> <li>FreeBSD</li> <li>NetBSD</li> <li>OpenBSD</li> <li>ravynOS</li> </ul> </li> <li>macOS</li> <li>Linux</li> </ul> </li> <li>Microsoft Windows</li> <li>Other<ul> <li>Haiku</li> <li>HelenOS</li> <li>Plan 9</li> </ul> </li> </ul>"},{"location":"pensieve/operating-system/#books","title":"Books","text":"<ul> <li>Modern Operating Systems</li> <li>Nand to Tetris</li> <li>Operating Systems: Three Easy Pieces</li> </ul>"},{"location":"pensieve/os-level-virtualization/","title":"OS-level virtualization","text":"<p>OS-level virtualization is an operating system (OS) paradigm in which the kernel allows the existence of multiple isolated user space instances, called containers (LXC, Solaris containers, Docker, Podman), zones (Solaris containers), virtual private servers (OpenVZ), partitions, virtual environments (VEs), virtual kernels (DragonFly BSD), or jails (FreeBSD jail or chroot jail). Such instances may look like real computers from the point of view of programs running in them. A computer program running on an ordinary operating system can see all resources (connected devices, files and folders, network shares, CPU power, quantifiable hardware capabilities) of that computer. However, programs running inside of a container can only see the container\u2019s contents and devices assigned to the container.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/os-level-virtualization/#examples","title":"Examples","text":"<ul> <li>Docker</li> <li>Kata Containers</li> <li>Podman \u2b50</li> </ul>"},{"location":"pensieve/os-level-virtualization/#tools","title":"Tools","text":"<ul> <li>Toast: Containerize your development and continuous integration environments</li> </ul>"},{"location":"pensieve/os-level-virtualization/#resources","title":"Resources","text":"<ul> <li>[2020] The tool that really runs your containers: deep dive into <code>runc</code> and OCI specifications \u2b50</li> </ul>"},{"location":"pensieve/overlay-network/","title":"Overlay network","text":"<p>An overlay network is a computer network that is layered on top of another network.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/package-manager/","title":"Package manager","text":"<p>A package manager or package-management system is a collection of software tools that automates the process of installing, upgrading, configuring, and removing computer programs for a computer in a consistent manner.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/package-manager/#examples","title":"Examples","text":"<ul> <li>dpkg<ul> <li>APT</li> </ul> </li> <li>Luet</li> <li>Nix \u2b50</li> <li>RPM<ul> <li>DNF</li> <li>YUM</li> </ul> </li> <li>PackageKit</li> <li>Portage</li> </ul>"},{"location":"pensieve/pair-programming/","title":"Pair programming","text":"<p>Pair programming is a software development technique in which two programmers work together at one workstation. One, the driver, writes code while the other, the observer or navigator, reviews each line of code as it is typed in. The two programmers switch roles frequently.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/pair-programming/#resources","title":"Resources","text":"<ul> <li>[2020] On Pair Programming \u2b50</li> </ul>"},{"location":"pensieve/performing-arts/","title":"Performing arts","text":"<p>The performing arts are arts such as music, dance, and drama which are performed for an audience. They are different from the visual arts, which are the use of paint, canvas or various materials to create physical or static art objects. Performing arts include a range of disciplines which are performed in front of a live audience, including theatre, music, and dance.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/philosophy/","title":"Philosophy","text":"<p>Philosophy (from Greek: \u03c6\u03b9\u03bb\u03bf\u03c3\u03bf\u03c6\u03af\u03b1, philosophia, \u2018love of wisdom\u2019) is the systematized study of general and fundamental questions, such as those about existence, reason, knowledge, values, mind, and language. Such questions are often posed as problems to be studied or resolved. Some sources claim the term was coined by Pythagoras (c.\u2009570\u00a0\u2013 c.\u2009495 BCE); others dispute this story. Philosophical methods include questioning, critical discussion, rational argument, and systematic presentation.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/planck-ez/","title":"Planck EZ","text":""},{"location":"pensieve/planck-ez/#sites","title":"Sites","text":"<ul> <li>Planck EZ \u2b50</li> <li>Oryx \u2b50</li> </ul>"},{"location":"pensieve/planck-ez/#resources","title":"Resources","text":"<ul> <li>The Art of Making 40% keymaps that aren\u2019t crap</li> <li><code>qmk_firmware/layouts</code></li> <li>[2019] Top Planck Layouts</li> <li>[2019] Community Post: 40% Keyboard Layouts</li> </ul>"},{"location":"pensieve/planning/","title":"Planning","text":"<p>Planning is the process of thinking regarding the activities required to achieve a desired goal. Planning is based on foresight, the fundamental capacity for mental time travel. The evolution of forethought, the capacity to think ahead, is considered to have been a prime mover in human evolution. Planning is a fundamental property of intelligent behavior. It involves the use of logic and imagination to visualise not only a desired end result, but the steps necessary to achieve that result.</p>"},{"location":"pensieve/podman/","title":"Podman","text":"<p>Podman is a daemonless container engine for developing, managing, and running OCI Containers on your Linux System. Containers can either be run as root or in rootless mode.</p>"},{"location":"pensieve/podman/#sites","title":"Sites","text":"<ul> <li>Podman \u2b50</li> </ul>"},{"location":"pensieve/podman/#tools","title":"Tools","text":"<ul> <li>Pods: A Podman desktop application</li> </ul>"},{"location":"pensieve/podman/#resources","title":"Resources","text":"<ul> <li>How to run a rootless podman service in Github Actions</li> </ul>"},{"location":"pensieve/polymorphism/","title":"Polymorphism","text":"<p>In programming language theory and type theory, polymorphism is the provision of a single interface to entities of different types or the use of a single symbol to represent multiple different types. The concept is borrowed from a principle in biology where an organism or species can have many different forms or stages.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/positive-psychology/","title":"Positive psychology","text":"<p>Positive psychology is the scientific study of what makes life most worth living, focusing on both individual and societal well-being. It studies \u201cpositive subjective experience, positive individual traits, and positive institutions\u2026it aims to improve quality of life.\u201d It is a field of study that has been growing steadily throughout the years as individuals and researchers look for common ground on better well-being.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/positive-psychology/#papers","title":"Papers","text":"<ul> <li>[2020] Ways to Greater Happiness: A Delphi Study</li> <li>[2019] Spending at least 120\u2009minutes a week in nature is associated with good health and wellbeing</li> </ul>"},{"location":"pensieve/positive-psychology/#resources","title":"Resources","text":"<ul> <li>[2023] How to be happy, or ways to try your best</li> </ul>"},{"location":"pensieve/program-optimization/","title":"Program optimization","text":"<p>In computer science, program optimization, code optimization, or software optimization, is the process of modifying a software system to make some aspect of it work more efficiently or use fewer resources. In general, a computer program may be optimized so that it executes more rapidly, or to make it capable of operating with less memory storage or other resources, or draw less power.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/program-optimization/#approaches","title":"Approaches","text":"<ul> <li>Data-oriented design \u2b50</li> <li>Profile-guided optimization \u2b50</li> </ul>"},{"location":"pensieve/program-optimization/#books","title":"Books","text":"<ul> <li>[2022] Algorithms for Modern Hardware \u2b50</li> <li>[2021] The Art of Writing Efficient Programs</li> <li>[2021] Understanding Software Dynamics</li> <li>[2003] Code Optimization: Effective Memory Usage</li> </ul>"},{"location":"pensieve/program-optimization/#courses","title":"Courses","text":"<ul> <li>Performance Ninja Class</li> </ul>"},{"location":"pensieve/program-optimization/#profilers","title":"Profilers","text":"<ul> <li>Tracy \u2b50</li> <li>Valgrind<ul> <li><code>massif-visualizer</code></li> </ul> </li> </ul>"},{"location":"pensieve/program-optimization/#tools","title":"Tools","text":"<ul> <li>AutoFDO: Automatic feedback-directed optimization for warehouse-scale applications</li> <li>BOLT: A post-link optimizer developed to speed up large applications</li> </ul>"},{"location":"pensieve/program-optimization/#resources","title":"Resources","text":""},{"location":"pensieve/program-optimization/#text","title":"Text","text":"<ul> <li>[2023] {n} times faster than C \u2b50<ul> <li>Part 1</li> <li>Part 2</li> </ul> </li> <li>[2023] {n} times faster than C, where n = 128 \u2b50</li> <li>[2023] Faster hash maps, binary trees etc. through data layout modification \u2b50</li> <li>[2023] On Maximizing Your Rust Code\u2019s Performance \u2b50</li> <li>[2023] Software Performance and Class Layout \u2b50</li> <li>[2023] When Zig Outshines Rust - Memory Efficient Enum Arrays \u2b50</li> <li>[2022] Data-driven performance optimization with Rust and Miri</li> <li>[2022] How Rust 1.64 Became 10-20% Faster On Windows? \u2b50</li> <li>[2019] Performance Speed Limits</li> <li>[2012] Latency numbers every programmer should know \u2b50</li> </ul>"},{"location":"pensieve/program-optimization/#video","title":"Video","text":"<ul> <li>[2022] Profiling Code in Rust \u2b50</li> <li>[2022] \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0438\u0306 \u043f\u043e\u0438\u0441\u043a \u2b50</li> <li>[2021] Parameter Passing in C and C++ \u2b50</li> </ul>"},{"location":"pensieve/programming-assistance/","title":"Programming assistance","text":"<p>AI can be used for real-time code completion, chat, and automated test generation. These tools are typically integrated with editors and IDEs as plugins. They differ in functionality, quality, speed, and approach to privacy.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/programming-assistance/#examples","title":"Examples","text":"<ul> <li>Codeium</li> <li>GPT-Code-Clippy</li> <li>GitHub Copilot</li> <li>Tabnine</li> </ul>"},{"location":"pensieve/programming-idiom/","title":"Programming idiom","text":"<p>In computer programming, a programming idiom or code idiom is a group of code fragments sharing an equivalent semantic role, which recurs frequently across software projects often expressing a special feature of a recurring construct in one or more programming languages or libraries. Developers recognize programming idioms by associating and giving meaning (semantic role) to one or more syntactical expressions within code snippets (code fragments). The idiom can be seen as a concept underlying a pattern in code, which is represented in implementation by contiguous or scattered code fragments. These fragments are available in several programming languages, frameworks or even libraries. Generally speaking, a programming idiom\u2019s semantic role is a natural language expression of a simple task, algorithm, or data structure that is not a built-in feature in the programming language being used, or, conversely, the use of an unusual or notable feature that is built into a programming language.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/programming-idiom/#examples","title":"Examples","text":"<ul> <li>Resource acquisition is initialization (RAII)</li> </ul>"},{"location":"pensieve/programming-idiom/#resources","title":"Resources","text":"<ul> <li><code>programming-idioms.org</code></li> <li>[2022] RAII: Compile-Time Memory Management in C++ and Rust \u2b50</li> </ul>"},{"location":"pensieve/programming-language-theory/","title":"Programming language theory","text":"<p>Programming language theory (PLT) is a branch of computer science that deals with the design, implementation, analysis, characterization, and classification of formal languages known as programming languages. Programming language theory is closely related to other fields including mathematics, software engineering, and linguistics. There are a number of academic conferences and journals in the area.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/programming-language/","title":"Programming language","text":"<p>A programming language is any set of rules that converts strings, or graphical program elements in the case of visual programming languages, to various kinds of machine code output. Programming languages are one kind of computer language, and are used in computer programming to implement algorithms.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/programming-language/#examples","title":"Examples","text":"<ul> <li>Ante</li> <li>Assembly<ul> <li>WebAssembly</li> </ul> </li> <li>Buzz</li> <li>C++</li> <li>C3</li> <li>C</li> <li>Cyber</li> <li>Gleam</li> <li>Gluon</li> <li>Go</li> <li>Grain</li> <li>Hare</li> <li>JavaScript<ul> <li>TypeScript</li> </ul> </li> <li>Julia \u2b50</li> <li>Lobster</li> <li>Lua</li> <li>Nim</li> <li>Pony</li> <li>Python</li> <li>Racket</li> <li>Reason</li> <li>Roc</li> <li>Rust \u2b50</li> <li>Unison</li> <li>V</li> <li>Vale</li> <li>Wuffs</li> <li>Zig \u2b50</li> </ul>"},{"location":"pensieve/programming-language/#community","title":"Community","text":""},{"location":"pensieve/programming-language/#books","title":"Books","text":"<ul> <li>Crafting Interpreters \u2b50</li> </ul>"},{"location":"pensieve/programming-language/#sites","title":"Sites","text":"<ul> <li>Languish: Programming Language Trends \u2b50</li> <li>Programming Language and compiler Benchmarks \u2b50</li> </ul>"},{"location":"pensieve/programming-language/#resources","title":"Resources","text":""},{"location":"pensieve/programming-language/#text","title":"Text","text":"<ul> <li>An informal comparison of several programming languages</li> <li>[2020] Your Language Sucks, It Doesn\u2019t Matter</li> <li>[2015] A defense of boring languages</li> </ul>"},{"location":"pensieve/programming-language/#video","title":"Video","text":"<ul> <li>[2023] Top 5 Fastest Programming Languages: Rust, C++, Swift, Java, and 90 more compared!</li> </ul>"},{"location":"pensieve/programming-paradigm/","title":"Programming paradigm","text":"<p>Programming paradigms are a way to classify programming languages based on their features. Languages can be classified into multiple paradigms.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/psychology/","title":"Psychology","text":"<p>Psychology is the scientific study of mind and behavior. Psychology includes the study of conscious and unconscious phenomena, including feelings and thoughts. It is an academic discipline of immense scope, crossing the boundaries between the natural and social sciences. Psychologists seek an understanding of the emergent properties of brains, linking the discipline to neuroscience. As social scientists, psychologists aim to understand the behavior of individuals and groups. \u03a8 (psi), the first letter of the Greek word psyche from which the term psychology is derived, is commonly associated with the science.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/python/","title":"Python","text":"<p>Python is a high-level, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/python/#sites","title":"Sites","text":"<ul> <li>Python \u2b50</li> </ul>"},{"location":"pensieve/python/#interpreters-compilers-and-dsls","title":"Interpreters, compilers, and DSLs","text":"<ul> <li>CPython</li> <li>Codon</li> <li>Numba</li> <li>PyPy</li> <li>Taichi</li> </ul>"},{"location":"pensieve/python/#tools","title":"Tools","text":""},{"location":"pensieve/python/#linters","title":"Linters","text":"<ul> <li>Ruff \u2b50</li> </ul>"},{"location":"pensieve/python/#lsp","title":"LSP","text":"<ul> <li><code>pylyzer</code></li> </ul>"},{"location":"pensieve/python/#package-and-dependency-managers","title":"Package and dependency managers","text":"<ul> <li>Conda</li> <li>PDM \u2b50</li> <li><code>pip</code></li> <li>Pipenv</li> <li>Poetry</li> </ul>"},{"location":"pensieve/python/#resources","title":"Resources","text":"<ul> <li>[2022] Using Python\u2019s pip to Manage Your Projects\u2019 Dependencies \u2b50</li> </ul>"},{"location":"pensieve/recurse-center/","title":"Recurse Center","text":"<p>The Recurse Center (formerly known as Hacker School; also called RC) is an independent educational institution, that, until the COVID-19 pandemic, combined a retreat for computer programmers with a recruiting agency. The retreat is an intentional community, a self-directed academic environment for programmers of all levels to improve their skills in, without charge. There is no curriculum and no particular programming languages or paradigms are institutionally favored; instead, participants work on open-source projects of their own choice, alone or collaboratively, as they see best. The Center has been an active advocate for women in programming. Since 2020 all programs have been conducted online.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/recurse-center/#official","title":"Official","text":""},{"location":"pensieve/recurse-center/#sites","title":"Sites","text":"<ul> <li>Recurse Center \u2b50</li> </ul>"},{"location":"pensieve/recurse-center/#resources","title":"Resources","text":"<ul> <li>[2023] My Time At The Recurse Center \u2b50</li> <li>[2022] My Recurse Center \u201creturn statement\u201d</li> <li>[2022] return \u201creflections on a batch\u201d;</li> <li>[2020] On Showing Up To School In Your Underwear, or, My One Day at Recurse Center</li> <li>[2020] Recurse \u2b50</li> <li>[2020] Return Statement: reflections on Spring 2\u201820 and beyond</li> <li>[2017] How I spent my time at the Recurse Center</li> <li>[2015] The Recurse Center and the joy of learning</li> </ul>"},{"location":"pensieve/recursion/","title":"Recursion","text":"<p>In computer science, recursion is a method of solving a computational problem where the solution depends on solutions to smaller instances of the same problem. Recursion solves such recursive problems by using functions that call themselves from within their own code. The approach can be applied to many types of problems, and recursion is one of the central ideas of computer science.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/recursion/#resources","title":"Resources","text":"<ul> <li>[2022] Recursion Stinks \u2b50</li> </ul>"},{"location":"pensieve/regular-language/","title":"Regular language","text":"<p>In theoretical computer science and formal language theory, a regular language (also called a rational language) is a formal language that can be defined by a regular expression, in the strict sense in theoretical computer science (as opposed to many modern regular expressions engines, which are augmented with features that allow recognition of non-regular languages).</p>"},{"location":"pensieve/regular-language/#examples","title":"Examples","text":"<ul> <li>Pomsky</li> <li>regex \u2b50</li> </ul>"},{"location":"pensieve/regular-language/#community","title":"Community","text":""},{"location":"pensieve/regular-language/#sites","title":"Sites","text":"<ul> <li><code>regex101</code>: Build, test, and debug regex \u2b50</li> </ul>"},{"location":"pensieve/rendering/","title":"Rendering","text":"<p>Rendering or image synthesis is the process of generating a photorealistic or non-photorealistic image from a 2D or 3D model by means of a computer program. The resulting image is referred to as the render. Multiple models can be defined in a scene file containing objects in a strictly defined language or data structure. The scene file contains geometry, viewpoint, texture, lighting, and shading information describing the virtual scene. The data contained in the scene file is then passed to a rendering program to be processed and output to a digital image or raster graphics image file. The term \u201crendering\u201d is analogous to the concept of an artist\u2019s impression of a scene. The term \u201crendering\u201d is also used to describe the process of calculating effects in a video editing program to produce the final video output.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/rendering/#approaches","title":"Approaches","text":"<ul> <li>Physically based rendering</li> </ul>"},{"location":"pensieve/rendering/#books","title":"Books","text":"<ul> <li>Physically Based Rendering: From Theory to Implementation \u2b50</li> </ul>"},{"location":"pensieve/rendering/#3d-graphics-api","title":"3D Graphics API","text":"<ul> <li>OpenGL<ul> <li>TinyGL<ul> <li><code>tinygl-rs</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"pensieve/rust/","title":"Rust","text":"<p>Rust is a multi-paradigm, general-purpose programming language. Rust emphasizes performance, type safety, and concurrency. Rust enforces memory safety\u2014that is, that all references point to valid memory\u2014without requiring the use of a garbage collector or reference counting present in other memory-safe languages. To simultaneously enforce memory safety and prevent concurrent data races, Rust\u2019s borrow checker tracks the object lifetime and variable scope of all references in a program during compilation. Rust is popular for systems programming but also offers high-level features including functional programming constructs.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/rust/#official","title":"Official","text":""},{"location":"pensieve/rust/#sites","title":"Sites","text":"<ul> <li>Rust \u2b50</li> </ul>"},{"location":"pensieve/rust/#documentation","title":"Documentation","text":"<ul> <li>Rust Book \u2b50</li> <li>Rust By Example \u2b50</li> <li>Rust Compiler Error Index</li> <li>The Cargo Book \u2b50</li> <li>The Edition Guide</li> <li>The Rust Reference</li> <li>The Rust Standard Library \u2b50</li> <li>The Rust Unstable Book</li> <li>The Rustonomicon</li> <li>The <code>rustc</code> book</li> <li>The <code>rustdoc</code> book</li> </ul>"},{"location":"pensieve/rust/#core","title":"Core","text":"<ul> <li>Chalk: An implementation and definition of the Rust trait system using a PROLOG-like logic solver</li> <li>Polonius: Defines the Rust borrow checker</li> </ul>"},{"location":"pensieve/rust/#community","title":"Community","text":""},{"location":"pensieve/rust/#documentation_1","title":"Documentation","text":"<ul> <li>Rust Book experiment</li> </ul>"},{"location":"pensieve/rust/#blogs","title":"Blogs","text":"<ul> <li>Faster than Lime \u2b50</li> <li>Read Rust</li> <li>Sylvain Kerkour\u2019s blog \u2b50</li> </ul>"},{"location":"pensieve/rust/#books","title":"Books","text":"<ul> <li>Asynchronous Programming in Rust</li> <li>Black Hat Rust</li> <li>Code Like a Pro in Rust</li> <li>Command Line Applications in Rust</li> <li>Comprehensive Rust \u2b50</li> <li>High Assurance Rust</li> <li>Learning Rust With Entirely Too Many Linked Lists</li> <li>Programming Rust, 2nd Edition</li> <li>Refactoring to Rust</li> <li>Rust API Guidelines</li> <li>Rust Atomics and Locks</li> <li>Rust Cookbook \u2b50</li> <li>Rust Design Patterns</li> <li>Rust and WebAssembly</li> <li>Rust for Rustaceans</li> <li>Rust in Action</li> <li>The Embedded Rust Book</li> <li>The Rust Performance Book</li> <li>The Rust Programming Language, 2nd Edition</li> <li>The Rust Rand Book</li> <li>Zero To Production In Rust</li> </ul>"},{"location":"pensieve/rust/#courses","title":"Courses","text":"<ul> <li>Rust in Motion</li> <li>Rustlings</li> </ul>"},{"location":"pensieve/rust/#libraries","title":"Libraries","text":"<ul> <li><code>faer</code>: A collection of crates that implement low level linear algebra routines in pure Rust</li> <li>Kanal: Fastest sync and async channel that Rust deserves</li> <li><code>log</code>: A lightweight logging facade</li> <li><code>nom</code>: Rust parser combinator framework</li> <li>Serde: A framework for serializing and deserializing Rust data structures efficiently and generically \u2b50</li> <li>Tokio: An asynchronous runtime for the Rust programming language \u2b50</li> <li>Yew: A modern Rust framework for creating multi-threaded front-end web apps using WebAssembly</li> </ul>"},{"location":"pensieve/rust/#news","title":"News","text":"<ul> <li>Awesome Rust Weekly</li> <li>Inside Rust Blog</li> <li>Rust Blog \u2b50</li> <li>This Week in Rust \u2b50</li> </ul>"},{"location":"pensieve/rust/#podcasts","title":"Podcasts","text":"<ul> <li>The Rustacean Station Podcast \u2b50</li> </ul>"},{"location":"pensieve/rust/#sites_1","title":"Sites","text":"<ul> <li>Are we (I)DE yet?</li> <li>Are we game yet</li> <li>Are we learning yet?</li> <li>Are we stack-efficient yet?</li> <li>Are we web yet?</li> <li>Blessed: An unofficial guide to the Rust ecosystem</li> <li>Design Patterns in Rust \u2b50</li> <li>Rust Academy</li> <li>Rust Language Cheat Sheet \u2b50</li> <li>Rust Magazine</li> <li>Rust Quiz</li> <li>RustRepo</li> <li>School of Rust</li> </ul>"},{"location":"pensieve/rust/#tools","title":"Tools","text":"<ul> <li><code>cargo-c</code>: Build and install C-compatible libraries</li> <li><code>cargo-careful</code>: Run your Rust code with extra careful debug checking</li> <li>Prusti: A static verifier for Rust, based on the Viper verification infrastructure</li> <li>Rudra: Rust Memory Safety &amp; Undefined Behavior Detection</li> </ul>"},{"location":"pensieve/rust/#resources","title":"Resources","text":""},{"location":"pensieve/rust/#text","title":"Text","text":"<ul> <li>A curated list of Rust code and resources \u2b50</li> <li>Awesome Rust Books \u2b50</li> <li>How to minimize Rust binary size \u2b50</li> <li>Idiomatic Rust \u2b50</li> <li>Learn X in Y minutes where X = Rust \u2b50</li> <li>Not-Yet-Awesome Rust</li> <li>[2023] Is coding in Rust as bad as in C++? \u2b50</li> <li>[2023] Rust: Not Just Zoom Zoom Fast</li> <li>[2022] 34 Must Know Terms for Embedded Rust Newbies</li> <li>[2022] 6 things you can do with the Cow in Rust \u2b50</li> <li>[2022] A Better Way to Borrow in Rust: Stack Tokens</li> <li>[2022] A very small Rust binary indeed</li> <li>[2022] Basics of asynchronous Rust with Tokio</li> <li>[2022] Comparing Rust supply chain safety tools</li> <li>[2022] Hard Mode Rust</li> <li>[2022] Practical Parsing in Rust with <code>nom</code></li> <li>[2022] Rewriting the Modern Web in Rust</li> <li>[2022] Ten challenges for Rust</li> <li>[2022] What are Rust\u2019s biggest weaknesses?</li> <li>[2022] Why Rust?</li> <li>[2021] From Python into Rust \u2b50</li> <li>[2020] Revisiting a \u2018smaller Rust\u2019</li> <li>[2020] Why Discord is switching from Go to Rust \u2b50</li> <li>[2019] Learn Rust the Dangerous Way</li> <li>[2019] Notes on a smaller Rust</li> <li>[2019] Thoughts on Rust after six months</li> <li>[2016] Elegant Library APIs in Rust</li> </ul>"},{"location":"pensieve/rust/#video","title":"Video","text":"<ul> <li>No Boilerplate \u2b50</li> <li>[2022] Boxes, Heaps, and Stacks</li> </ul>"},{"location":"pensieve/samba/","title":"Samba","text":"<p>Samba is a free software re-implementation of the SMB networking protocol, and was originally developed by Andrew Tridgell. Samba provides file and print services for various Microsoft Windows clients and can integrate with a Microsoft Windows Server domain, either as a Domain Controller (DC) or as a domain member. As of version 4, it supports Active Directory and Microsoft Windows NT domains.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/sandbox/","title":"Sandbox (computer security)","text":"<p>In computer security, a sandbox is a security mechanism for separating running programs, usually in an effort to mitigate system failures and/or software vulnerabilities from spreading. The isolation metaphor is taken from the idea of children who do not play well together, so each is given their own sandbox to play in alone. It is often used to execute untested or untrusted programs or code, possibly from unverified or untrusted third parties, suppliers, users or websites, without risking harm to the host machine or operating system. A sandbox typically provides a tightly controlled set of resources for guest programs to run in, such as storage and memory scratch space. Network access, the ability to inspect the host system, or read from input devices are usually disallowed or heavily restricted.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/sandbox/#solutions","title":"Solutions","text":"<ul> <li>AppArmor</li> <li>Firejail</li> <li>Flatpak \u2b50</li> </ul>"},{"location":"pensieve/sandbox/#resources","title":"Resources","text":"<ul> <li>[2022] How to debug a firejail sandbox</li> </ul>"},{"location":"pensieve/search-engine/","title":"Search engine","text":"<p>A search engine is an information retrieval system designed to help find information stored on a computer system. The search results are usually presented in a list and are commonly called hits. Search engines help to minimize the time required to find information and the amount of information which must be consulted, akin to other techniques for managing information overload.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/search-engine/#examples","title":"Examples","text":"<ul> <li>Edgesearch: Serverless full-text search with Cloudflare Workers, WebAssembly, and Roaring Bitmaps</li> <li>Fuse.js: A powerful, lightweight fuzzy-search library, with zero dependencies</li> <li>Liqe: Lightweight and performant Lucene-like parser, serializer and search engine</li> <li>Lunr.js: A small, full-text search library for use in the browser.</li> <li>Lyra: Fast, in-memory, typo-tolerant, full-text search engine written in TypeScript</li> <li>Meilisearch: An open-source, lightning-fast, and hyper-relevant search engine</li> <li>Quickwit: An open-source, cloud-native, distributed search engine for log management and analytics</li> <li>Semantic Code Search: Search your codebase with natural language</li> <li>Tantivy: A full-text search engine library inspired by Apache Lucene and written in Rust</li> </ul>"},{"location":"pensieve/social-news-website/","title":"Social news website","text":"<p>A social news website is a website that features user-posted stories. Such stories are ranked based on popularity, as voted on by other users of the site or by website administrators. Users typically comment online on the news posts and these comments may also be ranked in popularity. Since their emergence with the birth of Web 2.0, social news sites have been used to link many types of information, including news, humor, support, and discussion. All such websites allow the users to submit content and each site differs in how the content is moderated. On the Slashdot and Fark websites, administrators decide which articles are selected for the front page. On Reddit and Digg, the articles that get the most votes from the community of users will make it to the front page. Many social news websites also feature an online comment system, where users discuss the issues raised in an article. Some of these sites have also applied their voting system to the comments, so that the most popular comments are displayed first. Some social news websites also have a social networking service, in that users can set up a user profile and follow other users\u2019 online activity on the website.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/social-news-website/#examples","title":"Examples","text":"<ul> <li>Hacker News \u2b50</li> <li>Lobsters \u2b50</li> <li>Reddit</li> </ul>"},{"location":"pensieve/social-psychology/","title":"Social psychology","text":"<p>Social psychology is the scientific study of how thoughts, feelings, and behaviors are influenced by the real or imagined presence of other people or by social norms. Social psychologists typically explain human behavior as a result of the relationship between mental states and social situations, studying the social conditions under which thoughts, feelings, and behaviors occur, and how these variables influence social interactions.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/social-science/","title":"Social science","text":"<p>Social science is one of the branches of science, devoted to the study of societies and the relationships among individuals within those societies. The term was formerly used to refer to the field of sociology, the original \u201cscience of society\u201d, established in the 19th century. In addition to sociology, it now encompasses a wide array of academic disciplines, including anthropology, archaeology, economics, human geography, linguistics, management science, communication science, political science and psychology.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/software-architecture/","title":"Software architecture","text":"<p>Software architecture is the set of structures needed to reason about a software system and the discipline of creating such structures and systems. Each structure comprises software elements, relations among them, and properties of both elements and relations.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/software-architecture/#books","title":"Books","text":"<ul> <li>Ted Kaminski\u2019s book</li> </ul>"},{"location":"pensieve/software-architecture/#modelling-languages","title":"Modelling languages","text":"<ul> <li>C4 model<ul> <li>Official site</li> </ul> </li> <li>Unified Modeling Language</li> </ul>"},{"location":"pensieve/software-development/","title":"Software development","text":"<p>Software development is the process of conceiving, specifying, designing, programming, documenting, testing, and bug fixing involved in creating and maintaining applications, frameworks, or other software components. Software development involves writing and maintaining the source code, but in a broader sense, it includes all processes from the conception of the desired software through to the final manifestation of the software, typically in a planned and structured process. Software development also includes research, new development, prototyping, modification, reuse, re-engineering, maintenance, or any other activities that result in software products.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/software-development/#community","title":"Community","text":""},{"location":"pensieve/software-development/#blogs","title":"Blogs","text":"<ul> <li>Deeply Nested \u2b50</li> </ul>"},{"location":"pensieve/software-development/#books","title":"Books","text":"<ul> <li>[2021] The Essence of Software</li> <li>[2020] Software Engineering at Google: Lessons Learned from Programming Over Time</li> <li>[2020] The Coding Career Handbook</li> <li>[2018] A Philosophy of Software Design</li> <li>[2017] Developer Hegemony: The Future of Labor</li> <li>[2015] Designing Data-Intensive Applications</li> <li>[2011] The Clean Coder: A Code of Conduct for Professional Programmers</li> <li>[2007] Clean Code: A Handbook of Agile Software Craftsmanship</li> <li>[1993] Code Complete</li> </ul>"},{"location":"pensieve/software-development/#social-networks","title":"Social networks","text":"<ul> <li>GitHub</li> <li>Showwcase</li> </ul>"},{"location":"pensieve/software-development/#showcase","title":"Showcase","text":"<ul> <li>CodersRank</li> </ul>"},{"location":"pensieve/software-development/#resources","title":"Resources","text":""},{"location":"pensieve/software-development/#text","title":"Text","text":"<ul> <li>Awesome Software and Architectural Design Patterns \u2b50</li> <li>Technology Radar \u2b50</li> <li>[2023] Rules of Thumb for Software Development Estimations \u2b50</li> <li>[2023] Things they didn\u2019t teach you about Software Engineering \u2b50</li> <li>[2022] Software Development is very subjective</li> <li>[2021] 20 Things I\u2019ve Learned in my 20 Years as a Software Engineer \u2b50</li> <li>[2021] Reflections on a decade of coding \u2b50</li> <li>[2000] The Joel Test: 12 Steps to Better Code</li> </ul>"},{"location":"pensieve/software-development/#video","title":"Video","text":"<ul> <li>Internet Made Coder</li> <li>ThePrimeagen \u2b50</li> <li>[2022] Coping strategies for the serial project hoarder \u2b50</li> <li>[2022] How I became a software engineer without a CS degree \u2b50</li> <li>[2018] Build impossible programs \u2b50</li> <li>[2017] So you want to be a wizard \u2b50</li> </ul>"},{"location":"pensieve/software-testing/","title":"Software testing","text":"<p>Software testing is the act of examining the artifacts and the behavior of the software under test by validation and verification. Software testing can also provide an objective, independent view of the software to allow the business to appreciate and understand the risks of software implementation.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/software-testing/#resources","title":"Resources","text":"<ul> <li>[2021] How to Test</li> </ul>"},{"location":"pensieve/software/","title":"Software","text":"<p>Software is a set of computer programs and associated documentation and data. This is in contrast to hardware, from which the system is built and which actually performs the work.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/soulseek/","title":"Soulseek","text":"<p>Soulseek is a peer-to-peer (P2P) file-sharing network and application. The term Soulseek might refer to (1) one of the two networks, or (2) one of the three official user client interfaces. Soulseek is used mostly to exchange music, although users are able to share a variety of files. Soulseek was created by Nir Arbel, an Israeli programmer from Safed.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/soulseek/#clients","title":"Clients","text":"<ul> <li>Nicotine+ \u2b50</li> </ul>"},{"location":"pensieve/source/","title":"Source","text":"<p>Source is a 3D game engine developed by Valve. It debuted as the successor to GoldSrc with Half-Life: Source in June 2004, followed by Counter-Strike: Source and Half-Life 2 later that year. Source does not have a concise version numbering scheme; instead, it is designed in constant incremental updates. The engine was succeeded by Source 2.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/spaced-repetition/","title":"Spaced repetition","text":"<p>Spaced repetition is an evidence-based learning technique that is usually performed with flashcards. Newly introduced and more difficult flashcards are shown more frequently, while older and less difficult flashcards are shown less frequently in order to exploit the psychological spacing effect. The use of spaced repetition has been proven to increase the rate of learning.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/speech-recognition/","title":"Speech recognition","text":"<p>Speech recognition is an interdisciplinary subfield of computer science and computational linguistics that develops methodologies and technologies that enable the recognition and translation of spoken language into text by computers with the main benefit of searchability. It is also known as automatic speech recognition (ASR), computer speech recognition or speech to text (STT). It incorporates knowledge and research in the computer science, linguistics and computer engineering fields. The reverse process is speech synthesis.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/speech-recognition/#examples","title":"Examples","text":"<ul> <li>ocotillo: Performant and accurate speech recognition built on Pytorch</li> <li>Project Shasta: AI-powered audio recording and editing, all in the web</li> <li>SpeechBrain: A PyTorch-based Speech Toolkit</li> <li>Whisper: A general-purpose speech recognition model \u2b50<ul> <li>Faster Whisper: Faster Whisper transcription with CTranslate2</li> <li><code>whisper.cpp</code>: Port of OpenAI\u2019s Whisper model in C/C++</li> <li>WhisperX: Timestamp-Accurate Automatic Speech Recognition</li> </ul> </li> </ul>"},{"location":"pensieve/speech-recognition/#resources","title":"Resources","text":""},{"location":"pensieve/speech-recognition/#video","title":"Video","text":"<ul> <li>[2022] Open AI Whisper - Open Source Translation and Transcription</li> </ul>"},{"location":"pensieve/speech-synthesis/","title":"Speech synthesis","text":"<p>Speech synthesis is the artificial production of human speech. A computer system used for this purpose is called a speech computer or speech synthesizer, and can be implemented in software or hardware products. A text-to-speech (TTS) system converts normal language text into speech; other systems render symbolic linguistic representations like phonetic transcriptions into speech. The reverse process is speech recognition.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/speech-synthesis/#examples","title":"Examples","text":""},{"location":"pensieve/speech-synthesis/#using-ai","title":"Using AI","text":"<ul> <li>Coqui: A startup providing open speech tech for everyone \u2b50</li> <li>ElevenLabs: Explore the most advanced text to speech and voice cloning software ever \u2b50</li> <li>FakeYou: Use FakeYou deep fake tech to say stuff with your favorite characters \u2b50</li> <li>Mimic 3: A fast local neural text to speech engine for Mycroft \u2b50</li> <li>Sonantic: Deliver compelling, lifelike performances with fully expressive AI-generated voices</li> <li>SpeechBrain: A PyTorch-based Speech Toolkit</li> <li>TorToiSe: A multi-voice TTS system trained with an emphasis on quality \u2b50</li> <li>[2020] Glow-TTS: A Generative Flow for Text-to-Speech via Monotonic Alignment Search</li> <li>[2020] HiFi-GAN: Generative Adversarial Networks for Efficient and High Fidelity Speech Synthesis</li> <li>[2020] Tacotron: A TensorFlow implementation of Google\u2019s Tacotron speech synthesis with pre-trained model<ul> <li>[2020] Mimic 2: Text to Speech engine based on the Tacotron architecture</li> </ul> </li> <li>[2020] Tacotron 2: PyTorch implementation with faster-than-realtime inference</li> <li>[2019] MelGAN: Generative Adversarial Networks for Conditional Waveform Synthesis<ul> <li>[2020] Multi-band MelGAN: Faster Waveform Generation for High-Quality Text-to-Speech</li> </ul> </li> </ul>"},{"location":"pensieve/speech-synthesis/#not-using-ai","title":"Not using AI","text":"<ul> <li>eSpeak NG: An open source speech synthesizer</li> <li>Festival: Offers a general framework for building speech synthesis systems<ul> <li>Flite: A small fast portable speech synthesis system<ul> <li>Mimic 1: Mycroft\u2019s TTS engine, based on CMU\u2019s Flite (Festival Lite)</li> </ul> </li> </ul> </li> </ul>"},{"location":"pensieve/speech-synthesis/#resources","title":"Resources","text":"<ul> <li>[2023] Ask HN: Are there any good open source text-to-speech tools? \u2b50</li> </ul>"},{"location":"pensieve/steam/","title":"Steam","text":"<p>Steam is a video game digital distribution service and storefront by Valve. It was launched as a software client in September 2003 as a way for Valve to provide automatic updates for their games, and expanded to distributing and offering third-party game publishers\u2019 titles in late 2005. Steam offers various features, like digital rights management (DRM), game server matchmaking, anti-cheat measures, social networking and game streaming services. It provides the user with automatic game updating, saved game cloud synchronization, and community features such as friends messaging, in-game chat and a community market.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/steam/#official","title":"Official","text":""},{"location":"pensieve/steam/#sites","title":"Sites","text":"<ul> <li>Steam \u2b50</li> </ul>"},{"location":"pensieve/steam/#runtimes","title":"Runtimes","text":"<ul> <li>Proton</li> </ul>"},{"location":"pensieve/steam/#community","title":"Community","text":""},{"location":"pensieve/steam/#sites_1","title":"Sites","text":"<ul> <li>SteamDB: Database of everything on Steam \u2b50</li> <li>ProtonDB: Crowdsourced Linux and Steam Deck game compatibility reports \u2b50</li> </ul>"},{"location":"pensieve/steam/#runtimes_1","title":"Runtimes","text":"<ul> <li>Proton-GE \u2b50</li> </ul>"},{"location":"pensieve/stoicism/","title":"Stoicism","text":"<p>Stoicism is a school of Hellenistic philosophy founded by Zeno of Citium in Athens in the early 3rd century BCE. It is a philosophy of personal virtue ethics informed by its system of logic and its views on the natural world, asserting that the practice of virtue is both necessary and sufficient to achieve eudaimonia (happiness, lit.\u2009\u2018good spiritedness\u2019): one flourishes by living an ethical life. The Stoics identified the path to eudaimonia with a life spent practicing the cardinal virtues and living in accordance with nature.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/stoicism/#community","title":"Community","text":""},{"location":"pensieve/stoicism/#books","title":"Books","text":"<ul> <li>[2017] The Daily Stoic Journal: 366 Days of Writing and Reflection on the Art of Living</li> <li>[2016] The Daily Stoic: 366 Meditations on Wisdom, Perseverance, and the Art of Living</li> <li>[2014] The Obstacle Is the Way: The Timeless Art of Turning Trials into Triumph</li> <li>[180] Meditations<ul> <li>Meditations (Penguin Classics)</li> <li>Meditations: A New Translation \u2b50</li> <li>Meditations: The Annotated Edition</li> <li>Meditations: With Selected Correspondence</li> <li>The Meditations: An Emperor\u2019s Guide to Mastery</li> </ul> </li> <li>[65] Letters from a Stoic</li> <li>[49] On the Shortness of Life: Life Is Long if You Know How to Use It</li> <li>[2] Discourses and Selected Writings</li> </ul>"},{"location":"pensieve/stoicism/#forums","title":"Forums","text":"<ul> <li><code>/r/Stoicism</code> \u2b50</li> </ul>"},{"location":"pensieve/stoicism/#sites","title":"Sites","text":"<ul> <li>Daily Stoic</li> </ul>"},{"location":"pensieve/stoicism/#resources","title":"Resources","text":""},{"location":"pensieve/stoicism/#text","title":"Text","text":"<ul> <li>\u201cMemento Mori\u201d: The Reminder We All Desperately Need</li> <li>28 Books On Stoicism: The (Hopefully) Ultimate Reading List</li> <li>The Stoic Reading List: 3 Must-Read Books To Get You Started</li> <li>What Is Stoicism? A Definition &amp; 9 Stoic Exercises To Get You Started \u2b50</li> <li>[2022] Life Is Not Short \u2b50</li> </ul>"},{"location":"pensieve/stoicism/#video","title":"Video","text":"<ul> <li>Daily Stoic</li> </ul>"},{"location":"pensieve/subtyping/","title":"Subtyping","text":"<p>In programming language theory, subtyping (also subtype polymorphism or inclusion polymorphism) is a form of type polymorphism in which a subtype is a datatype that is related to another datatype (the supertype) by some notion of substitutability, meaning that program elements, typically subroutines or functions, written to operate on elements of the supertype can also operate on elements of the subtype.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/system-software/","title":"System software","text":"<p>System software is software designed to provide a platform for other software. Examples of system software include operating systems (OS) like macOS, Linux, Android and Microsoft Windows, computational science software, game engines, search engines, industrial automation, and software as a service applications.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/systems-design/","title":"Systems design","text":"<p>Systems design interfaces, and data for an electronic control system to satisfy specified requirements. System design could be seen as the application of system theory to product development. There is some overlap with the disciplines of system analysis, system architecture and system engineering.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/systems-design/#community","title":"Community","text":""},{"location":"pensieve/systems-design/#books","title":"Books","text":"<ul> <li>Grokking the System Design Interview</li> </ul>"},{"location":"pensieve/systems-design/#resources","title":"Resources","text":"<ul> <li>The System Design Primer</li> </ul>"},{"location":"pensieve/terminal-emulators/","title":"Terminal emulators","text":"<p>A terminal emulator, or terminal application, is a computer program that emulates a video terminal within some other display architecture. Though typically synonymous with a shell or text terminal, the term terminal covers all remote terminals, including graphical interfaces. A terminal emulator inside a graphical user interface is often called a terminal window.</p>"},{"location":"pensieve/terminal-emulators/#examples","title":"Examples","text":"<ul> <li>Alacritty</li> <li>Console</li> <li>Kitty</li> <li>WezTerm</li> </ul>"},{"location":"pensieve/terminal/","title":"Terminal","text":"<p>A text terminal, or often just terminal (sometimes text console) is a serial computer interface for text entry and display. Information is presented as an array of pre-selected formed characters.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/text-editors/","title":"Text editors","text":"<p>A text editor is a type of computer program that edits plain text. Text editors are provided with operating systems and software development packages, and can be used to change files such as configuration files, documentation files and programming language source code.</p>"},{"location":"pensieve/text-editors/#examples","title":"Examples","text":"<ul> <li>GNU Emacs \u2b50</li> <li>Helix \u2b50</li> <li>Kakoune</li> <li>Lite<ul> <li>Lite XL</li> </ul> </li> <li>Neovim \u2b50</li> <li>Pulsar</li> <li>Visual Studio Code<ul> <li>VSCodium</li> </ul> </li> <li>Xi Editor</li> </ul>"},{"location":"pensieve/the-arts/","title":"The arts","text":"<p>The arts are a very wide range of human practices of creative expression, storytelling and cultural participation. They encompass multiple diverse and plural modes of thinking, doing and being, in an extremely broad range of media. Both highly dynamic and a characteristically constant feature of human life, they have developed into innovative, stylized and sometimes intricate forms. This is often achieved through sustained and deliberate study, training and/or theorizing within a particular tradition, across generations and even between civilizations. The arts are a vehicle through which human beings cultivate distinct social, cultural and individual identities, while transmitting values, impressions, judgments, ideas, visions, spiritual meanings, patterns of life and experiences across time and space.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/time-management/","title":"Time management","text":"<p>Time management is the process of planning and exercising conscious control of time spent on specific activities, especially to increase effectiveness, efficiency, and productivity. It involves of various demands upon a person relating to work, social life, family, hobbies, personal interests, and commitments with the finite nature of time. Using time effectively gives the person \u201cchoice\u201d on spending or managing activities at their own time and expediency. Time management may be aided by a range of skills, tools, and techniques used to manage time when accomplishing specific tasks, projects, and goals complying with a due date. Initially, time management referred to just business or work activities, but eventually, the term broadened to include personal activities as well. A time management system is a designed combination of processes, tools, techniques, and methods. Time management is usually a necessity in any project management as it determines the project completion time and scope.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/time-management/#books","title":"Books","text":"<ul> <li>[2021] Four Thousand Weeks: Time Management for Mortals</li> <li>[2001] Getting Things Done: The Art of Stress-Free Productivity</li> </ul>"},{"location":"pensieve/time-management/#resources","title":"Resources","text":"<ul> <li>Four Thousand Weeks \u2b50</li> </ul>"},{"location":"pensieve/tools/","title":"Tools","text":"<p>Small auxiliary programs.</p>"},{"location":"pensieve/tools/#examples","title":"Examples","text":"<ul> <li><code>asciinema</code>: Record and share your terminal sessions, the simple way \u2b50</li> <li><code>hyperfine</code>: A command-line benchmarking tool \u2b50</li> <li><code>lychee</code>: Fast, async, stream-based link checker written in Rust. Finds broken URLs and mail addresses inside Markdown, HTML, reStructuredText, websites and more! \u2b50</li> <li><code>miniserve</code>: For when you really just want to serve some files over HTTP right now! \u2b50</li> <li>VHS: Your CLI home video recorder \u2b50</li> </ul>"},{"location":"pensieve/tor/","title":"Tor","text":"<p>Tor, short for The Onion Router, is free and open-source software for enabling anonymous communication. It directs Internet traffic through a free, worldwide, volunteer overlay network, consisting of more than seven thousand relays, to conceal a user\u2019s location and usage from anyone performing network surveillance or traffic analysis. Using Tor makes it more difficult to trace a user\u2019s Internet activity. Tor\u2019s intended use is to protect the personal privacy of its users, as well as their freedom and ability to communicate confidentially through IP address anonymity using Tor exit nodes.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/tor/#sites","title":"Sites","text":"<ul> <li>Tor Project \u2b50</li> <li>Snowflake: Allows you to donate bandwidth to the Tor Project by operating a \u201cSnowflake proxy\u201d within your browser</li> </ul>"},{"location":"pensieve/tor/#documentation","title":"Documentation","text":"<ul> <li>Tor Browser User Manual</li> </ul>"},{"location":"pensieve/tor/#network","title":"Network","text":""},{"location":"pensieve/tor/#links-to-hidden-services","title":"Links to hidden services","text":"<ul> <li>dark.fail (Onion)</li> <li>tor.taxi (Onion)</li> </ul>"},{"location":"pensieve/tor/#information","title":"Information","text":"<ul> <li>Darknet Bible</li> </ul>"},{"location":"pensieve/tor/#search-engines","title":"Search engines","text":"<ul> <li>Phobos</li> </ul>"},{"location":"pensieve/tor/#implementations","title":"Implementations","text":"<ul> <li>Brave</li> <li>Onion Browser</li> <li>Tor Browser \u2b50</li> </ul>"},{"location":"pensieve/tor/#tools","title":"Tools","text":"<ul> <li>OnionShare: An open source tool that lets you securely and anonymously share files, host websites, and chat with friends using the Tor network</li> <li>Orbot: Tor VPN for Smartphones</li> </ul>"},{"location":"pensieve/tor/#resources","title":"Resources","text":""},{"location":"pensieve/tor/#sites_1","title":"Sites","text":"<ul> <li>Privacy Guides: Tor Network</li> <li>Privacy Guides: Tor Overview</li> </ul>"},{"location":"pensieve/tor/#video","title":"Video","text":"<ul> <li>[2022] How To Access The Dark Web (Using Tor)</li> <li>[2017] How TOR Works</li> <li>[2017] TOR Hidden Services</li> </ul>"},{"location":"pensieve/trademark/","title":"Trademark","text":"<p>A trademark (also written trade mark or trade-mark) is a type of intellectual property consisting of a recognizable sign, design, or expression that identifies products or services from a particular source and distinguishes them from others. The trademark owner can be an individual, business organization, or any legal entity. A trademark may be located on a package, a label, a voucher, or on the product itself. Trademarks used to identify services are sometimes called service marks.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/trademark/#community","title":"Community","text":""},{"location":"pensieve/trademark/#sites","title":"Sites","text":"<ul> <li>Squadhelp<ul> <li>Trademark Search</li> </ul> </li> </ul>"},{"location":"pensieve/typescript/","title":"TypeScript","text":"<p>TypeScript is a free and open source programming language developed and maintained by Microsoft. It is a strict syntactical superset of JavaScript and adds optional static typing to the language. It is designed for the development of large applications and transpiles to JavaScript. As it is a superset of JavaScript, existing JavaScript programs are also valid TypeScript programs.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/typescript/#official","title":"Official","text":""},{"location":"pensieve/typescript/#sites","title":"Sites","text":"<ul> <li>TypeScript \u2b50</li> </ul>"},{"location":"pensieve/typescript/#documentation","title":"Documentation","text":"<ul> <li>TypeScript Documentation \u2b50</li> </ul>"},{"location":"pensieve/typescript/#community","title":"Community","text":""},{"location":"pensieve/typescript/#exercises","title":"Exercises","text":"<ul> <li><code>type-challenges/type-challenges</code><ul> <li><code>ghaiklor/type-challenges-solutions</code></li> </ul> </li> </ul>"},{"location":"pensieve/typescript/#courses","title":"Courses","text":"<ul> <li>Type-level TypeScript</li> </ul>"},{"location":"pensieve/typescript/#resources","title":"Resources","text":"<ul> <li>Algorithms and data structures in TypeScript: string tokenizer, rate limiter</li> </ul>"},{"location":"pensieve/typesetting/","title":"Typesetting","text":"<p>Typesetting is the composition of text by means of arranging physical type (or sort) in mechanical systems or glyphs in digital systems representing characters (letters and other symbols). Stored types are retrieved and ordered according to a language\u2019s orthography for visual display. Typesetting requires one or more fonts (which are widely but erroneously confused with and substituted for typefaces). One significant effect of typesetting was that authorship of works could be spotted more easily, making it difficult for copiers who have not gained permission.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/typesetting/#typesetting-systems","title":"Typesetting systems","text":"<ul> <li>SILE</li> <li>TeX<ul> <li>LaTeX</li> <li>XeTeX \u2b50</li> </ul> </li> <li>Typst</li> </ul>"},{"location":"pensieve/typesetting/#resources","title":"Resources","text":"<ul> <li>[2022] Fast Typesetting with Incremental Compilation</li> </ul>"},{"location":"pensieve/typography/","title":"Typography","text":"<p>Typography is the art and technique of arranging type to make written language legible, readable and appealing when displayed. The arrangement of type involves selecting typefaces, point sizes, line lengths, line-spacing (leading), and letter-spacing (tracking), as well as adjusting the space between pairs of letters (kerning). The term typography is also applied to the style, arrangement, and appearance of the letters, numbers, and symbols created by the process. Type design is a closely related craft, sometimes considered part of typography; most typographers do not design typefaces, and some type designers do not consider themselves typographers. Typography also may be used as an ornamental and decorative device, unrelated to the communication of information.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/user-commands/","title":"User commands","text":"<p>Programs supplied by the GNU C library.</p>"},{"location":"pensieve/user-commands/#documentation","title":"Documentation","text":"<ul> <li>Linux manual pages: section 1</li> </ul>"},{"location":"pensieve/vale/","title":"Vale","text":"<p>Vale is a fast, safe, and easy programming language.</p>"},{"location":"pensieve/vale/#sites","title":"Sites","text":"<ul> <li>Vale \u2b50</li> </ul>"},{"location":"pensieve/version-control/","title":"Version control","text":"<p>In software engineering, version control (also known as revision control, source control, or source code management) is a class of systems responsible for managing changes to computer programs, documents, large web sites, or other collections of information. Version control is a component of software configuration management.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/version-control/#examples","title":"Examples","text":"<ul> <li>Darcs<ul> <li>Pijul</li> </ul> </li> <li>Git \u2b50<ul> <li>Gitless: A simple version control system built on top of Git</li> <li>Jujutsu: A Git-compatible DVCS that is both simple and powerful</li> <li>Sapling: A Scalable, User-Friendly Source Control System</li> </ul> </li> <li>Mercurial</li> </ul>"},{"location":"pensieve/version-control/#community","title":"Community","text":""},{"location":"pensieve/version-control/#sites","title":"Sites","text":"<ul> <li>Semantic Versioning \u2b50</li> </ul>"},{"location":"pensieve/video-game/","title":"Video game","text":"<p>A video game or computer game is an electronic game that involves interaction with a user interface or input device (such as a joystick, controller, keyboard, or motion sensing device) to generate visual feedback from a display device, most commonly shown in a video format on a television set, computer monitor, flat-panel display or touchscreen on handheld devices, or a virtual reality headset. Most modern video games are audiovisual, with audio complement delivered through speakers or headphones, and sometimes also with other types of sensory feedback (e.g., haptic technology that provides tactile sensations), and some video games also allow microphone and webcam inputs for in-game chatting and livestreaming.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/virtual-private-network/","title":"Virtual private network","text":"<p>A virtual private network (VPN) extends a private network across a public network and enables users to send and receive data across shared or public networks as if their computing devices were directly connected to the private network. The benefits of a VPN include increases in functionality, security, and management of the private network. It provides access to resources that are inaccessible on the public network and is typically used for remote workers. Encryption is common, although not an inherent part of a VPN connection.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/virtual-private-network/#protocols","title":"Protocols","text":"<ul> <li>WireGuard \u2b50</li> </ul>"},{"location":"pensieve/virtual-private-network/#services","title":"Services","text":"<ul> <li>Mullvad \u2b50</li> </ul>"},{"location":"pensieve/virtual-private-network/#related","title":"Related","text":"<ul> <li>Safing Privacy Network</li> </ul>"},{"location":"pensieve/virtual-private-network/#resources","title":"Resources","text":""},{"location":"pensieve/virtual-private-network/#text","title":"Text","text":"<ul> <li>Privacy Guides: VPN Overview \u2b50</li> <li>Privacy Guides: VPN Services \u2b50</li> </ul>"},{"location":"pensieve/virtual-private-network/#video","title":"Video","text":"<ul> <li>[2022] Dispelling Myths of VPN Alternatives w/ Safing!</li> </ul>"},{"location":"pensieve/virtualization/","title":"Virtualization","text":"<p>In computing, virtualization or virtualisation (sometimes abbreviated v12n, a numeronym) is the act of creating a virtual (rather than actual) version of something at the same abstraction level, including virtual computer hardware platforms, storage devices, and computer network resources.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/visual-arts/","title":"Visual arts","text":"<p>The visual arts are art forms such as painting, drawing, printmaking, sculpture, ceramics, photography, video, filmmaking, design, crafts and architecture. Many artistic disciplines such as performing arts, conceptual art, and textile arts also involve aspects of visual arts as well as arts of other types. Also included within the visual arts are the applied arts such as industrial design, graphic design, fashion design, interior design and decorative art.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/vtuber/","title":"VTuber","text":"<p>A VTuber, or virtual YouTuber, is an online entertainer who uses a virtual avatar generated using computer graphics. Real-time motion capture software or technology are often\u2014but not always\u2014used to capture movement. The digital trend originated in Japan in the mid-2010s, and has become an international online phenomenon in the early 2020s. A majority of VTubers are English and Japanese-speaking YouTubers or live streamers who use avatar designs. By 2020, there were more than 10,000 active VTubers. Although the term is an allusion to the video platform YouTube, they also use websites such as Niconico, Twitch, Facebook, Twitter, and Bilibili.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/vtuber/#resources","title":"Resources","text":""},{"location":"pensieve/vtuber/#text","title":"Text","text":"<ul> <li>Best VTuber software</li> <li>Runa\u2019s VTuber References \u2b50</li> <li>VTuber Resources &amp; Commissions \u2b50</li> <li>[2022] How I VTuber</li> <li>[2022] VTubing on Linux</li> </ul>"},{"location":"pensieve/vtuber/#video","title":"Video","text":"<ul> <li>[2021] How to be a VTuber - PNG, 3D or 2D VTuber? Costs, VTubing Programs, FREE Assets, and Tips! \u2b50</li> </ul>"},{"location":"pensieve/wallpaper/","title":"Wallpaper","text":"<p>A wallpaper or background (also known as a screensaver, desktop background, desktop picture or desktop image on computers) is a digital image (photo, drawing etc.) used as a decorative background of a graphical user interface on the screen of a computer, smartphone or other electronic device. On a computer, wallpapers are generally used on the desktop, while on a mobile phone they serve as the background for the home screen. Though most devices come with a default background image, modern devices usually allow users to manually change the background image.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/wallpaper/#community","title":"Community","text":""},{"location":"pensieve/wallpaper/#sites","title":"Sites","text":"<ul> <li>Wallhaven \u2b50</li> </ul>"},{"location":"pensieve/web-browsers/","title":"Web browsers","text":"<p>A web browser (also referred to as an Internet browser or simply a browser) is application software for accessing the World Wide Web or a local website. When a user requests a web page from a particular website, the web browser retrieves its files from a web server and then graphically renders the page on the user\u2019s screen.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/web-browsers/#examples","title":"Examples","text":"<ul> <li>Brave</li> <li>Firefox<ul> <li>LibreWolf \u2b50</li> </ul> </li> <li>Google Chrome</li> <li>Microsoft Edge</li> <li>Mullvad Browser</li> <li>Opera</li> <li>Pale Moon</li> <li>Polypane</li> <li>qutebrowser</li> <li>Safari</li> <li>Tor Browser</li> <li>Yandex Browser</li> </ul>"},{"location":"pensieve/web-browsers/#resources","title":"Resources","text":""},{"location":"pensieve/web-browsers/#relevant","title":"Relevant","text":"<ul> <li>How to choose a browser for everyday use?</li> <li>Privacy Guides: Desktop Browsers</li> <li>PrivacyTests</li> </ul>"},{"location":"pensieve/web-browsers/#outdated","title":"Outdated","text":"<ul> <li>PRISM Break: Web Browsers</li> </ul>"},{"location":"pensieve/web-framework/","title":"Web framework","text":"<p>A web framework (WF) or web application framework (WAF) is a software framework that is designed to support the development of web applications including web services, web resources, and web APIs. Web frameworks provide a standard way to build and deploy web applications on the World Wide Web. Web frameworks aim to automate the overhead associated with common activities performed in web development. For example, many web frameworks provide libraries for database access, templating frameworks, and session management, and they often promote code reuse. Although they often target development of dynamic web sites, they are also applicable to static websites.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/web-framework/#examples","title":"Examples","text":"<ul> <li>Fresh</li> <li>Leptos</li> <li>Solid</li> <li>Svelte</li> </ul>"},{"location":"pensieve/web-framework/#resources","title":"Resources","text":"<ul> <li><code>js-framework-benchmark</code> \u2b50</li> </ul>"},{"location":"pensieve/web-search-engine/","title":"Web search engine","text":"<p>A web search engine is a software system designed to carry out web searches. They search the World Wide Web in a systematic way for particular information specified in a textual web search query. The search results are generally presented in a line of results, often referred to as search engine results pages (SERPs). The information may be a mix of links to web pages, images, videos, infographics, articles, research papers, and other types of files. Some search engines also mine data available in databases or open directories. Unlike web directories, which are maintained only by human editors, search engines also maintain real-time information by running an algorithm on a web crawler. Any internet-based content that can\u2019t be indexed and searched by a web search engine falls under the category of deep web.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/web-search-engine/#examples","title":"Examples","text":"<ul> <li>Bing (For-profit, own index)</li> <li>Brave Search (For-profit, own index)</li> <li>DuckDuckGo (For-profit; uses Bing\u2019s index)</li> <li>Ecosia (Non-profit, uses Bing\u2019s index)</li> <li>Google (For-profit, own index)</li> <li>mwmbl (Non-profit, own index, open source)</li> <li>searx (Metasearch engine, open source)<ul> <li>SearXNG (Metasearch engine, open source) \u2b50</li> </ul> </li> <li>Startpage (For-profit, uses Google\u2019s index)</li> <li>YaCy (Peer-to-peer / decentralized, shared index, open source)</li> </ul>"},{"location":"pensieve/web-search-engine/#resources","title":"Resources","text":"<ul> <li>Search Engines - which one to choose?</li> </ul>"},{"location":"pensieve/webassembly/","title":"WebAssembly","text":"<p>WebAssembly (sometimes abbreviated Wasm) defines a portable binary-code format and a corresponding text format for executable programs as well as software interfaces for facilitating interactions between such programs and their host environment.</p> <p>The main goal of WebAssembly is to enable high-performance applications on web pages, \u201cbut it does not make any Web-specific assumptions or provide Web-specific features, so it can be employed in other environments as well.\u201d It is an open standard and aims to support any language on any operating system, and in practice all of the most popular languages already have at least some level of support.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/webassembly/#sites","title":"Sites","text":"<ul> <li>WebAssembly \u2b50</li> </ul>"},{"location":"pensieve/webassembly/#standards-and-interfaces","title":"Standards and interfaces","text":"<ul> <li>Component Model: A module interface<ul> <li>WASI: The WebAssembly System Interface<ul> <li><code>wasi-nn</code>: Neural Network proposal for WASI</li> <li>WAGI: WebAssembly Gateway Interface</li> </ul> </li> </ul> </li> <li>Extism: The Universal Plug-in System</li> </ul>"},{"location":"pensieve/webassembly/#example-modules","title":"Example modules","text":"<ul> <li>Wavacity: A free, open source audio editor for the web</li> </ul>"},{"location":"pensieve/webassembly/#runtimes","title":"Runtimes","text":"<ul> <li>Wasm3</li> <li>WasmEdge</li> <li>Wasmer</li> <li>Wasmtime</li> <li>WebAssembly Micro Runtime (WAMR)</li> </ul>"},{"location":"pensieve/webassembly/#toolchains","title":"Toolchains","text":"<ul> <li>Binaryen: Optimizer and compiler/toolchain library for WebAssembly</li> <li>Cranelift: A low-level retargetable code generator. It translates a target-independent intermediate representation into executable machine code</li> <li>Emscripten: A complete compiler toolchain to WebAssembly, using LLVM, with a special focus on speed, size, and the Web platform</li> <li>Wasienv: WASI Development Toolchain for C/C++</li> </ul>"},{"location":"pensieve/webassembly/#tools","title":"Tools","text":"<ul> <li><code>wasm-pack</code>: Rust to Wasm workflow tool</li> </ul>"},{"location":"pensieve/webassembly/#community","title":"Community","text":""},{"location":"pensieve/webassembly/#forums","title":"Forums","text":"<ul> <li>Wasm Builders</li> </ul>"},{"location":"pensieve/webassembly/#companies-and-organizations","title":"Companies and organizations","text":"<ul> <li>Bytecode Alliance</li> <li>Fermyon</li> </ul>"},{"location":"pensieve/webassembly/#news","title":"News","text":"<ul> <li>WebAssembly Weekly</li> </ul>"},{"location":"pensieve/webassembly/#showcase","title":"Showcase","text":"<ul> <li>Made with WebAssembly</li> </ul>"},{"location":"pensieve/webassembly/#resources","title":"Resources","text":""},{"location":"pensieve/webassembly/#text","title":"Text","text":"<ul> <li>Wasm By Example</li> <li>Wasmer vs. Wasmtime</li> <li>[2022] Avoiding allocations in Rust to shrink Wasm modules \u2b50</li> <li>[2022] Isolates, microVMs, and WebAssembly</li> <li>[2022] Performance Comparison between WASM/Yew and JavaScript/React \u2014 Part 1</li> <li>[2022] Performance Comparison between WASM/Yew and JavaScript/React \u2014 Part 2</li> <li>[2022] Recommendations when publishing a Wasm library \u2b50</li> <li>[2022] The Go WebAssembly ABI at a Low Level</li> <li>[2022] The Promise of WASM</li> <li>[2022] The WebAssembly Component Model</li> <li>[2022] WebAssembly: The Future Looks Bright \u2b50</li> <li>[2022] Why WebAssembly Belongs Outside the Browser</li> <li>[2020] Can WASM become the new Docker?</li> </ul>"},{"location":"pensieve/webassembly/#video","title":"Video","text":"<ul> <li>[2022] Compile WebAssembly on Linux to native Windows using Wasmer &amp; Zig</li> <li>[2022] Rust &amp; Wasm (Safe and fast web development)</li> <li>[2020] WebAssembly and the Elusive Universal Binary</li> </ul>"},{"location":"pensieve/website/","title":"Website","text":"<p>A website (also written as a web site) is a collection of web pages and related content that is identified by a common domain name and published on at least one web server.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/website/#resources","title":"Resources","text":"<ul> <li>[2022] Rewriting the Modern Web in Rust</li> <li>[2022] My Blog is Hilariously Overengineered to the Point People Think it\u2019s a Static Site</li> </ul>"},{"location":"pensieve/widget-toolkit/","title":"Widget toolkit","text":"<p>A widget toolkit, widget library, GUI toolkit, or UX library is a library or a collection of libraries containing a set of graphical control elements (called widgets) used to construct the graphical user interface (GUI) of programs.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/widget-toolkit/#examples","title":"Examples","text":"<ul> <li>FLTK</li> <li>GTK</li> <li>Iced</li> <li>Qt</li> </ul>"},{"location":"pensieve/window-managers/","title":"Window managers","text":"<p>A window manager is system software that controls the placement and appearance of windows within a windowing system in a graphical user interface. Most window managers are designed to help provide a desktop environment. They work in conjunction with the underlying graphical system that provides required functionality\u2014support for graphics hardware, pointing devices, and a keyboard\u2014and are often written and created using a widget toolkit.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/window-managers/#examples","title":"Examples","text":""},{"location":"pensieve/window-managers/#wayland","title":"Wayland","text":"<ul> <li>Hyprland</li> <li>River</li> <li>Sway</li> </ul>"},{"location":"pensieve/windows-subsystem-for-linux/","title":"Windows Subsystem for Linux","text":"<p>Windows Subsystem for Linux (WSL) is a compatibility layer for running Linux binary executables (in ELF format) natively on Windows 10, Windows 11, and Windows Server 2019.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/windows-subsystem-for-linux/#documentation","title":"Documentation","text":"<ul> <li>Windows Subsystem for Linux Documentation \u2b50</li> </ul>"},{"location":"pensieve/wireguard/","title":"WireGuard","text":"<p>WireGuard is a communication protocol and free and open-source software that implements encrypted virtual private networks (VPNs), and was designed with the goals of ease of use, high speed performance, and low attack surface. It aims for better performance and more power than IPsec and OpenVPN, two common tunneling protocols. The WireGuard protocol passes traffic over UDP.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/wireguard/#sites","title":"Sites","text":"<ul> <li>WireGuard \u2b50</li> </ul>"},{"location":"pensieve/wireguard/#utilities","title":"Utilities","text":"<ul> <li><code>angristan/wireguard-install</code>: WireGuard VPN installer for Linux servers \u2b50</li> </ul>"},{"location":"pensieve/wireguard/#related","title":"Related","text":"<ul> <li><code>innernet</code>: A private network system that uses WireGuard under the hood</li> </ul>"},{"location":"pensieve/writing/","title":"Writing","text":"<p>Writing is a neuropsychological activity involving cognitive and physical processes and the use of writing systems to structure and translate human thoughts into persistent representations of human language. A system of writing relies on many of the same semantic structures as the language it represents, such as lexicon and syntax, with the added dependency of a system of symbols representing that language\u2019s phonology and morphology. Nevertheless, written language may take on characteristics distinctive from any available in spoken language.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/zig/","title":"Zig","text":"<p>Zig is an imperative, general-purpose, statically typed, compiled system programming language designed by Andrew Kelley. The language is designed for \u201crobustness, optimality and maintainability\u201d, supporting compile-time generics, reflection and evaluation, cross-compilation and manual memory management. A major goal of the language is to improve upon the C language, while also taking inspiration from Rust, among others. Zig has many features for low-level programming, notably packed structs (structs without padding between fields), arbitrary width integers and multiple pointer types.</p> <p>Read more on Wikipedia.</p>"},{"location":"pensieve/zig/#official","title":"Official","text":""},{"location":"pensieve/zig/#sites","title":"Sites","text":"<ul> <li>Zig \u2b50</li> <li>Zig Performance</li> </ul>"},{"location":"pensieve/zig/#documentation","title":"Documentation","text":"<ul> <li>Zig Language Reference \u2b50<ul> <li>Source code</li> </ul> </li> <li>Zig Standard Library Reference</li> </ul>"},{"location":"pensieve/zig/#community","title":"Community","text":""},{"location":"pensieve/zig/#documentation_1","title":"Documentation","text":"<ul> <li>Ikrima\u2019s Gamedev Guide: \u2b50<ul> <li>Zig Build</li> <li>Zig Crash Course</li> <li>Zig Metaprogramming</li> <li>Zig Testing</li> </ul> </li> </ul>"},{"location":"pensieve/zig/#applications","title":"Applications","text":"<ul> <li>Pixi: Pixel art editor made with Zig</li> </ul>"},{"location":"pensieve/zig/#coding-conventions","title":"Coding conventions","text":"<ul> <li>Tiger Style \u2b50</li> </ul>"},{"location":"pensieve/zig/#courses","title":"Courses","text":"<ul> <li>Ziglings \u2b50</li> </ul>"},{"location":"pensieve/zig/#forums","title":"Forums","text":"<ul> <li>Zig NEWS \u2b50</li> <li>Ziggit \u2b50</li> </ul>"},{"location":"pensieve/zig/#groups","title":"Groups","text":"<ul> <li>Zig Embedded Group</li> </ul>"},{"location":"pensieve/zig/#news","title":"News","text":"<ul> <li>Zig monthly \u2b50</li> </ul>"},{"location":"pensieve/zig/#sites_1","title":"Sites","text":"<ul> <li>Learning Zig</li> <li>This Week In Zig</li> <li>Zig by Example</li> <li><code>zigbin.io</code></li> <li><code>ziglearn.org</code> \u2b50</li> </ul>"},{"location":"pensieve/zig/#libraries","title":"Libraries","text":""},{"location":"pensieve/zig/#discover","title":"Discover","text":"<ul> <li><code>astrolabe.pm</code></li> <li><code>zpm</code></li> </ul>"},{"location":"pensieve/zig/#list","title":"List","text":"<ul> <li>BYOL: A memory-efficient, straggler-avoiding, cache-friendly scheduler</li> <li><code>libxev</code>: A cross-platform event loop \u2b50</li> <li>Mecha: A parser combinator library for Zig</li> <li><code>zcirc</code>: A dynamic circular buffer allocator for Zig</li> <li><code>zig-gamedev</code>: Building game development ecosystem for @ziglang! \u2b50</li> <li>[2020] <code>interface.zig</code>: Dynamic dispatch for zig made easy</li> </ul>"},{"location":"pensieve/zig/#tools","title":"Tools","text":"<ul> <li>Gyro: A Zig package manager with an index, build runner, and build dependencies</li> <li>Zigmod: A package manager for the Zig programming language \u2b50</li> <li>Zigup: Download and manage Zig compilers \u2b50</li> </ul>"},{"location":"pensieve/zig/#resources","title":"Resources","text":""},{"location":"pensieve/zig/#text","title":"Text","text":"<ul> <li>Awesome Zig \u2b50</li> <li>The Algorithms: Zig: All algorithms implemented in Zig</li> <li>Zig Vs C - Minimal HTTP server \u2b50</li> <li>[2023] Anytype Antics</li> <li>[2023] Code study: interface idioms/patterns in zig standard libraries \u2b50</li> <li>[2023] Data driven polymorphism</li> <li>[2023] DNNs from Scratch in Zig</li> <li>[2023] Errors and Zig</li> <li>[2023] Meet Zig: The modern alternative to C \u2b50</li> <li>[2023] Problems of C, and how Zig addresses them</li> <li>[2023] Regular Expressions in Zig</li> <li>[2023] Sneaky Error Payloads</li> <li>[2023] The Curious Case of a Memory Leak in a Zig program</li> <li>[2023] The Seamstress Event Loop In Zig</li> <li>[2023] When should I use an UNTAGGED union?</li> <li>[2023] When Zig is safer and faster than Rust \u2b50</li> <li>[2023] When Zig Outshines Rust - Memory Efficient Enum Arrays \u2b50</li> <li>[2023] Writing JSON to a custom output in Zig</li> <li>[2023] Zig And Rust \u2b50</li> <li>[2023] Zig Bits:<ul> <li>0x1: Returning slices from functions</li> <li>0x2: Using <code>defer</code> to defeat memory leaks</li> <li>0x3: Mastering project management in Zig</li> <li>0x4: Building an HTTP client/server from scratch</li> </ul> </li> <li>[2023] Zig build system</li> <li>[2023] Zig Package Manager \u2013 WTF is Zon</li> <li>[2023] Zig Quirks \u2b50</li> <li>[2023] Ziggifying Kilo</li> <li>[2022] A Refresh for Zig Programmers and Dabblers \u2b50</li> <li>[2022] Building Zig structs at Compile Time \u2b50</li> <li>[2022] Cool Zig Patterns - Gotta alloc fast \u2b50</li> <li>[2022] Easy Interfaces with Zig 0.10.0</li> <li>[2022] Hot-code reloading on macOS/arm64 with Zig</li> <li>[2022] How (memory) safe is Zig?</li> <li>[2022] NuttX RTOS for PinePhone: Render Graphics in Zig</li> <li>[2022] Some Thoughts on Zig</li> <li>[2022] The Zig and Go Programming Showdown! \u2b50</li> <li>[2022] What Makes the Zig Programming Language Unique? \u2b50</li> <li>[2022] Zig Is Self-Hosted Now, What\u2019s Next?</li> <li>[2021] A Review of the Zig Programming Language (using Advent of Code 2021)</li> <li>[2021] An intro to Zig\u2019s integer casting for C programmers</li> <li>[2021] Async CPU bound workers in Zig \u2b50</li> <li>[2021] C/C++/Zig Series \u2b50</li> <li>[2021] Code Coverage for Zig</li> <li>[2021] Preventing integer overflow in Zig</li> <li>[2021] Resource efficient Thread Pools with Zig \u2b50</li> <li>[2021] Struct of Arrays (SoA) in Zig? Easy &amp; in Userland!</li> <li>[2021] Why I rewrote my Rust keyboard firmware in Zig: consistency, mastery, and fun (HN)</li> <li>[2021] Zig Build Explained \u2b50</li> <li>[2021] Zig, Parser Combinators - and Why They\u2019re Awesome</li> <li>[2020] Assorted thoughts on Zig (and Rust) \u2b50</li> <li>[2020] Understanding the Zig Programming Language \u2b50</li> <li>[2020] What is Zig\u2019s \u201cColorblind\u201d Async/Await?</li> </ul>"},{"location":"pensieve/zig/#video","title":"Video","text":"<ul> <li>Zig SHOWTIME</li> <li>[2023] 3 things you might like about Zig</li> <li>[2023] Intro to the Zig Programming Language</li> <li>[2023] Using Zig to write native extension modules for Python \u2b50</li> <li>[2023] Zig feedback: real-life example with LibIPC \u2b50</li> <li>[2022] Gettin\u2019 Ziggy Wit It - Why I am convinced Zig is the C successor we\u2019ve been waiting for</li> <li>[2022] Zig Roadmap 2023</li> <li>[2021] Taking the warts off C, with Andrew Kelley, creator of the Zig Software Foundation \u2b50</li> <li>[2021] Zig language: a WAY better C! \u2b50</li> <li>[2020] Interview with Zig language creator Andrew Kelley</li> <li>[2019] The Road to Zig 1.0 - Andrew Kelley</li> <li>[2018] Zig: A programming language designed for robustness, optimality, and clarity \u2b50</li> </ul>"}]}